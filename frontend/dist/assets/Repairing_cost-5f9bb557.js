import{P as T}from"./plotly.min-0072426f.js";import{_ as D,r as f,o as P,c as M,e as h,l as g,q as A,V as S,d as $,k as _,b as p,m as w,n as v,f as B,v as H,a as V}from"./index-3caee4d8.js";import{a as R}from"./handsontable.full-31d5ba9c.js";import{u as b}from"./userStore-9431a957.js";const J={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=(await _.get("http://localhost:3000/RepairingCost")).data;for(const e of o){const a=e.ActualPM02.map(n=>({x:n.month,y:n.cost}));this.RepairingCostData.push({plant:e.plant,data:a})}}catch(t){throw console.error("Error fetching RepairingCost data:",t),t}})().then(()=>{const t=this.RepairingCostData.map((s,u)=>{const i=s.data.map(m=>m.x),l=s.data.map(m=>m.y);return{x:i,y:l,name:s.plant,type:"scatter",mode:"lines+markers"}}),o={x:["planned","actual"],y:[1e5,15e4],type:"bar",name:"PM02 Total"},e={x:["planned","actual"],y:[1e5,15e4],type:"bar",name:"PM03 Total"},r={x:["planned","actual"],y:[1e5,15e4],type:"bar",name:"PM04 Total"},a={x:["planned","actual"],y:[1e5,15e4],type:"bar",name:"PM05 Total"},n={height:350,width:900,barmode:"stack"};T.newPlot("Totalrpc",[...t,o,e,r,a],n)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},W=p("div",{id:"Totalrpc"},null,-1);function K(c,t,o,e,r,a){const n=f("v-flex");return P(),M("div",null,[h(n,null,{default:g(()=>[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("Total Graph (Planned vs Actual)")]),_:1}),W]),_:1})]),_:1})])}const U=D(J,[["render",K]]);w();function q(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const G={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},Q=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/PPM02ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.plannedPM02List.flatMap(d=>d.plannedPM02.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant"},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>q(G,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})}},components:{HotTable:R}}),X=Q,Z={id:"PM02plannedtable"};function tt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",Z,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"])])}const at=D(X,[["render",tt]]),et={data(){return{RepairingCostDataPlan:[],RepairingCostDataActual:[]}},mounted(){(async()=>{try{const o=(await _.get("http://localhost:3000/RepairingCost")).data;for(const e of o){const r=e.PM02forecast,a=e.TotalActualCost,n=r.map(u=>({x:u.year,y:u.cost})),s=a.map(u=>({x:u.year,y:u.cost}));this.RepairingCostDataPlan.push({plant:e.plant,data:n}),this.RepairingCostDataActual.push({plant:e.plant,data:s})}}catch(t){throw console.error("Error fetching RepairingCost data:",t),t}})().then(()=>{const t=this.RepairingCostDataPlan.map((e,r)=>{const a=e.data.map(l=>l.x),n=e.data.map(l=>l.y),s=this.RepairingCostDataActual[r].data.map(l=>l.y);let u={x:a,y:n,name:e.plant,type:"scatter"},i={x:a,y:s,name:e.plant,type:"bar"};return[u,i]}).flat(),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("PvsA",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},ot=p("div",{id:"PvsA"},null,-1);function nt(c,t,o,e,r,a){return P(),M("div",null,[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("Planned VS Actual cost")]),_:1}),ot]),_:1})])}const rt=D(et,[["render",nt]]);w();function E(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const N={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},st=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric",renderer:(c,t,o,e,r,a,n)=>E(N,c,t,o)}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/calculation/summedByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const a=e.data.flatMap(i=>i.summedActualCostList.map(l=>({plant:l.plant,year:l.year,jan:parseFloat(l.sumJan)||0,feb:parseFloat(l.sumFeb)||0,mar:parseFloat(l.sumMar)||0,apr:parseFloat(l.sumApr)||0,may:parseFloat(l.sumMay)||0,jun:parseFloat(l.sumJun)||0,jul:parseFloat(l.sumJul)||0,aug:parseFloat(l.sumAug)||0,sep:parseFloat(l.sumSep)||0,oct:parseFloat(l.sumOct)||0,nov:parseFloat(l.sumNov)||0,dec:parseFloat(l.sumDec)||0,commitment:parseFloat(l.sumCommitment)||0})));console.log("Table Data:",a);const n=[{data:"plant"},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(i,l,d,m,y,C,x)=>E(N,i,l,d)}],s=Array.from({length:5},()=>({})),u=a.concat(s);this.$refs.hotTableComponent.hotInstance.updateSettings({data:u,columns:n})}).catch(e=>{console.error("Error fetching data:",e)})}},components:{HotTable:R}}),ct=st,lt={id:"actual_summary_table"};function ut(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",lt,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"])])}const it=D(ct,[["render",ut]]),pt=v({data(){const c=new Date().getFullYear(),t=Array.from({length:11},(r,a)=>c+a),o=["Plant",...t.map(r=>r.toString())],e=[{data:"plant"},...t.map(r=>({data:r}))];return{hotSettings:{data:[[]],colHeaders:o,columns:e,width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){_.get("http://localhost:3000/RepairingCost",{method:"GET",mode:"no-cors",headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},withCredentials:!0,credentials:"same-origin"}).then(c=>{const t=c.data,o=t.map(s=>s.plant),e=t.reduce((s,u)=>(u.TotalActualCost.forEach(i=>{s[i.year]||(s[i.year]=[]),s[i.year].push(i.cost)}),s),{}),r=o.map((s,u)=>{const i={plant:s};return Object.keys(e).forEach(l=>{i[l]=e[l][u]||0}),i}),a=Array.from({length:5},()=>({})),n=r.concat(a);this.$refs.hotTableComponent.hotInstance.updateSettings({data:n})}).catch(c=>console.log("error"))}},components:{HotTable:R}}),dt={id:"Total actual cost"};function mt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",dt,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"])])}const ht=D(pt,[["render",mt]]),yt=v({data(){const c=new Date().getFullYear(),t=Array.from({length:11},(r,a)=>c+a),o=["Plant",...t.map(r=>r.toString())],e=[{data:"plant"},...t.map(r=>({data:r}))];return{hotSettings:{data:[[]],colHeaders:o,columns:e,width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){_.get("http://localhost:3000/RepairingCost",{method:"GET",mode:"no-cors",headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},withCredentials:!0,credentials:"same-origin"}).then(c=>{const t=c.data,o=t.map(s=>s.plant),e=t.reduce((s,u)=>(u.PM02forecast.forEach(i=>{s[i.year]||(s[i.year]=[]),s[i.year].push(i.cost)}),s),{}),r=o.map((s,u)=>{const i={plant:s};return Object.keys(e).forEach(l=>{i[l]=e[l][u]||0}),i}),a=Array.from({length:5},()=>({})),n=r.concat(a);this.$refs.hotTableComponent.hotInstance.updateSettings({data:n})}).catch(c=>console.log("error"))}},components:{HotTable:R}}),ft={id:"Forecast of PM02"};function gt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",ft,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"])])}const Ct=D(yt,[["render",gt]]),_t={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=(await _.get("http://localhost:3000/RepairingCost")).data;for(const e of o){const a=e.PlannedPM02.map(n=>({x:n.month,y:n.cost}));this.RepairingCostData.push({plant:e.plant,data:a})}}catch(t){throw console.error("Error fetching RepairingCost data:",t),t}})().then(()=>{const t=this.RepairingCostData.map((e,r)=>{const a=e.data.map(u=>u.x),n=e.data.map(u=>u.y);return{x:a,y:n,name:e.plant}}),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("rpcPM02P",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},bt=p("div",{id:"rpcPM02P"},null,-1);function Dt(c,t,o,e,r,a){return P(),M("div",null,[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("PM02 Planned cost")]),_:1}),bt]),_:1})])}const Pt=D(_t,[["render",Dt]]);w();function Mt(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const $t={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},vt=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/PPM02ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.plannedPM02List.flatMap(d=>d.plannedPM02.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant"},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>Mt($t,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})}},components:{HotTable:R}}),Rt=vt,xt={id:"PM02plannedtable"};function wt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",xt,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"])])}const jt=D(Rt,[["render",wt]]),Tt={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=b().companyCode;if(!o){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/repairingCost/APM02ByCompany/?format=json&companyCode=${o}`,r=await _.get(e);console.log("Fetched RepairingCost Data:",r.data);let a=r.data;for(const n of a)for(const s of n.actualPM02List)s.actualPM02.forEach(i=>{const l=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment","totalCost"];let d=[];l.forEach(m=>{i[m]&&d.push({month:m,cost:parseFloat(i[m])})}),this.RepairingCostData.push({plant:s.plant,data:d})})}catch(t){console.error("Error fetching RepairingCost data:",t)}})().then(()=>{const t=this.RepairingCostData.map(e=>{const r=e.data.map(s=>s.month),a=e.data.map(s=>s.cost);return{x:r,y:a,name:e.plant}}),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("rpcPM02A",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},At=p("div",{id:"rpcPM02A"},null,-1);function St(c,t,o,e,r,a){const n=f("v-flex");return P(),M("div",null,[h(n,null,{default:g(()=>[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("PM02 Actual cost")]),_:1}),At]),_:1})]),_:1})])}const kt=D(Tt,[["render",St]]);w();function Et(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const Nt={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},Ft=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/APM02ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.actualPM02List.flatMap(d=>d.actualPM02.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant",type:"text"},{data:"year",type:"numeric"},{data:"jan",type:"numeric"},{data:"feb",type:"numeric"},{data:"mar",type:"numeric"},{data:"apr",type:"numeric"},{data:"may",type:"numeric"},{data:"jun",type:"numeric"},{data:"jul",type:"numeric"},{data:"aug",type:"numeric"},{data:"sep",type:"numeric"},{data:"oct",type:"numeric"},{data:"nov",type:"numeric"},{data:"dec",type:"numeric"},{data:"commitment",type:"numeric"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>Et(Nt,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})},updateData:function(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=this.$refs.hotTableComponent.hotInstance.getData();let e={};o.forEach(a=>{let n=a[0];e[n]||(e[n]={plant:n,actualPM02:[]}),e[n].actualPM02.push({companyCode:t,plant:n,year:a[1],jan:a[2],feb:a[3],mar:a[4],apr:a[5],may:a[6],jun:a[7],aug:a[8],sep:a[9],oct:a[10],nov:a[11],dec:a[14],commitment:a[15],totalCost:a[15]})});let r={companyCode:t,actualPM02List:Object.values(e)};console.log("postData",r),_.post("http://127.0.0.1:8000/api/repairingCost/APM02ByCompany/",r).then(a=>{console.log("Data posted successfully",a.data)}).catch(a=>{console.error("Error in posting data",a)})}},components:{HotTable:R}}),It=Ft,Yt={id:"PM02actualtable"};function Lt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",Yt,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"]),p("button",{onClick:t[0]||(t[0]=(...s)=>c.updateData&&c.updateData(...s)),class:"controls"},"Update Data")])}const Ot=D(It,[["render",Lt]]),zt={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=b().companyCode;if(!o){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/repairingCost/APM03ByCompany/?format=json&companyCode=${o}`,r=await _.get(e);console.log("Fetched RepairingCost Data:",r.data);let a=r.data;for(const n of a)for(const s of n.actualPM03List)s.actualPM03.forEach(i=>{const l=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment","totalCost"];let d=[];l.forEach(m=>{i[m]&&d.push({month:m,cost:parseFloat(i[m])})}),this.RepairingCostData.push({plant:s.plant,data:d})})}catch(t){console.error("Error fetching RepairingCost data:",t)}})().then(()=>{const t=this.RepairingCostData.map(e=>{const r=e.data.map(s=>s.month),a=e.data.map(s=>s.cost);return{x:r,y:a,name:e.plant}}),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("rpcPM03",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},Bt=p("div",{id:"rpcPM03"},null,-1);function Ht(c,t,o,e,r,a){const n=f("v-flex");return P(),M("div",null,[h(n,null,{default:g(()=>[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("PM03 Actual cost")]),_:1}),Bt]),_:1})]),_:1})])}const Vt=D(zt,[["render",Ht]]);w();function Jt(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const Wt={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},Kt=v({data(){return{newPlantName:"",plantDropdownData:[],hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getPlantDropdownData(),this.getDataAxios()},methods:{async getPlantDropdownData(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}try{const o=await _.get(`http://127.0.0.1:8000/api/accounts/companyPlant/?companyCode=${t}`);this.plantDropdownData=o.data.flatMap(e=>e.plantList.map(r=>r.plant)),console.log("Fetched plantDropdownData:",this.plantDropdownData),this.hotSettings={...this.hotSettings,columns:this.hotSettings.columns.map((e,r)=>r===0?{...e,type:"dropdown",source:this.plantDropdownData}:e)},console.log("Updated hotSettings:",this.hotSettings)}catch(o){console.error("Error fetching dropdown data:",o)}},postNewPlant(){if(!this.newPlantName){alert("Please enter a plant name.");return}const t={companyCode:b().companyCode,plant:this.newPlantName};_.post("http://127.0.0.1:8000/api/accounts/plant/",t).then(o=>{console.log("Plant added successfully:",o.data)}).catch(o=>{console.error("Error in adding plant:",o)}),this.newPlantName=""},getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/APM03ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.actualPM03List.flatMap(d=>d.actualPM03.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant",type:"dropdown",source:this.plantDropdownData},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>Jt(Wt,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})},updateData:function(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=this.$refs.hotTableComponent.hotInstance.getData();let e={};o.forEach(a=>{let n=a[0];e[n]||(e[n]={plant:n,actualPM03:[]}),e[n].actualPM03.push({companyCode:t,plant:n,year:a[1],jan:a[2],feb:a[3],mar:a[4],apr:a[5],may:a[6],jun:a[7],jun:a[8],aug:a[9],sep:a[10],oct:a[11],nov:a[12],dec:a[13],commitment:a[14],totalCost:a[15]})});let r={companyCode:t,actualPM03List:Object.values(e)};console.log("postData",r),_.post("http://127.0.0.1:8000/api/repairingCost/APM03ByCompany/",r).then(a=>{console.log("Data posted successfully",a.data)}).catch(a=>{console.error("Error in posting data",a)})}},components:{HotTable:R}}),Ut=Kt,qt={id:"PM03actualtable"};function Gt(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",qt,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"]),p("button",{onClick:t[0]||(t[0]=(...s)=>c.updateData&&c.updateData(...s)),class:"controls"},"Update Data"),p("div",null,[B(p("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=s=>c.newPlantName=s),placeholder:"Enter new plant name"},null,512),[[H,c.newPlantName]]),p("button",{onClick:t[2]||(t[2]=(...s)=>c.postNewPlant&&c.postNewPlant(...s))},"Add New Plant")])])}const Qt=D(Ut,[["render",Gt]]),Xt={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=b().companyCode;if(!o){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/repairingCost/APM04ByCompany/?format=json&companyCode=${o}`,r=await _.get(e);console.log("Fetched RepairingCost Data:",r.data);let a=r.data;for(const n of a)for(const s of n.actualPM04List)s.actualPM04.forEach(i=>{const l=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment","totalCost"];let d=[];l.forEach(m=>{i[m]&&d.push({month:m,cost:parseFloat(i[m])})}),this.RepairingCostData.push({plant:s.plant,data:d})})}catch(t){console.error("Error fetching RepairingCost data:",t)}})().then(()=>{const t=this.RepairingCostData.map(e=>{const r=e.data.map(s=>s.month),a=e.data.map(s=>s.cost);return{x:r,y:a,name:e.plant}}),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("rpcPM04",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},Zt=p("div",{id:"rpcPM04"},null,-1);function ta(c,t,o,e,r,a){return P(),M("div",null,[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("PM04 Actual cost")]),_:1}),Zt]),_:1})])}const aa=D(Xt,[["render",ta]]);w();function ea(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const oa={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},na=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{addRow(){const c=this.$refs.hotTableComponent.hotInstance;c.alter("insert_row",c.countRows())},getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/APM04ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.actualPM04List.flatMap(d=>d.actualPM04.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant"},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>ea(oa,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})},updateData:function(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=this.$refs.hotTableComponent.hotInstance.getData();let e={};o.forEach(a=>{let n=a[0];e[n]||(e[n]={plant:n,actualPM04:[]}),e[n].actualPM04.push({companyCode:t,plant:n,year:a[1],jan:a[2],feb:a[3],mar:a[4],apr:a[5],may:a[6],jun:a[7],aug:a[8],sep:a[9],oct:a[10],nov:a[11],dec:a[14],commitment:a[15],totalCost:a[15]})});let r={companyCode:t,actualPM04List:Object.values(e)};console.log("postData",r),_.post("http://127.0.0.1:8000/api/repairingCost/APM04ByCompany/",r).then(a=>{console.log("Data posted successfully",a.data)}).catch(a=>{console.error("Error in posting data",a)})}},components:{HotTable:R}}),ra=na,sa={id:"PM03actualtable"};function ca(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",sa,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"]),p("button",{onClick:t[0]||(t[0]=(...s)=>c.updateData&&c.updateData(...s)),class:"controls"},"Update Data")])}const la=D(ra,[["render",ca]]),ua={data(){return{RepairingCostData:[]}},mounted(){(async()=>{try{const o=b().companyCode;if(!o){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/repairingCost/APM05ByCompany/?format=json&companyCode=${o}`,r=await _.get(e);console.log("Fetched RepairingCost Data:",r.data);let a=r.data;for(const n of a)for(const s of n.actualPM05List)s.actualPM05.forEach(i=>{const l=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment","totalCost"];let d=[];l.forEach(m=>{i[m]&&d.push({month:m,cost:parseFloat(i[m])})}),this.RepairingCostData.push({plant:s.plant,data:d})})}catch(t){console.error("Error fetching RepairingCost data:",t)}})().then(()=>{const t=this.RepairingCostData.map(e=>{const r=e.data.map(s=>s.month),a=e.data.map(s=>s.cost);return{x:r,y:a,name:e.plant}}),o={height:500,width:600,title:"Repairing Cost"};T.newPlot("rpcPM05",t,o)}).catch(t=>{throw console.error("Error plotting Repairing Cost graph:",t),t})}},ia=p("div",{id:"rpcPM05"},null,-1);function pa(c,t,o,e,r,a){const n=f("v-flex");return P(),M("div",null,[h(n,null,{default:g(()=>[h(A,null,{default:g(()=>[h(S,null,{default:g(()=>[$("PM05 Actual cost")]),_:1}),ia]),_:1})]),_:1})])}const da=D(ua,[["render",pa]]);w();function ma(c,t,o,e,r,a,n,s){const u=t.getDataAtRow(e),i=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"].map(l=>parseFloat(u[c[l]])||0).reduce((l,d)=>l+d,0);return o.innerText=i.toFixed(2),o}const ha={jan:3,feb:4,mar:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,commitment:13},ya=v({data(){return{hotSettings:{data:[["","","","","","","","","","","","",""]],colHeaders:["Plant","Year","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","commitment","Total"],columns:[{type:"text"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"},{type:"numeric"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{addRow(){const c=this.$refs.hotTableComponent.hotInstance;c.alter("insert_row",c.countRows())},getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/repairingCost/APM05ByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data,a=["year","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","commitment"],n=r.flatMap(l=>l.actualPM05List.flatMap(d=>d.actualPM05.map(m=>{const y={plant:d.plant,year:m.year};return a.forEach(C=>{y[C]=parseFloat(m[C])||0}),y.totalCost=parseFloat(m.totalCost)||0,y}))),s=[{data:"plant"},{data:"year"},{data:"jan"},{data:"feb"},{data:"mar"},{data:"apr"},{data:"may"},{data:"jun"},{data:"jul"},{data:"aug"},{data:"sep"},{data:"oct"},{data:"nov"},{data:"dec"},{data:"commitment"},{data:"total",readOnly:!0,renderer:(l,d,m,y,C,x,j)=>ma(ha,l,d,m)}];console.log("Table Data:",n);const u=Array.from({length:5},()=>({})),i=n.concat(u);this.$refs.hotTableComponent.hotInstance.updateSettings({data:i,columns:s})}).catch(e=>{console.error("Error fetching data:",e)})},updateData:function(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=this.$refs.hotTableComponent.hotInstance.getData();let e={};o.forEach(a=>{let n=a[0];e[n]||(e[n]={plant:n,actualPM05:[]}),e[n].actualPM05.push({companyCode:t,plant:n,year:a[1],jan:a[2],feb:a[3],mar:a[4],apr:a[5],may:a[6],jun:a[7],aug:a[8],sep:a[9],oct:a[10],nov:a[11],dec:a[14],commitment:a[15],totalCost:a[15]})});let r={companyCode:t,actualPM05List:Object.values(e)};console.log("postData",r),_.post("http://127.0.0.1:8000/api/repairingCost/APM05ByCompany/",r).then(a=>{console.log("Data posted successfully",a.data)}).catch(a=>{console.error("Error in posting data",a)})}},components:{HotTable:R}}),fa=ya,ga={id:"PM03actualtable"};function Ca(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",ga,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"]),p("button",{onClick:t[0]||(t[0]=(...s)=>c.updateData&&c.updateData(...s)),class:"controls"},"Update Data")])}const _a=D(fa,[["render",Ca]]);w();const ba=v({data(){return{hotSettings:{data:[["PlantA","Dryer","blower","2018-10-20","Change bearing","5000","5","true","BomCode-1","58090","111222","","遅延","true","","","","","","","","","","true"],["PlantA","Dryer","blower","2018-10-20","Change bearing","5000","5","true","BomCode-1","58090","111222","","遅延","true","","","","","","","","","","true"],["PlantA","Dryer","blower","2018-10-20","Change bearing","5000","5","true","BomCode-1","58090","111222","","遅延","true","","","","","","","","","","truecolHeaders:this.generateColHeaders(),columns:[{data:"taskListNo",type:"text",readOnly:!0},{data:"plant",type:"text"},{data:"equipment",type:"text"},{data:"machineName",type:"text"},{data:"typicalLatestDate",type:"date",dateFormat:"YYYY-MM-DD",correctFormat:!1,readOnly:!0},{data:"typicalTaskName",type:"text"},{data:"typicalTaskCost",type:"numeric"},{data:"typicalConstPeriod",type:"numeric"},{data:"multiTasking",type:"checkbox",className:"htCenter"},{data:"bomCode",type:"text",readOnly:!0},{data:"bomCodeCost",type:"numeric",readOnly:!0},{data:"totalCost",type:"numeric"},{data:"typicalNextEventDate",type:"numeric",readOnly:!0},{data:"typicalSituation",type:"text",readOnly:!0},{data:"thisYear",type:"checkbox",className:"htCenter"},{data:"thisYear1later",type:"checkbox",className:"htCenter"},{data:"thisYear2later",type:"checkbox",className:"htCenter"},{data:"thisYear3later",type:"checkbox",className:"htCenter"},{data:"thisYear4later",type:"checkbox",className:"htCenter"},{data:"thisYear5later",type:"checkbox",className:"htCenter"},{data:"thisYear6later",type:"checkbox",className:"htCenter"},{data:"thisYear7later",type:"checkbox",className:"htCenter"},{data:"thisYear8later",type:"checkbox",className:"htCenter"},{data:"thisYear9later",type:"checkbox",className:"htCenter"},{data:"thisYear10later",type:"checkbox",className:"htCenter"}],width:"100%",height:"auto",contextMenu:!0,autoWrapRow:!0,autoWrapCol:!0,fixedColumnsStart:2,fixedRowsTop:2,manualColumnFreeze:!0,manualColumnResize:!0,manualRowResize:!0,filters:!0,dropdownMenu:!0,comments:!0,fillHandle:{autoInsertRow:!0},licenseKey:"non-commercial-and-evaluation"}}},created(){this.getDataAxios()},methods:{generateColHeaders(){const c=new Date().getFullYear();return["TaskListNo","Plant","Equipment","MachineName","LatestDate<br>PM","TaskName","TaskLabor<br>Cost","TaskConstruction<br>Period","Multi<br>Tasking","BomCode","BomCost","TotalCost","Next Even<br>date","Situation",...Array.from({length:11},(o,e)=>(c+e).toString())]},getDataAxios(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=`http://127.0.0.1:8000/api/task/taskListByCompany/?format=json&companyCode=${t}`;_.get(o,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(e=>{const r=e.data.flatMap(s=>s.taskList);console.log("Fetched Task List Data:",r);const a=Array.from({length:20},()=>({})),n=r.concat(a);this.$refs.hotTableComponent.hotInstance.updateSettings({data:n})}).catch(e=>{console.error("Error fetching data:",e)})},updateData(){const t=b().companyCode;if(!t){console.error("Error: No company code found for the user.");return}const o=this.$refs.hotTableComponent.hotInstance,e=o.countRows();let r=[];for(let s=0;s<e;s++){let u=o.getDataAtRow(s),i=s+1,l={companyCode:t,taskListNo:i,plant:u[1],equipment:u[2],machineName:u[3],typicalLatestDatePM:u[4],typicalTaskName:u[5],typicalTaskCost:u[6],typicalConstPeriod:u[7],multiTasking:u[8],bomCode:u[9],bomCodeCost:u[10],totalCost:u[11],typicalNextEventDate:u[12],typicalSituation:u[13],thisYear:u[14],thisYear1later:u[15],thisYear2later:u[16],thisYear3later:u[17],thisYear4later:u[18],thisYear5later:u[19],thisYear6later:u[20],thisYear7later:u[21],thisYear8later:u[22],thisYear9later:u[23],thisYear10later:u[24]};r.push(l)}let a={companyCode:t,taskList:r};console.log("postData",a);const n=`http://127.0.0.1:8000/api/task/taskListByCompany/?format=json&companyCode=${t}`;_.post(n,a).then(s=>{console.log("Data posted successfully",s.data)}).catch(s=>{console.error("Error in posting data",s)})}},components:{HotTable:R}}),Da=ba,Pa={id:"TaskList"},Ma=p("br",null,null,-1);function $a(c,t,o,e,r,a){const n=f("hot-table");return P(),M("div",Pa,[h(n,{ref:"hotTableComponent",settings:c.hotSettings},null,8,["settings"]),Ma,p("button",{onClick:t[0]||(t[0]=(...s)=>c.updateData&&c.updateData(...s)),class:"controls"},"Update Data")])}const va=D(Da,[["render",$a]]),Ra={components:{Total_graph:U,Total_cost_table:at,Planned_vs_actual:rt,Actual_summary_table_year:ht,Actual_summary_table:it,PM02_forecast_table:Ct,PM02_planned_graph:Pt,PM02_planned_table:jt,PM02_actual_graph:kt,PM02_actual_table:Ot,PM03_actual_graph:Vt,PM03_actual_table:Qt,PM04_actual_graph:aa,PM04_actual_table:la,PM05_actual_graph:da,PM05_actual_table:_a,Task_list:va}},xa={class:"base-content"},wa=V('<section class="content-header"><div class="container-fluid"><div class="row mb-2"><div class="col-sm-6"><h1>Repairing Cost</h1></div><div class="col-sm-6"><ol class="breadcrumb float-sm-right"><li class="breadcrumb-item"><a href="#">How to use detail</a></li><li class="breadcrumb-item"><a href="#">Task of maintenance</a></li><li class="breadcrumb-item active">MECHPHAISTOS</li></ol></div></div></div></section>',1),ja={class:"content"},Ta={class:"card card-solid"},Aa={class:"col-12 xl:col-12"},Sa={class:"card",style:{"background-color":"#f2f2f2"}},ka=p("p",null,"Planned cost",-1),Ea=p("p",null,"actual summary cost (readOnly)",-1),Na=p("br",null,null,-1),Fa={class:"row"},Ia={class:"col-12 xl:col-6"},Ya={class:"card",style:{"background-color":"#f2f2f2"}},La=p("br",null,null,-1),Oa={class:"col-12 xl:col-6"},za={class:"card",style:{"background-color":"#f2f2f2"}},Ba=p("br",null,null,-1),Ha={class:"col-12 xl:col-6"},Va={class:"card",style:{"background-color":"#f2f2f2"}},Ja=p("br",null,null,-1),Wa={class:"col-12 xl:col-6"},Ka={class:"card",style:{"background-color":"#f2f2f2"}},Ua=p("br",null,null,-1),qa={class:"row"},Ga=p("div",{class:"col-12 lg:col-6 xl:col-6"},[p("div",{class:"card mb-0"},[p("div",{class:"flex justify-content-between mb-3",style:{height:"20px"}},[p("div",null,[p("span",{class:"block text-500 font-medium mb-3"},"Predict years cost"),p("div",{class:"text-900 font-medium text-xl"},"$2.100")]),p("div",{class:"flex align-items-center justify-content-center bg-orange-100 border-round",style:{width:"2.5rem",height:"2.5rem"}},[p("i",{class:"pi pi-map-marker text-orange-500 text-xl"})])])])],-1),Qa=p("div",{class:"col-12 lg:col-6 xl:col-6"},[p("div",{class:"card mb-0"},[p("div",{class:"flex justify-content-between mb-3",style:{height:"20px"}},[p("div",null,[p("span",{class:"block text-500 font-medium mb-3"},"Next month task event"),p("div",{class:"text-900 font-medium text-xl"},"28441")]),p("div",{class:"flex align-items-center justify-content-center bg-cyan-100 border-round",style:{width:"2.5rem",height:"2.5rem"}},[p("i",{class:"pi pi-inbox text-cyan-500 text-xl"})])])])],-1),Xa={class:"col-12 xl:col-6"},Za={class:"card",style:{"background-color":"#f2f2f2"}},te={class:"col-12 xl:col-6"},ae={class:"card",style:{"background-color":"#f2f2f2"}},ee=p("h2",null,"Forecast for 10 years",-1),oe=p("br",null,null,-1),ne=p("h2",null,"Actual cost (contain PM02 PM03 PM04 PM05)",-1),re=p("br",null,null,-1),se=p("br",null,null,-1),ce=p("p",{class:"line-height-3 m-0"},null,-1);function le(c,t,o,e,r,a){const n=f("total_graph"),s=f("Total_cost_table"),u=f("Actual_summary_table"),i=f("Message"),l=f("PM02_actual_graph"),d=f("PM02_actual_table"),m=f("PM03_actual_graph"),y=f("PM03_actual_table"),C=f("PM04_actual_graph"),x=f("PM04_actual_table"),j=f("PM05_actual_graph"),F=f("PM05_actual_table"),k=f("TabPanel"),I=f("Planned_vs_actual"),Y=f("PM02_forecast_table"),L=f("Actual_summary_table_year"),O=f("Task_list"),z=f("TabView");return P(),M("div",xa,[wa,p("section",ja,[p("div",Ta,[h(z,null,{default:g(()=>[h(k,{header:"Repairing cost"},{default:g(()=>[p("div",Aa,[p("div",Sa,[h(n),ka,h(s),Ea,h(u),h(i,{closable:!1},{default:g(()=>[$("AI recommendation "),Na,$(" Now developing ")]),_:1})])]),p("div",Fa,[p("div",Ia,[p("div",Ya,[h(l),h(d),h(i,{closable:!1},{default:g(()=>[$("AI recommendation "),La,$(" Now developing ")]),_:1})])]),p("div",Oa,[p("div",za,[h(m),h(y),h(i,{closable:!1},{default:g(()=>[$("AI recommendation "),Ba,$(" Now developing ")]),_:1})])]),p("div",Ha,[p("div",Va,[h(C),h(x),h(i,{closable:!1},{default:g(()=>[$("AI recommendation "),Ja,$(" Now developing ")]),_:1})])]),p("div",Wa,[p("div",Ka,[h(j),h(F),h(i,{closable:!1},{default:g(()=>[$("AI recommendation "),Ua,$(" Now developing ")]),_:1})])])])]),_:1}),h(k,{header:"Task list"},{default:g(()=>[p("div",qa,[Ga,Qa,p("div",Xa,[p("div",Za,[h(I)])]),p("div",te,[p("div",ae,[ee,h(Y),oe,ne,h(L)]),re,se]),h(O)])]),_:1}),h(k,{header:"Simulations"},{default:g(()=>[ce]),_:1})]),_:1})])])])}const me=D(Ra,[["render",le]]);export{me as default};
