import{P as D}from"./plotly.min-0072426f.js";import{_ as V,o as O,c as M,e as o,l as s,V as S,d as E,E as q,G as A,H as j,q as $,b as y,k as B,r as I}from"./index-3caee4d8.js";import{u as R}from"./userStore-9431a957.js";const T={data(){return{xData:[[2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2013],[2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2013],[2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2013],[2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2013]],yData:[[74,82,80,74,73,72,74,70,70,66,66,69],[45,42,50,46,36,36,34,35,32,31,31,28],[13,14,20,24,20,24,24,40,35,41,43,50],[18,21,18,21,16,14,13,18,17,16,19,23]],colors:["rgba(67,67,67,1)","rgba(115,115,115,1)","rgba(49,130,189, 1)","rgba(189,189,189,1)"],lineSize:[2,2,4,2],labels:["Television","Newspaper","Internet","Radio"]}},mounted(){this.generateChart()},methods:{generateChart(){const f=[];for(let e=0;e<this.xData.length;e++){const a={x:this.xData[e],y:this.yData[e],type:"scatter",mode:"lines",line:{color:this.colors[e],width:this.lineSize[e]}},n={x:[this.xData[e][0],this.xData[e][11]],y:[this.yData[e][0],this.yData[e][11]],type:"scatter",mode:"markers",marker:{color:this.colors[e],size:12}};f.push(a,n)}const l={showlegend:!1,height:600,width:600,xaxis:{showline:!0,showgrid:!1,showticklabels:!0,linecolor:"rgb(204,204,204)",linewidth:2,autotick:!1,ticks:"outside",tickcolor:"rgb(204,204,204)",tickwidth:2,ticklen:5,tickfont:{family:"Arial",size:12,color:"rgb(82, 82, 82)"}},yaxis:{showgrid:!1,zeroline:!1,showline:!1,showticklabels:!1},autosize:!1,margin:{autoexpand:!1,l:100,r:20,t:100},annotations:[{xref:"paper",yref:"paper",x:0,y:1.05,xanchor:"left",yanchor:"bottom",text:"Main Source for News",font:{family:"Arial",size:30,color:"rgb(37,37,37)"},showarrow:!1},{xref:"paper",yref:"paper",x:.5,y:-.1,xanchor:"center",yanchor:"top",text:"Source: Pew Research Center & Storytelling with data",showarrow:!1,font:{family:"Arial",size:12,color:"rgb(150,150,150)"}}]};for(let e=0;e<this.xData.length;e++){const a={xref:"paper",x:.05,y:this.yData[e][0],xanchor:"right",yanchor:"middle",text:this.labels[e]+" "+this.yData[e][0]+"%",showarrow:!1,font:{family:"Arial",size:16,color:"black"}},n={xref:"paper",x:.95,y:this.yData[e][11],xanchor:"left",yanchor:"middle",text:this.yData[e][11]+"%",font:{family:"Arial",size:16,color:"black"},showarrow:!1};l.annotations.push(a,n)}D.newPlot("myDiv",f,l)}}},F=y("div",{id:"myDiv",style:{height:"600px",width:"600px"}},null,-1),G=y("p",null,"Source: Pew Research Center & Storytelling with data",-1);function H(f,l,e,a,n,i){return O(),M("div",null,[o($,null,{default:s(()=>[o(S,null,{default:s(()=>[E("Main Source for News")]),_:1}),o(q,null,{default:s(()=>[o(A,null,{default:s(()=>[o(j,null,{default:s(()=>[F]),_:1})]),_:1}),o(A,null,{default:s(()=>[o(j,null,{default:s(()=>[G]),_:1})]),_:1})]),_:1})]),_:1})])}const te=V(T,[["render",H]]),U={data(){return{values:{},error:null}},mounted(){const l=R().companyCode;if(!l){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/nearMiss/nearMissByCompany/?format=json&companyCode=${l}`;B.get(e,{headers:{"Content-Type":"application/json"},withCredentials:!0}).then(a=>{const r=a.data.flatMap(c=>c.nearMissList).map(c=>c.factor);this.values=r.reduce((c,m)=>(c[m]=(c[m]||0)+1,c),{});let p={type:"pie",values:Object.values(this.values),labels:Object.keys(this.values),textinfo:"label+percent",insidetextorientation:"radial"};const u={width:500,height:500,automargin:!0},d={responsive:!0};document.getElementById("SafeRate")?(console.log("Before plotting"),D.newPlot("SafeRate",[p],u,d),console.log("After plotting")):console.error("Element with id 'SafeRate' not found.")}).catch(a=>{console.error("Error fetching data:",a)})}},W=y("div",{id:"SafeRate"},null,-1);function J(f,l,e,a,n,i){return O(),M("div",null,[o($,null,{default:s(()=>[o(S,null,{default:s(()=>[E("Safety factor type")]),_:1}),W]),_:1})])}const ae=V(U,[["render",J]]),K={mounted(){const l=R().companyCode;if(!l){console.error("Error: No company code found for the user.");return}const e=`http://127.0.0.1:8000/api/nearMiss/nearMissByCompany/?companyCode=${l}`;B.get(e).then(a=>{const n=a.data;let i=[];for(const t of n)for(const g of t.nearMissList)i.push(g);const r={},p=i.map(t=>(t.department in r||(r[t.department]=Object.keys(r).length+1),r[t.department])),u={},d=i.map(t=>(t.placeOfOccurrence in u||(u[t.placeOfOccurrence]=Object.keys(u).length+1),u[t.placeOfOccurrence])),c=Object.keys(r).length,m=Object.keys(u).length,h={A:5,B:4,C:3,D:2,E:1},N={others:1,"protective equipment violation":2,"impossible movement":3,"traffic accIdent":4,conflagration:5,rupture:6,explosion:7,"electric shock":8,"contact with organic matter":9,"contact with hot or cold objects":10,drown:11,"treading on something sharp":12,"cut/Rubbing":13,"got caught up in":14,"hit by something":15,collapse:16,"accIdental fall":17,collision:18,"fall/slip":19,"fall down":20},z={others:1,Rule:2,Person:3,Methods:4,Equipment:5};let v=[],x=[],_=[],w=[],b=[],k=[],C=[];i.forEach(t=>{v.push(N[t.typeOfAccident]),x.push(z[t.factor]),_.push(h[t.injuredLv]),w.push(h[t.equipmentDamageLv]),b.push(h[t.affectOfEnviroment]),k.push(h[t.newsCoverage]),C.push(h[t.measures])}),console.log("departmentValues:",p),console.log("placeOfOccurrenceValues:",d),console.log("accidentTypeValues:",v),console.log("factorValues:",x),console.log("injuredLvValues:",_),console.log("equipmentDamageLvValues:",w),console.log("affectOfEnviromentValues:",b),console.log("newsCoverageValues:",k),console.log("measuresValues:",C);let L={type:"parcoords",line:{color:"blue"},dimensions:[{range:[1,c],label:"Department",values:p,tickvals:Array.from({length:p.length},(t,g)=>g+1),ticktext:Object.keys(r)},{range:[1,m],label:"Where",values:d,tickvals:Array.from({length:d.length},(t,g)=>g+1),ticktext:Object.keys(u)},{range:[1,20],label:"Accident type",values:v,tickvals:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],ticktext:["others","protective equipment violation","impossible movement","traffic accIdent","conflagration","rupture","explosion","electric shock","contact with organic matter","contact with hot or cold objects","drown","treading on something sharp","cut/Rubbing","got caught up in","hit by something","collapse","accIdental fall","collision","fall/slip","fall down"]},{range:[1,5],label:"Factor",values:x,tickvals:[1,2,3,4,5],ticktext:["others","Rule","Person","Methods","Equipment"]},{range:[1,5],label:"injured Lv",values:_,tickvals:[1,2,3,4,5],ticktext:["E","D","C","B","A"]},{range:[1,5],label:"Equipment Damage Lv",values:w,tickvals:[1,2,3,4,5],ticktext:["E","D","C","B","A"]},{range:[1,5],label:"Affect Of Enviroment",values:b,tickvals:[1,2,3,4,5],ticktext:["E","D","C","B","A"]},{range:[1,5],label:"News Coverage",values:k,tickvals:[1,2,3,4,5],ticktext:["E","D","C","B","A"]},{range:[1,5],label:"Measures",values:C,tickvals:[1,2,3,4,5],ticktext:["E","D","C","B","A"]}]};const P={width:1e3};D.newPlot("scd",[L],P)}).catch(a=>{console.error("データの取得に失敗しました",a)})}},Q=y("div",{id:"scd"},null,-1);function X(f,l,e,a,n,i){const r=I("v-flex");return O(),M("div",null,[o(r,null,{default:s(()=>[o($,null,{default:s(()=>[o(S,null,{default:s(()=>[E("Safety correlation diagram")]),_:1}),Q]),_:1})]),_:1})])}const oe=V(K,[["render",X]]);export{te as S,ae as a,oe as b};
