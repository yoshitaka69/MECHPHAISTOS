import {
  autocompleteValidator,
  dateValidator,
  numericValidator,
  timeValidator
} from "./chunk-M247WTJW.js";
import {
  AutocompleteEditor,
  CheckboxEditor,
  DropdownEditor,
  HandsontableEditor,
  NumericEditor,
  PasswordEditor,
  SelectEditor,
  TimeEditor
} from "./chunk-QQIO35JW.js";
import {
  DateEditor
} from "./chunk-6XBE6CNT.js";
import {
  autocompleteRenderer,
  checkboxRenderer,
  numericRenderer,
  passwordRenderer,
  timeRenderer
} from "./chunk-LXO3S7VW.js";
import {
  TextCellType
} from "./chunk-65WRUC2E.js";
import {
  textRenderer
} from "./chunk-5N6RTUDD.js";
import {
  _register
} from "./chunk-34RLSBPA.js";

// node_modules/handsontable/cellTypes/autocompleteType/autocompleteType.mjs
var CELL_TYPE = "autocomplete";
var AutocompleteCellType = {
  CELL_TYPE,
  editor: AutocompleteEditor,
  renderer: autocompleteRenderer,
  validator: autocompleteValidator
};

// node_modules/handsontable/cellTypes/checkboxType/checkboxType.mjs
var CELL_TYPE2 = "checkbox";
var CheckboxCellType = {
  CELL_TYPE: CELL_TYPE2,
  editor: CheckboxEditor,
  renderer: checkboxRenderer
};

// node_modules/handsontable/renderers/dateRenderer/dateRenderer.mjs
var RENDERER_TYPE = "date";
function dateRenderer(hotInstance, TD, row, col, prop, value, cellProperties) {
  autocompleteRenderer.apply(this, [hotInstance, TD, row, col, prop, value, cellProperties]);
}
dateRenderer.RENDERER_TYPE = RENDERER_TYPE;

// node_modules/handsontable/cellTypes/dateType/dateType.mjs
var CELL_TYPE3 = "date";
var DateCellType = {
  CELL_TYPE: CELL_TYPE3,
  editor: DateEditor,
  // displays small gray arrow on right side of the cell
  renderer: dateRenderer,
  validator: dateValidator
};

// node_modules/handsontable/cellTypes/dropdownType/dropdownType.mjs
var CELL_TYPE4 = "dropdown";
var DropdownCellType = {
  CELL_TYPE: CELL_TYPE4,
  editor: DropdownEditor,
  // displays small gray arrow on right side of the cell
  renderer: autocompleteRenderer,
  validator: autocompleteValidator
};

// node_modules/handsontable/renderers/handsontableRenderer/handsontableRenderer.mjs
var RENDERER_TYPE2 = "handsontable";
function handsontableRenderer(hotInstance, TD, row, col, prop, value, cellProperties) {
  autocompleteRenderer.apply(this, [hotInstance, TD, row, col, prop, value, cellProperties]);
}
handsontableRenderer.RENDERER_TYPE = RENDERER_TYPE2;

// node_modules/handsontable/cellTypes/handsontableType/handsontableType.mjs
var CELL_TYPE5 = "handsontable";
var HandsontableCellType = {
  CELL_TYPE: CELL_TYPE5,
  editor: HandsontableEditor,
  // displays small gray arrow on right side of the cell
  renderer: handsontableRenderer
};

// node_modules/handsontable/cellTypes/numericType/numericType.mjs
var CELL_TYPE6 = "numeric";
var NumericCellType = {
  CELL_TYPE: CELL_TYPE6,
  editor: NumericEditor,
  renderer: numericRenderer,
  validator: numericValidator,
  dataType: "number"
};

// node_modules/handsontable/cellTypes/passwordType/passwordType.mjs
var CELL_TYPE7 = "password";
var PasswordCellType = {
  CELL_TYPE: CELL_TYPE7,
  editor: PasswordEditor,
  renderer: passwordRenderer,
  copyable: false
};

// node_modules/handsontable/renderers/selectRenderer/selectRenderer.mjs
var RENDERER_TYPE3 = "select";
function selectRenderer(hotInstance, TD, row, col, prop, value, cellProperties) {
  textRenderer.apply(this, [hotInstance, TD, row, col, prop, value, cellProperties]);
}
selectRenderer.RENDERER_TYPE = RENDERER_TYPE3;

// node_modules/handsontable/cellTypes/selectType/selectType.mjs
var CELL_TYPE8 = "select";
var SelectCellType = {
  CELL_TYPE: CELL_TYPE8,
  editor: SelectEditor,
  renderer: selectRenderer
};

// node_modules/handsontable/cellTypes/timeType/timeType.mjs
var CELL_TYPE9 = "time";
var TimeCellType = {
  CELL_TYPE: CELL_TYPE9,
  editor: TimeEditor,
  renderer: timeRenderer,
  validator: timeValidator
};

// node_modules/handsontable/cellTypes/index.mjs
function registerAllCellTypes() {
  _register(AutocompleteCellType);
  _register(CheckboxCellType);
  _register(DateCellType);
  _register(DropdownCellType);
  _register(HandsontableCellType);
  _register(NumericCellType);
  _register(PasswordCellType);
  _register(SelectCellType);
  _register(TextCellType);
  _register(TimeCellType);
}

export {
  CELL_TYPE,
  AutocompleteCellType,
  CELL_TYPE2,
  CheckboxCellType,
  CELL_TYPE3,
  DateCellType,
  CELL_TYPE4,
  DropdownCellType,
  CELL_TYPE5,
  HandsontableCellType,
  CELL_TYPE6,
  NumericCellType,
  CELL_TYPE7,
  PasswordCellType,
  CELL_TYPE8,
  SelectCellType,
  CELL_TYPE9,
  TimeCellType,
  registerAllCellTypes
};
//# sourceMappingURL=chunk-V527OW7Z.js.map
