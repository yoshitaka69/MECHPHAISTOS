{
  "version": 3,
  "sources": ["../../handsontable/cellTypes/registry.mjs"],
  "sourcesContent": ["import \"core-js/modules/es.error.cause.js\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nimport { registerEditor } from \"../editors/registry.mjs\";\nimport { registerRenderer } from \"../renderers/registry.mjs\";\nimport { registerValidator } from \"../validators/registry.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('cellTypes');\n\n/**\n * Retrieve cell type object.\n *\n * @param {string} name Cell type identification.\n * @returns {object} Returns cell type object.\n */\nfunction _getItem(name) {\n  if (!hasItem(name)) {\n    throw Error(`You declared cell type \"${name}\" as a string that is not mapped to a known object.\n                 Cell type must be an object or a string mapped to an object registered by\n                 \"Handsontable.cellTypes.registerCellType\" method`);\n  }\n  return getItem(name);\n}\n\n/**\n * Register cell type under specified name.\n *\n * @param {string} name Cell type identification.\n * @param {object} type An object with contains keys (eq: `editor`, `renderer`, `validator`) which describes specified behaviour of the cell.\n */\nfunction _register(name, type) {\n  if (typeof name !== 'string') {\n    type = name;\n    name = type.CELL_TYPE;\n  }\n  const {\n    editor,\n    renderer,\n    validator\n  } = type;\n  if (editor) {\n    registerEditor(name, editor);\n  }\n  if (renderer) {\n    registerRenderer(name, renderer);\n  }\n  if (validator) {\n    registerValidator(name, validator);\n  }\n  register(name, type);\n}\nexport { _register as registerCellType, _getItem as getCellType, hasItem as hasCellType, getNames as getRegisteredCellTypeNames, getValues as getRegisteredCellTypes };"],
  "mappings": ";;;;;;;;;;;;;;AAKA,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI,eAAe,WAAW;AAQ9B,SAAS,SAAS,MAAM;AACtB,MAAI,CAAC,QAAQ,IAAI,GAAG;AAClB,UAAM,MAAM,2BAA2B,IAAI;AAAA;AAAA,kEAEmB;AAAA,EAChE;AACA,SAAO,QAAQ,IAAI;AACrB;AAQA,SAASA,WAAU,MAAM,MAAM;AAC7B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AACP,WAAO,KAAK;AAAA,EACd;AACA,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,MAAI,QAAQ;AACV,cAAe,MAAM,MAAM;AAAA,EAC7B;AACA,MAAI,UAAU;AACZ,IAAAA,WAAiB,MAAM,QAAQ;AAAA,EACjC;AACA,MAAI,WAAW;AACb,IAAAA,WAAkB,MAAM,SAAS;AAAA,EACnC;AACA,WAAS,MAAM,IAAI;AACrB;",
  "names": ["_register"]
}
