{
  "version": 3,
  "sources": ["../../handsontable/utils/ghostTable.mjs", "../../handsontable/utils/samplesGenerator.mjs", "../../handsontable/plugins/autoColumnSize/autoColumnSize.mjs", "../../handsontable/plugins/autofill/utils.mjs", "../../handsontable/plugins/autofill/autofill.mjs", "../../handsontable/plugins/autoRowSize/autoRowSize.mjs", "../../handsontable/plugins/bindRowsWithHeaders/maps/looseBindsMap.mjs", "../../handsontable/plugins/bindRowsWithHeaders/maps/strictBindsMap.mjs", "../../handsontable/plugins/bindRowsWithHeaders/bindRowsWithHeaders.mjs", "../../handsontable/plugins/collapsibleColumns/collapsibleColumns.mjs", "../../handsontable/plugins/columnSorting/columnStatesManager.mjs", "../../handsontable/plugins/columnSorting/utils.mjs", "../../handsontable/plugins/columnSorting/domHelpers.mjs", "../../handsontable/plugins/columnSorting/sortFunction/default.mjs", "../../handsontable/plugins/columnSorting/sortFunction/numeric.mjs", "../../handsontable/plugins/columnSorting/sortFunction/checkbox.mjs", "../../handsontable/plugins/columnSorting/sortFunction/date.mjs", "../../handsontable/plugins/columnSorting/sortService/registry.mjs", "../../handsontable/plugins/columnSorting/sortService/engine.mjs", "../../handsontable/plugins/columnSorting/rootComparator.mjs", "../../handsontable/plugins/columnSorting/columnSorting.mjs", "../../handsontable/plugins/columnSummary/endpoints.mjs", "../../handsontable/plugins/columnSummary/utils.mjs", "../../handsontable/plugins/columnSummary/columnSummary.mjs", "../../handsontable/plugins/comments/commentEditor.mjs", "../../handsontable/plugins/comments/displaySwitch.mjs", "../../handsontable/plugins/comments/contextMenuItem/addEditComment.mjs", "../../handsontable/plugins/comments/contextMenuItem/removeComment.mjs", "../../handsontable/plugins/comments/contextMenuItem/readOnlyComment.mjs", "../../handsontable/plugins/comments/comments.mjs", "../../handsontable/plugins/copyPaste/contextMenuItem/copy.mjs", "../../handsontable/plugins/copyPaste/contextMenuItem/copyColumnHeadersOnly.mjs", "../../handsontable/plugins/copyPaste/contextMenuItem/copyWithColumnGroupHeaders.mjs", "../../handsontable/plugins/copyPaste/contextMenuItem/copyWithColumnHeaders.mjs", "../../handsontable/plugins/copyPaste/contextMenuItem/cut.mjs", "../../handsontable/plugins/copyPaste/clipboardData.mjs", "../../handsontable/plugins/copyPaste/pasteEvent.mjs", "../../handsontable/plugins/copyPaste/copyableRanges.mjs", "../../handsontable/plugins/copyPaste/copyPaste.mjs", "../../handsontable/plugins/customBorders/utils.mjs", "../../handsontable/plugins/customBorders/contextMenuItem/bottom.mjs", "../../handsontable/plugins/customBorders/contextMenuItem/left.mjs", "../../handsontable/plugins/customBorders/contextMenuItem/noBorders.mjs", "../../handsontable/plugins/customBorders/contextMenuItem/right.mjs", "../../handsontable/plugins/customBorders/contextMenuItem/top.mjs", "../../handsontable/plugins/customBorders/customBorders.mjs", "../../handsontable/plugins/dragToScroll/dragToScroll.mjs", "../../handsontable/plugins/dropdownMenu/dropdownMenu.mjs", "../../handsontable/plugins/exportFile/dataProvider.mjs", "../../handsontable/plugins/exportFile/types/_base.mjs", "../../handsontable/plugins/exportFile/types/csv.mjs", "../../handsontable/plugins/exportFile/typeFactory.mjs", "../../handsontable/plugins/exportFile/exportFile.mjs", "../../handsontable/plugins/filters/component/_base.mjs", "../../handsontable/plugins/filters/conditionRegisterer.mjs", "../../handsontable/plugins/filters/condition/none.mjs", "../../handsontable/plugins/filters/condition/empty.mjs", "../../handsontable/plugins/filters/condition/notEmpty.mjs", "../../handsontable/plugins/filters/condition/equal.mjs", "../../handsontable/plugins/filters/condition/notEqual.mjs", "../../handsontable/plugins/filters/condition/greaterThan.mjs", "../../handsontable/plugins/filters/condition/greaterThanOrEqual.mjs", "../../handsontable/plugins/filters/condition/lessThan.mjs", "../../handsontable/plugins/filters/condition/lessThanOrEqual.mjs", "../../handsontable/plugins/filters/condition/date/after.mjs", "../../handsontable/plugins/filters/condition/date/before.mjs", "../../handsontable/plugins/filters/condition/between.mjs", "../../handsontable/plugins/filters/condition/notBetween.mjs", "../../handsontable/plugins/filters/condition/beginsWith.mjs", "../../handsontable/plugins/filters/condition/endsWith.mjs", "../../handsontable/plugins/filters/condition/contains.mjs", "../../handsontable/plugins/filters/condition/notContains.mjs", "../../handsontable/plugins/filters/condition/date/tomorrow.mjs", "../../handsontable/plugins/filters/condition/date/today.mjs", "../../handsontable/plugins/filters/condition/date/yesterday.mjs", "../../handsontable/plugins/filters/utils.mjs", "../../handsontable/plugins/filters/condition/byValue.mjs", "../../handsontable/plugins/filters/condition/true.mjs", "../../handsontable/plugins/filters/condition/false.mjs", "../../handsontable/plugins/filters/logicalOperationRegisterer.mjs", "../../handsontable/plugins/filters/logicalOperations/conjunction.mjs", "../../handsontable/plugins/filters/logicalOperations/disjunction.mjs", "../../handsontable/plugins/filters/logicalOperations/disjunctionWithExtraCondition.mjs", "../../handsontable/plugins/filters/constants.mjs", "../../handsontable/plugins/filters/ui/_base.mjs", "../../handsontable/plugins/filters/ui/input.mjs", "../../handsontable/plugins/filters/ui/select.mjs", "../../handsontable/plugins/filters/component/condition.mjs", "../../handsontable/plugins/filters/ui/radioInput.mjs", "../../handsontable/plugins/filters/component/operators.mjs", "../../handsontable/plugins/filters/ui/link.mjs", "../../handsontable/plugins/filters/ui/multipleSelect.mjs", "../../handsontable/plugins/filters/component/value.mjs", "../../handsontable/plugins/filters/component/actionBar.mjs", "../../handsontable/plugins/filters/conditionCollection.mjs", "../../handsontable/plugins/filters/dataFilter.mjs", "../../handsontable/plugins/filters/conditionUpdateObserver.mjs", "../../handsontable/plugins/filters/menu/focusNavigator.mjs", "../../handsontable/plugins/filters/menu/focusController.mjs", "../../handsontable/plugins/filters/filters.mjs", "../../handsontable/plugins/formulas/engine/settings.mjs", "../../handsontable/plugins/formulas/engine/register.mjs", "../../handsontable/plugins/formulas/utils.mjs", "../../handsontable/plugins/formulas/indexSyncer/axisSyncer.mjs", "../../handsontable/plugins/formulas/indexSyncer/index.mjs", "../../handsontable/plugins/formulas/formulas.mjs", "../../handsontable/plugins/hiddenColumns/contextMenuItem/hideColumn.mjs", "../../handsontable/plugins/hiddenColumns/contextMenuItem/showColumn.mjs", "../../handsontable/plugins/hiddenColumns/hiddenColumns.mjs", "../../handsontable/plugins/hiddenRows/contextMenuItem/hideRow.mjs", "../../handsontable/plugins/hiddenRows/contextMenuItem/showRow.mjs", "../../handsontable/plugins/hiddenRows/hiddenRows.mjs", "../../handsontable/plugins/manualColumnFreeze/contextMenuItem/freezeColumn.mjs", "../../handsontable/plugins/manualColumnFreeze/contextMenuItem/unfreezeColumn.mjs", "../../handsontable/plugins/manualColumnFreeze/manualColumnFreeze.mjs", "../../handsontable/plugins/manualColumnMove/ui/_base.mjs", "../../handsontable/plugins/manualColumnMove/ui/backlight.mjs", "../../handsontable/plugins/manualColumnMove/ui/guideline.mjs", "../../handsontable/plugins/manualColumnMove/manualColumnMove.mjs", "../../handsontable/plugins/manualColumnResize/manualColumnResize.mjs", "../../handsontable/plugins/manualRowMove/ui/_base.mjs", "../../handsontable/plugins/manualRowMove/ui/backlight.mjs", "../../handsontable/plugins/manualRowMove/ui/guideline.mjs", "../../handsontable/plugins/manualRowMove/manualRowMove.mjs", "../../handsontable/plugins/manualRowResize/manualRowResize.mjs", "../../handsontable/plugins/mergeCells/cellCoords.mjs", "../../handsontable/plugins/mergeCells/utils.mjs", "../../handsontable/plugins/mergeCells/cellsCollection.mjs", "../../handsontable/plugins/mergeCells/calculations/autofill.mjs", "../../handsontable/plugins/mergeCells/calculations/selection.mjs", "../../handsontable/plugins/mergeCells/contextMenuItem/toggleMerge.mjs", "../../handsontable/plugins/mergeCells/mergeCells.mjs", "../../handsontable/plugins/multiColumnSorting/rootComparator.mjs", "../../handsontable/plugins/multiColumnSorting/utils.mjs", "../../handsontable/plugins/multiColumnSorting/domHelpers.mjs", "../../handsontable/plugins/multiColumnSorting/multiColumnSorting.mjs", "../../handsontable/plugins/multipleSelectionHandles/multipleSelectionHandles.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/utils.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/settingsNormalizer.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/sourceSettings.mjs", "../../handsontable/utils/dataStructures/tree.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/headersTree.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/utils/tree.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/expand.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/collapse.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/hideColumn.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/showColumn.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/nodeModifiers/index.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/matrixGenerator.mjs", "../../handsontable/plugins/nestedHeaders/stateManager/index.mjs", "../../handsontable/plugins/nestedHeaders/utils/ghostTable.mjs", "../../handsontable/plugins/nestedHeaders/nestedHeaders.mjs", "../../handsontable/plugins/nestedRows/data/dataManager.mjs", "../../handsontable/plugins/nestedRows/ui/_base.mjs", "../../handsontable/plugins/nestedRows/ui/headers.mjs", "../../handsontable/plugins/nestedRows/ui/collapsing.mjs", "../../handsontable/plugins/nestedRows/ui/contextMenu.mjs", "../../handsontable/plugins/nestedRows/utils/rowMoveController.mjs", "../../handsontable/plugins/nestedRows/nestedRows.mjs", "../../handsontable/plugins/persistentState/storage.mjs", "../../handsontable/plugins/persistentState/persistentState.mjs", "../../handsontable/plugins/search/search.mjs", "../../handsontable/plugins/touchScroll/touchScroll.mjs", "../../handsontable/plugins/trimRows/trimRows.mjs", "../../handsontable/plugins/undoRedo/undoRedo.mjs", "../../handsontable/plugins/index.mjs"],
  "sourcesContent": ["import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { addClass, outerHeight } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\n/**\n * @class GhostTable\n */\nclass GhostTable {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", null);\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n    _defineProperty(this, \"container\", null);\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"injected\", false);\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"rows\", []);\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"columns\", []);\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n    _defineProperty(this, \"samples\", null);\n    /**\n     * Ghost table settings.\n     *\n     * @type {object}\n     * @default {Object}\n     */\n    _defineProperty(this, \"settings\", {\n      useHeaders: true\n    });\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Add row.\n   *\n   * @param {number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n  addRow(row, samples) {\n    if (this.columns.length) {\n      throw new Error('Doesn\\'t support multi-dimensional table');\n    }\n    if (!this.rows.length) {\n      this.container = this.createContainer(this.hot.rootElement.className);\n    }\n    const rowObject = {\n      row\n    };\n    this.rows.push(rowObject);\n    this.samples = samples;\n    this.table = this.createTable(this.hot.table.className);\n    this.table.colGroup.appendChild(this.createColGroupsCol(row));\n    this.table.tr.appendChild(this.createRow(row));\n    this.container.container.appendChild(this.table.fragment);\n    rowObject.table = this.table.table;\n  }\n\n  /**\n   * Add a row consisting of the column headers.\n   *\n   * @param {Map} samples A map with sampled table values.\n   */\n  addColumnHeadersRow(samples) {\n    const colHeader = this.hot.getColHeader(0);\n    if (colHeader !== null && colHeader !== undefined) {\n      const rowObject = {\n        row: -1\n      };\n      this.rows.push(rowObject);\n      this.container = this.createContainer(this.hot.rootElement.className);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.appendColumnHeadersRow();\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n  }\n\n  /**\n   * Add column.\n   *\n   * @param {number} column Column index.\n   * @param {Map} samples A map with sampled table values.\n   */\n  addColumn(column, samples) {\n    if (this.rows.length) {\n      throw new Error('Doesn\\'t support multi-dimensional table');\n    }\n    if (!this.columns.length) {\n      this.container = this.createContainer(this.hot.rootElement.className);\n    }\n    const columnObject = {\n      col: column\n    };\n    this.columns.push(columnObject);\n    this.samples = samples;\n    this.table = this.createTable(this.hot.table.className);\n    if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n      // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n      // We render all columns.\n      this.hot.view.appendColHeader(column, this.table.th);\n    }\n    this.table.tBody.appendChild(this.createCol(column));\n    this.container.container.appendChild(this.table.fragment);\n    columnObject.table = this.table.table;\n  }\n\n  /**\n   * Get calculated heights.\n   *\n   * @param {Function} callback Callback which will be fired for each calculated row.\n   */\n  getHeights(callback) {\n    if (!this.injected) {\n      this.injectTable();\n    }\n    arrayEach(this.rows, row => {\n      // -1 <- reduce border-top from table\n      callback(row.row, outerHeight(row.table) - 1);\n    });\n  }\n\n  /**\n   * Get calculated widths.\n   *\n   * @param {Function} callback Callback which will be fired for each calculated column.\n   */\n  getWidths(callback) {\n    if (!this.injected) {\n      this.injectTable();\n    }\n    arrayEach(this.columns, column => {\n      // The GhostTable class is responsible for calculating the columns' width based on the\n      // contents rendered in the cells. In some cases, when the column's width calculated by\n      // the browser is a decimal point with a fractional component. For example, 35.32px.\n      // The usage of the `.offsetWidth` (or our helper `outerWidth`) is incorrect.\n      // The `outerWidth` in the mentioned example (35.32px) would return 35 pixels that\n      // would cause the text to not fit in the cell, thus increasing the row height.\n      // That's why the `getBoundingClientRect` method is used. The method returns the number\n      // that is rounded up to make sure that there will be a space for the cell's content.\n      const {\n        width\n      } = column.table.getBoundingClientRect();\n      callback(column.col, Math.ceil(width));\n    });\n  }\n\n  /**\n   * Set the Ghost Table settings to the provided object.\n   *\n   * @param {object} settings New Ghost Table Settings.\n   */\n  setSettings(settings) {\n    this.settings = settings;\n  }\n\n  /**\n   * Set a single setting of the Ghost Table.\n   *\n   * @param {string} name Setting name.\n   * @param {*} value Setting value.\n   */\n  setSetting(name, value) {\n    if (!this.settings) {\n      this.settings = {};\n    }\n    this.settings[name] = value;\n  }\n\n  /**\n   * Get the Ghost Table settings.\n   *\n   * @returns {object|null}\n   */\n  getSettings() {\n    return this.settings;\n  }\n\n  /**\n   * Get a single Ghost Table setting.\n   *\n   * @param {string} name The setting name to get.\n   * @returns {boolean|null}\n   */\n  getSetting(name) {\n    if (this.settings) {\n      return this.settings[name];\n    }\n    return null;\n  }\n\n  /**\n   * Create colgroup col elements.\n   *\n   * @param {number} row Visual row index.\n   * @returns {DocumentFragment}\n   */\n  createColGroupsCol(row) {\n    const fragment = this.hot.rootDocument.createDocumentFragment();\n    if (this.hot.hasRowHeaders()) {\n      fragment.appendChild(this.createColElement(-1, -1));\n    }\n    this.samples.forEach(sample => {\n      arrayEach(sample.strings, string => {\n        fragment.appendChild(this.createColElement(string.col, row));\n      });\n    });\n    return fragment;\n  }\n\n  /**\n   * Create table row element.\n   *\n   * @param {number} row Row index.\n   * @returns {DocumentFragment} Returns created table row elements.\n   */\n  createRow(row) {\n    const {\n      rootDocument\n    } = this.hot;\n    const fragment = rootDocument.createDocumentFragment();\n    const th = rootDocument.createElement('th');\n    if (this.hot.hasRowHeaders()) {\n      this.hot.view.appendRowHeader(row, th);\n      fragment.appendChild(th);\n    }\n    this.samples.forEach(sample => {\n      arrayEach(sample.strings, string => {\n        const column = string.col;\n        const cellProperties = this.hot.getCellMeta(row, column);\n        cellProperties.col = column;\n        cellProperties.row = row;\n        const renderer = this.hot.getCellRenderer(cellProperties);\n        const td = rootDocument.createElement('td');\n\n        // Indicate that this element is created and supported by GhostTable. It can be useful to\n        // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n        td.setAttribute('ghost-table', 1);\n        renderer(this.hot, td, row, column, this.hot.colToProp(column), string.value, cellProperties);\n        fragment.appendChild(td);\n      });\n    });\n    return fragment;\n  }\n\n  /**\n   * Creates DOM elements for headers and appends them to the THEAD element of the table.\n   */\n  appendColumnHeadersRow() {\n    const {\n      rootDocument\n    } = this.hot;\n    const domFragment = rootDocument.createDocumentFragment();\n    const columnHeaders = [];\n    if (this.hot.hasRowHeaders()) {\n      const th = rootDocument.createElement('th');\n      columnHeaders.push([-1, th]);\n      domFragment.appendChild(th);\n    }\n    this.samples.forEach(sample => {\n      arrayEach(sample.strings, string => {\n        const column = string.col;\n        const th = rootDocument.createElement('th');\n        columnHeaders.push([column, th]);\n        domFragment.appendChild(th);\n      });\n    });\n\n    // Appending DOM elements for headers\n    this.table.tHead.appendChild(domFragment);\n    arrayEach(columnHeaders, columnHeader => {\n      const [column, th] = columnHeader;\n\n      // Using source method for filling a header with value.\n      this.hot.view.appendColHeader(column, th);\n    });\n  }\n\n  /**\n   * Create table column elements.\n   *\n   * @param {number} column Column index.\n   * @returns {DocumentFragment} Returns created column table column elements.\n   */\n  createCol(column) {\n    const {\n      rootDocument\n    } = this.hot;\n    const fragment = rootDocument.createDocumentFragment();\n    this.samples.forEach(sample => {\n      arrayEach(sample.strings, string => {\n        const row = string.row;\n        const cellProperties = this.hot.getCellMeta(row, column);\n        cellProperties.col = column;\n        cellProperties.row = row;\n        const renderer = this.hot.getCellRenderer(cellProperties);\n        const td = rootDocument.createElement('td');\n        const tr = rootDocument.createElement('tr');\n\n        // Indicate that this element is created and supported by GhostTable. It can be useful to\n        // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n        td.setAttribute('ghost-table', 1);\n        renderer(this.hot, td, row, column, this.hot.colToProp(column), string.value, cellProperties);\n        tr.appendChild(td);\n        fragment.appendChild(tr);\n      });\n    });\n    return fragment;\n  }\n\n  /**\n   * Remove table from document and reset internal state.\n   */\n  clean() {\n    this.rows.length = 0;\n    this.rows[-1] = undefined;\n    this.columns.length = 0;\n    if (this.samples) {\n      this.samples.clear();\n    }\n    this.samples = null;\n    this.removeTable();\n  }\n\n  /**\n   * Inject generated table into document.\n   *\n   * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\n   */\n  injectTable() {\n    let parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (!this.injected) {\n      (parent || this.hot.rootElement).appendChild(this.container.fragment);\n      this.injected = true;\n    }\n  }\n\n  /**\n   * Remove table from document.\n   */\n  removeTable() {\n    if (this.injected && this.container.container.parentNode) {\n      this.container.container.parentNode.removeChild(this.container.container);\n      this.container = null;\n      this.injected = false;\n    }\n  }\n\n  /**\n   * Create col element.\n   *\n   * @param {number} column Visual column index.\n   * @param {number} row Visual row index.\n   * @returns {HTMLElement}\n   */\n  createColElement(column, row) {\n    const col = this.hot.rootDocument.createElement('col');\n    let colspan = 0;\n    if (row >= 0 && column >= 0) {\n      colspan = this.hot.getCellMeta(row, column).colspan;\n    }\n    let width = this.hot.view._wt.wtTable.getStretchedColumnWidth(column);\n    if (colspan > 1) {\n      for (let nextColumn = column + 1; nextColumn < column + colspan; nextColumn++) {\n        width += this.hot.view._wt.wtTable.getStretchedColumnWidth(nextColumn);\n      }\n    }\n    col.style.width = `${width}px`;\n    return col;\n  }\n\n  /**\n   * Create table element.\n   *\n   * @param {string} className The CSS classes to add.\n   * @returns {object}\n   */\n  createTable() {\n    let className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const {\n      rootDocument\n    } = this.hot;\n    const fragment = rootDocument.createDocumentFragment();\n    const table = rootDocument.createElement('table');\n    const tHead = rootDocument.createElement('thead');\n    const tBody = rootDocument.createElement('tbody');\n    const colGroup = rootDocument.createElement('colgroup');\n    const tr = rootDocument.createElement('tr');\n    const th = rootDocument.createElement('th');\n    if (this.isVertical()) {\n      table.appendChild(colGroup);\n    }\n    if (this.isHorizontal()) {\n      tr.appendChild(th);\n      tHead.appendChild(tr);\n      table.style.tableLayout = 'auto';\n      table.style.width = 'auto';\n    }\n    table.appendChild(tHead);\n    if (this.isVertical()) {\n      tBody.appendChild(tr);\n    }\n    table.appendChild(tBody);\n    addClass(table, className);\n    fragment.appendChild(table);\n    return {\n      fragment,\n      table,\n      tHead,\n      tBody,\n      colGroup,\n      tr,\n      th\n    };\n  }\n\n  /**\n   * Create container for tables.\n   *\n   * @param {string} className The CSS classes to add.\n   * @returns {object}\n   */\n  createContainer() {\n    let className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const {\n      rootDocument\n    } = this.hot;\n    const fragment = rootDocument.createDocumentFragment();\n    const container = rootDocument.createElement('div');\n    const containerClassName = `htGhostTable htAutoSize ${className.trim()}`;\n    addClass(container, containerClassName);\n    fragment.appendChild(container);\n    return {\n      fragment,\n      container\n    };\n  }\n\n  /**\n   * Checks if table is raised vertically (checking rows).\n   *\n   * @returns {boolean}\n   */\n  isVertical() {\n    return !!(this.rows.length && !this.columns.length);\n  }\n\n  /**\n   * Checks if table is raised horizontally (checking columns).\n   *\n   * @returns {boolean}\n   */\n  isHorizontal() {\n    return !!(this.columns.length && !this.rows.length);\n  }\n}\nexport default GhostTable;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isObject } from \"./../helpers/object.mjs\";\nimport { rangeEach } from \"./../helpers/number.mjs\";\nimport { stringify } from \"./../helpers/mixed.mjs\";\n/**\n * @class SamplesGenerator\n */\nclass SamplesGenerator {\n  /**\n   * Number of samples to take of each value length.\n   *\n   * @type {number}\n   */\n  static get SAMPLE_COUNT() {\n    return 3;\n  }\n  /**\n   * Samples prepared for calculations.\n   *\n   * @type {Map}\n   * @default {null}\n   */\n\n  constructor(dataFactory) {\n    _defineProperty(this, \"samples\", null);\n    /**\n     * Function which give the data to collect samples.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"dataFactory\", null);\n    /**\n     * Custom number of samples to take of each value length.\n     *\n     * @type {number}\n     * @default {null}\n     */\n    _defineProperty(this, \"customSampleCount\", null);\n    /**\n     * `true` if duplicate samples collection should be allowed, `false` otherwise.\n     *\n     * @type {boolean}\n     * @default {false}\n     */\n    _defineProperty(this, \"allowDuplicates\", false);\n    this.dataFactory = dataFactory;\n  }\n\n  /**\n   * Get the sample count for this instance.\n   *\n   * @returns {number}\n   */\n  getSampleCount() {\n    if (this.customSampleCount) {\n      return this.customSampleCount;\n    }\n    return SamplesGenerator.SAMPLE_COUNT;\n  }\n\n  /**\n   * Set the sample count.\n   *\n   * @param {number} sampleCount Number of samples to be collected.\n   */\n  setSampleCount(sampleCount) {\n    this.customSampleCount = sampleCount;\n  }\n\n  /**\n   * Set if the generator should accept duplicate values.\n   *\n   * @param {boolean} allowDuplicates `true` to allow duplicate values.\n   */\n  setAllowDuplicates(allowDuplicates) {\n    this.allowDuplicates = allowDuplicates;\n  }\n\n  /**\n   * Generate samples for row. You can control which area should be sampled by passing `rowRange` object and `colRange` object.\n   *\n   * @param {object|number} rowRange The rows range to generate the samples.\n   * @param {object} colRange The column range to generate the samples.\n   * @returns {object}\n   */\n  generateRowSamples(rowRange, colRange) {\n    return this.generateSamples('row', colRange, rowRange);\n  }\n\n  /**\n   * Generate samples for column. You can control which area should be sampled by passing `colRange` object and `rowRange` object.\n   *\n   * @param {object} colRange Column index.\n   * @param {object} rowRange Column index.\n   * @returns {object}\n   */\n  generateColumnSamples(colRange, rowRange) {\n    return this.generateSamples('col', rowRange, colRange);\n  }\n\n  /**\n   * Generate collection of samples.\n   *\n   * @param {string} type Type to generate. Can be `col` or `row`.\n   * @param {object} range The range to generate the samples.\n   * @param {object|number} specifierRange The range to generate the samples.\n   * @returns {Map}\n   */\n  generateSamples(type, range, specifierRange) {\n    const samples = new Map();\n    const {\n      from,\n      to\n    } = typeof specifierRange === 'number' ? {\n      from: specifierRange,\n      to: specifierRange\n    } : specifierRange;\n    rangeEach(from, to, index => {\n      const sample = this.generateSample(type, range, index);\n      samples.set(index, sample);\n    });\n    return samples;\n  }\n\n  /**\n   * Generate sample for specified type (`row` or `col`).\n   *\n   * @param {string} type Samples type `row` or `col`.\n   * @param {object} range The range to generate the samples.\n   * @param {number} specifierValue The range to generate the samples.\n   * @returns {Map}\n   */\n  generateSample(type, range, specifierValue) {\n    if (type !== 'row' && type !== 'col') {\n      throw new Error('Unsupported sample type');\n    }\n    const samples = new Map();\n    const computedKey = type === 'row' ? 'col' : 'row';\n    const sampledValues = [];\n    rangeEach(range.from, range.to, index => {\n      const data = type === 'row' ? this.dataFactory(specifierValue, index) : this.dataFactory(index, specifierValue);\n      if (data === false) {\n        return;\n      }\n      const {\n        value,\n        bundleSeed\n      } = data;\n      const hasCustomBundleSeed = typeof bundleSeed === 'string' && bundleSeed.length > 0;\n      let seed;\n      if (hasCustomBundleSeed) {\n        seed = bundleSeed;\n      } else if (isObject(value)) {\n        seed = `${Object.keys(value).length}`;\n      } else if (Array.isArray(value)) {\n        seed = `${value.length}`;\n      } else {\n        seed = `${stringify(value).length}`;\n      }\n      if (!samples.has(seed)) {\n        samples.set(seed, {\n          needed: this.getSampleCount(),\n          strings: []\n        });\n      }\n      const sample = samples.get(seed);\n      if (sample.needed) {\n        const duplicate = sampledValues.indexOf(value) > -1;\n        if (!duplicate || this.allowDuplicates || hasCustomBundleSeed) {\n          sample.strings.push({\n            value,\n            [computedKey]: index\n          });\n          sampledValues.push(value);\n          sample.needed -= 1;\n        }\n      }\n    });\n    return samples;\n  }\n}\nexport default SamplesGenerator;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\nimport GhostTable from \"../../utils/ghostTable.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\nimport { isPercentValue } from \"../../helpers/string.mjs\";\nimport { ViewportColumnsCalculator } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nHooks.getSingleton().register('modifyAutoColumnSizeSeed');\nexport const PLUGIN_KEY = 'autoColumnSize';\nexport const PLUGIN_PRIORITY = 10;\nconst COLUMN_SIZE_MAP_NAME = 'autoColumnSize';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin AutoColumnSize\n * @class AutoColumnSize\n *\n * @description\n * This plugin allows to set column widths based on their widest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it enabled (same as if it was declared as `true`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the widths of all cells to\n * resize the columns accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the column widths manually.\n *\n * Column width calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\n *\n * ```js\n * // as a number (300 columns in sync, rest async)\n * autoColumnSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoColumnSize: {syncLimit: '40%'},\n * ```\n *\n * The plugin uses {@link GhostTable} and {@link SamplesGenerator} for calculations.\n * First, {@link SamplesGenerator} prepares samples of data with its coordinates.\n * Next {@link GhostTable} uses coordinates to get cells' renderers and append all to the DOM through DocumentFragment.\n *\n * Sampling accepts additional options:\n * - *samplingRatio* - Defines how many samples for the same length will be used to calculate. Default is `3`.\n *\n * ```js\n *   autoColumnSize: {\n *     samplingRatio: 10,\n *   }\n * ```\n *\n * - *allowSampleDuplicates* - Defines if duplicated values might be used in sampling. Default is `false`.\n *\n * ```js\n *   autoColumnSize: {\n *     allowSampleDuplicates: true,\n *   }\n * ```\n *\n * To configure this plugin see {@link Options#autoColumnSize}.\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   autoColumnSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoColumnSize');\n *\n * plugin.getColumnWidth(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * // First, let's contruct Handsontable\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   autoColumnSize={true}\n * />\n *\n * ...\n *\n * // Access to plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const plugin = hot.getPlugin('autoColumnSize');\n *\n * plugin.getColumnWidth(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nvar _cachedColumnHeaders = /*#__PURE__*/new WeakMap();\nvar _onBeforeViewRender = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nvar _onBeforeChange = /*#__PURE__*/new WeakSet();\nvar _onBeforeColumnResize = /*#__PURE__*/new WeakSet();\nvar _onAfterInit = /*#__PURE__*/new WeakSet();\nvar _onAfterFormulasValuesUpdate = /*#__PURE__*/new WeakSet();\nexport class AutoColumnSize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get SETTING_KEYS() {\n    return true;\n  }\n  static get CALCULATION_STEP() {\n    return 50;\n  }\n  static get SYNC_CALCULATION_LIMIT() {\n    return 50;\n  }\n\n  /**\n   * Instance of {@link GhostTable} for rows and columns size calculations.\n   *\n   * @private\n   * @type {GhostTable}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * After formulas values updated listener.\n     *\n     * @param {Array} changes An array of modified data.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterFormulasValuesUpdate);\n    /**\n     * On after Handsontable init fill plugin with all necessary values.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterInit);\n    /**\n     * On before column resize listener.\n     *\n     * @param {number} size Calculated new column width.\n     * @param {number} column Visual index of the resized column.\n     * @param {boolean} isDblClick  Flag that determines whether there was a double-click.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeColumnResize);\n    /**\n     * On before change listener.\n     *\n     * @param {Array} changes An array of modified data.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeChange);\n    /**\n     * On after load data listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * On before view render listener.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeViewRender);\n    _defineProperty(this, \"ghostTable\", new GhostTable(this.hot));\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for columns width calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     * @fires Hooks#modifyAutoColumnSizeSeed\n     */\n    _defineProperty(this, \"samplesGenerator\", new SamplesGenerator((row, column) => {\n      const cellMeta = this.hot.getCellMeta(row, column);\n      let cellValue = '';\n      if (!cellMeta.spanned) {\n        cellValue = this.hot.getDataAtCell(row, column);\n      }\n      let bundleSeed = '';\n      if (this.hot.hasHook('modifyAutoColumnSizeSeed')) {\n        bundleSeed = this.hot.runHooks('modifyAutoColumnSizeSeed', bundleSeed, cellMeta, cellValue);\n      }\n      return {\n        value: cellValue,\n        bundleSeed\n      };\n    }));\n    /**\n     * `true` only if the first calculation was performed.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"firstCalculation\", true);\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"inProgress\", false);\n    /**\n     * Number of already measured columns (we already know their sizes).\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"measuredColumns\", 0);\n    /**\n     * PhysicalIndexToValueMap to keep and track widths for physical column indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"columnWidthsMap\", new IndexToValueMap());\n    /**\n     * Cached column header names. It is used to diff current column headers with previous state and detect which\n     * columns width should be updated.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _cachedColumnHeaders, {\n      writable: true,\n      value: []\n    });\n    this.hot.columnIndexMapper.registerMap(COLUMN_SIZE_MAP_NAME, this.columnWidthsMap);\n\n    // Leave the listener active to allow auto-sizing the columns when the plugin is disabled.\n    // This is necessary for width recalculation for resize handler doubleclick (ManualColumnResize).\n    this.addHook('beforeColumnResize', (size, column, isDblClick) => _classPrivateMethodGet(this, _onBeforeColumnResize, _onBeforeColumnResize2).call(this, size, column, isDblClick));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link #enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY] !== false && !this.hot.getSettings().colWidths;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const setting = this.hot.getSettings()[PLUGIN_KEY];\n    if (setting && setting.useHeaders !== null && setting.useHeaders !== undefined) {\n      this.ghostTable.setSetting('useHeaders', setting.useHeaders);\n    }\n    this.setSamplingOptions();\n    this.addHook('afterLoadData', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.addHook('beforeChangeRender', changes => _classPrivateMethodGet(this, _onBeforeChange, _onBeforeChange2).call(this, changes));\n    this.addHook('afterFormulasValuesUpdate', changes => _classPrivateMethodGet(this, _onAfterFormulasValuesUpdate, _onAfterFormulasValuesUpdate2).call(this, changes));\n    this.addHook('beforeViewRender', force => _classPrivateMethodGet(this, _onBeforeViewRender, _onBeforeViewRender2).call(this, force));\n    this.addHook('modifyColWidth', (width, col) => this.getColumnWidth(col, width));\n    this.addHook('afterInit', () => _classPrivateMethodGet(this, _onAfterInit, _onAfterInit2).call(this));\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state. This method is executed when {@link Core#updateSettings} is invoked.\n   */\n  updatePlugin() {\n    const changedColumns = this.findColumnsWhereHeaderWasChanged();\n    if (changedColumns.length) {\n      this.clearCache(changedColumns);\n      this.calculateVisibleColumnsWidth();\n    }\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    super.disablePlugin();\n\n    // Leave the listener active to allow auto-sizing the columns when the plugin is disabled.\n    // This is necessary for width recalculation for resize handler doubleclick (ManualColumnResize).\n    this.addHook('beforeColumnResize', (size, column, isDblClick) => _classPrivateMethodGet(this, _onBeforeColumnResize, _onBeforeColumnResize2).call(this, size, column, isDblClick));\n  }\n\n  /**\n   * Calculates visible columns width.\n   */\n  calculateVisibleColumnsWidth() {\n    const rowsCount = this.hot.countRows();\n\n    // Keep last column widths unchanged for situation when all rows was deleted or trimmed (pro #6)\n    if (!rowsCount) {\n      return;\n    }\n    const force = this.hot.renderCall;\n    const firstVisibleColumn = this.getFirstVisibleColumn();\n    const lastVisibleColumn = this.getLastVisibleColumn();\n    if (firstVisibleColumn === -1 || lastVisibleColumn === -1) {\n      return;\n    }\n    this.calculateColumnsWidth({\n      from: firstVisibleColumn,\n      to: lastVisibleColumn\n    }, undefined, force);\n  }\n\n  /**\n   * Calculates a columns width.\n   *\n   * @param {number|object} colRange Visual column index or an object with `from` and `to` visual indexes as a range.\n   * @param {number|object} rowRange Visual row index or an object with `from` and `to` visual indexes as a range.\n   * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n   */\n  calculateColumnsWidth() {\n    let colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      from: 0,\n      to: this.hot.countCols() - 1\n    };\n    let rowRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      from: 0,\n      to: this.hot.countRows() - 1\n    };\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // eslint-disable-line max-len\n    const columnsRange = typeof colRange === 'number' ? {\n      from: colRange,\n      to: colRange\n    } : colRange;\n    const rowsRange = typeof rowRange === 'number' ? {\n      from: rowRange,\n      to: rowRange\n    } : rowRange;\n    rangeEach(columnsRange.from, columnsRange.to, visualColumn => {\n      let physicalColumn = this.hot.toPhysicalColumn(visualColumn);\n      if (physicalColumn === null) {\n        physicalColumn = visualColumn;\n      }\n      if (force || this.columnWidthsMap.getValueAtIndex(physicalColumn) === null && !this.hot._getColWidthFromSettings(physicalColumn)) {\n        const samples = this.samplesGenerator.generateColumnSamples(visualColumn, rowsRange);\n        arrayEach(samples, _ref => {\n          let [column, sample] = _ref;\n          return this.ghostTable.addColumn(column, sample);\n        });\n      }\n    });\n    if (this.ghostTable.columns.length) {\n      this.hot.batchExecution(() => {\n        this.ghostTable.getWidths((visualColumn, width) => {\n          const physicalColumn = this.hot.toPhysicalColumn(visualColumn);\n          this.columnWidthsMap.setValueAtIndex(physicalColumn, width);\n        });\n      }, true);\n      this.measuredColumns = columnsRange.to + 1;\n      this.ghostTable.clean();\n    }\n  }\n\n  /**\n   * Calculates all columns width. The calculated column will be cached in the {@link AutoColumnSize#widths} property.\n   * To retrieve width for specified column use {@link AutoColumnSize##getColumnWidth} method.\n   *\n   * @param {object|number} rowRange Row index or an object with `from` and `to` properties which define row range.\n   */\n  calculateAllColumnsWidth() {\n    let rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      from: 0,\n      to: this.hot.countRows() - 1\n    };\n    let current = 0;\n    const length = this.hot.countCols() - 1;\n    let timer = null;\n    this.inProgress = true;\n    const loop = () => {\n      // When hot was destroyed after calculating finished cancel frame\n      if (!this.hot) {\n        cancelAnimationFrame(timer);\n        this.inProgress = false;\n        return;\n      }\n      this.calculateColumnsWidth({\n        from: current,\n        to: Math.min(current + AutoColumnSize.CALCULATION_STEP, length)\n      }, rowRange);\n      current = current + AutoColumnSize.CALCULATION_STEP + 1;\n      if (current < length) {\n        timer = requestAnimationFrame(loop);\n      } else {\n        cancelAnimationFrame(timer);\n        this.inProgress = false;\n\n        // @TODO Should call once per render cycle, currently fired separately in different plugins\n        this.hot.view.adjustElementsSize();\n      }\n    };\n    const syncLimit = this.getSyncCalculationLimit();\n\n    // sync\n    if (this.firstCalculation && syncLimit >= 0) {\n      this.calculateColumnsWidth({\n        from: 0,\n        to: syncLimit\n      }, rowRange);\n      this.firstCalculation = false;\n      current = syncLimit + 1;\n    }\n    // async\n    if (current < length) {\n      loop();\n    } else {\n      this.inProgress = false;\n    }\n  }\n\n  /**\n   * Sets the sampling options.\n   *\n   * @private\n   */\n  setSamplingOptions() {\n    const setting = this.hot.getSettings()[PLUGIN_KEY];\n    const samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : undefined;\n    const allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : undefined;\n    if (samplingRatio && !isNaN(samplingRatio)) {\n      this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n    }\n    if (allowSampleDuplicates) {\n      this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n    }\n  }\n\n  /**\n   * Recalculates all columns width (overwrite cache values).\n   */\n  recalculateAllColumnsWidth() {\n    if (this.hot.view && this.hot.view._wt.wtTable.isVisible()) {\n      this.clearCache();\n      this.calculateAllColumnsWidth();\n    }\n  }\n\n  /**\n   * Gets value which tells how many columns should be calculated synchronously (rest of the columns will be calculated\n   * asynchronously). The limit is calculated based on `syncLimit` set to `autoColumnSize` option (see {@link Options#autoColumnSize}).\n   *\n   * @returns {number}\n   */\n  getSyncCalculationLimit() {\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    /* eslint-disable no-bitwise */\n    let limit = AutoColumnSize.SYNC_CALCULATION_LIMIT;\n    const colsLimit = this.hot.countCols() - 1;\n    if (isObject(settings)) {\n      limit = settings.syncLimit;\n      if (isPercentValue(limit)) {\n        limit = valueAccordingPercent(colsLimit, limit);\n      } else {\n        // Force to Number\n        limit >>= 0;\n      }\n    }\n    return Math.min(limit, colsLimit);\n  }\n\n  /**\n   * Gets the calculated column width.\n   *\n   * @param {number} column Visual column index.\n   * @param {number} [defaultWidth] Default column width. It will be picked up if no calculated width found.\n   * @param {boolean} [keepMinimum=true] If `true` then returned value won't be smaller then 50 (default column width).\n   * @returns {number}\n   */\n  getColumnWidth(column) {\n    let defaultWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    let keepMinimum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let width = defaultWidth;\n    if (width === undefined) {\n      width = this.columnWidthsMap.getValueAtIndex(this.hot.toPhysicalColumn(column));\n      if (keepMinimum && typeof width === 'number') {\n        width = Math.max(width, ViewportColumnsCalculator.DEFAULT_WIDTH);\n      }\n    }\n    return width;\n  }\n\n  /**\n   * Gets the first visible column.\n   *\n   * @returns {number} Returns visual column index, -1 if table is not rendered or if there are no columns to base the the calculations on.\n   */\n  getFirstVisibleColumn() {\n    const wot = this.hot.view._wt;\n    if (wot.wtViewport.columnsVisibleCalculator) {\n      // Fist fully visible column is stored as renderable index.\n      const firstFullyVisibleColumn = wot.wtTable.getFirstVisibleColumn();\n      if (firstFullyVisibleColumn !== -1) {\n        return this.hot.columnIndexMapper.getVisualFromRenderableIndex(firstFullyVisibleColumn);\n      }\n    }\n    if (wot.wtViewport.columnsRenderCalculator) {\n      const firstRenderedColumn = wot.wtTable.getFirstRenderedColumn();\n\n      // There are no rendered column.\n      if (firstRenderedColumn !== -1) {\n        return this.hot.columnIndexMapper.getVisualFromRenderableIndex(firstRenderedColumn);\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last visible column.\n   *\n   * @returns {number} Returns visual column index or -1 if table is not rendered.\n   */\n  getLastVisibleColumn() {\n    const wot = this.hot.view._wt;\n    if (wot.wtViewport.columnsVisibleCalculator) {\n      // Last fully visible column is stored as renderable index.\n      const lastFullyVisibleColumn = wot.wtTable.getLastVisibleColumn();\n      if (lastFullyVisibleColumn !== -1) {\n        return this.hot.columnIndexMapper.getVisualFromRenderableIndex(lastFullyVisibleColumn);\n      }\n    }\n    if (wot.wtViewport.columnsRenderCalculator) {\n      // Last fully visible column is stored as renderable index.\n      const lastRenderedColumn = wot.wtTable.getLastRenderedColumn();\n\n      // There are no rendered columns.\n      if (lastRenderedColumn !== -1) {\n        return this.hot.columnIndexMapper.getVisualFromRenderableIndex(lastRenderedColumn);\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Collects all columns which titles has been changed in comparison to the previous state.\n   *\n   * @private\n   * @returns {Array} It returns an array of physical column indexes.\n   */\n  findColumnsWhereHeaderWasChanged() {\n    const columnHeaders = this.hot.getColHeader();\n    const changedColumns = arrayReduce(columnHeaders, (acc, columnTitle, physicalColumn) => {\n      const cachedColumnsLength = _classPrivateFieldGet(this, _cachedColumnHeaders).length;\n      if (cachedColumnsLength - 1 < physicalColumn || _classPrivateFieldGet(this, _cachedColumnHeaders)[physicalColumn] !== columnTitle) {\n        acc.push(physicalColumn);\n      }\n      if (cachedColumnsLength - 1 < physicalColumn) {\n        _classPrivateFieldGet(this, _cachedColumnHeaders).push(columnTitle);\n      } else {\n        _classPrivateFieldGet(this, _cachedColumnHeaders)[physicalColumn] = columnTitle;\n      }\n      return acc;\n    }, []);\n    return changedColumns;\n  }\n\n  /**\n   * Clears cache of calculated column widths. If you want to clear only selected columns pass an array with their indexes.\n   * Otherwise whole cache will be cleared.\n   *\n   * @param {number[]} [columns] List of physical column indexes to clear.\n   */\n  clearCache() {\n    let columns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (columns.length) {\n      this.hot.batchExecution(() => {\n        arrayEach(columns, physicalIndex => {\n          this.columnWidthsMap.setValueAtIndex(physicalIndex, null);\n        });\n      }, true);\n    } else {\n      this.columnWidthsMap.clear();\n    }\n  }\n\n  /**\n   * Checks if all widths were calculated. If not then return `true` (need recalculate).\n   *\n   * @returns {boolean}\n   */\n  isNeedRecalculate() {\n    return !!arrayFilter(this.columnWidthsMap.getValues().slice(0, this.measuredColumns), item => item === null).length;\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.ghostTable.clean();\n    super.destroy();\n  }\n}\nfunction _onBeforeViewRender2() {\n  this.calculateVisibleColumnsWidth();\n  if (this.isNeedRecalculate() && !this.inProgress) {\n    this.calculateAllColumnsWidth();\n  }\n}\nfunction _onAfterLoadData2() {\n  if (this.hot.view) {\n    this.recalculateAllColumnsWidth();\n  } else {\n    // first load - initialization\n    setTimeout(() => {\n      if (this.hot) {\n        this.recalculateAllColumnsWidth();\n      }\n    }, 0);\n  }\n}\nfunction _onBeforeChange2(changes) {\n  const changedColumns = arrayMap(changes, _ref2 => {\n    let [, columnProperty] = _ref2;\n    return this.hot.toPhysicalColumn(this.hot.propToCol(columnProperty));\n  });\n  this.clearCache(Array.from(new Set(changedColumns)));\n}\nfunction _onBeforeColumnResize2(size, column, isDblClick) {\n  let newSize = size;\n  if (isDblClick) {\n    this.calculateColumnsWidth(column, undefined, true);\n    newSize = this.getColumnWidth(column, undefined, false);\n  }\n  return newSize;\n}\nfunction _onAfterInit2() {\n  _classPrivateFieldSet(this, _cachedColumnHeaders, this.hot.getColHeader());\n}\nfunction _onAfterFormulasValuesUpdate2(changes) {\n  const filteredChanges = arrayFilter(changes, change => {\n    var _change$address;\n    return isDefined((_change$address = change.address) === null || _change$address === void 0 ? void 0 : _change$address.col);\n  });\n  const changedColumns = arrayMap(filteredChanges, change => change.address.col);\n  this.clearCache(Array.from(new Set(changedColumns)));\n}", "import { isObject } from \"../../helpers/object.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nexport const DIRECTIONS = {\n  horizontal: 'horizontal',\n  vertical: 'vertical'\n};\n\n/**\n * Get direction between positions and cords of selections difference (drag area).\n *\n * @param {Array} startSelection The coordinates where the selection starts.\n * @param {Array} endSelection The coordinates where the selection ends.\n * @param {Function} cellCoordsFactory The function factory for CellCoords objects.\n * @returns {{direction: string, start: CellCoords, end: CellCoords}}\n */\nexport function getDragDirectionAndRange(startSelection, endSelection, cellCoordsFactory) {\n  let startOfDragCoords;\n  let endOfDragCoords;\n  let directionOfDrag;\n  if (endSelection[0] === startSelection[0] && endSelection[1] < startSelection[1]) {\n    directionOfDrag = 'left';\n    startOfDragCoords = cellCoordsFactory(endSelection[0], endSelection[1]);\n    endOfDragCoords = cellCoordsFactory(endSelection[2], startSelection[1] - 1);\n  } else if (endSelection[2] === startSelection[2] && endSelection[0] === startSelection[0] && endSelection[3] > startSelection[3]) {\n    directionOfDrag = 'right';\n    startOfDragCoords = cellCoordsFactory(endSelection[0], startSelection[3] + 1);\n    endOfDragCoords = cellCoordsFactory(endSelection[2], endSelection[3]);\n  } else if (endSelection[0] < startSelection[0] && endSelection[1] === startSelection[1]) {\n    directionOfDrag = 'up';\n    startOfDragCoords = cellCoordsFactory(endSelection[0], endSelection[1]);\n    endOfDragCoords = cellCoordsFactory(startSelection[0] - 1, endSelection[3]);\n  } else if (endSelection[2] > startSelection[2] && endSelection[1] === startSelection[1]) {\n    directionOfDrag = 'down';\n    startOfDragCoords = cellCoordsFactory(startSelection[2] + 1, endSelection[1]);\n    endOfDragCoords = cellCoordsFactory(endSelection[2], endSelection[3]);\n  }\n  if (startOfDragCoords) {\n    startOfDragCoords.normalize();\n  }\n  if (endOfDragCoords) {\n    endOfDragCoords.normalize();\n  }\n  return {\n    directionOfDrag,\n    startOfDragCoords,\n    endOfDragCoords\n  };\n}\n\n/**\n * Get mapped FillHandle setting containing information about\n * allowed FillHandle directions and if allowed is automatic insertion of rows on drag.\n *\n * @param {boolean|object} fillHandle Property of Handsontable settings.\n * @returns {{directions: Array, autoInsertRow: boolean}} Object allowing access to information\n * about FillHandle in more useful way.\n */\nexport function getMappedFillHandleSetting(fillHandle) {\n  const mappedSettings = {};\n  if (fillHandle === true) {\n    mappedSettings.directions = Object.keys(DIRECTIONS);\n    mappedSettings.autoInsertRow = true;\n  } else if (isObject(fillHandle)) {\n    if (isDefined(fillHandle.autoInsertRow)) {\n      // autoInsertRow for horizontal direction will be always false\n\n      if (fillHandle.direction === DIRECTIONS.horizontal) {\n        mappedSettings.autoInsertRow = false;\n      } else {\n        mappedSettings.autoInsertRow = fillHandle.autoInsertRow;\n      }\n    } else {\n      mappedSettings.autoInsertRow = false;\n    }\n    if (isDefined(fillHandle.direction)) {\n      mappedSettings.directions = [fillHandle.direction];\n    } else {\n      mappedSettings.directions = Object.keys(DIRECTIONS);\n    }\n  } else if (typeof fillHandle === 'string') {\n    mappedSettings.directions = [fillHandle];\n    mappedSettings.autoInsertRow = true;\n  } else {\n    mappedSettings.directions = [];\n    mappedSettings.autoInsertRow = false;\n  }\n  return mappedSettings;\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { offset, outerHeight, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { getDragDirectionAndRange, DIRECTIONS, getMappedFillHandleSetting } from \"./utils.mjs\";\nHooks.getSingleton().register('modifyAutofillRange');\nHooks.getSingleton().register('beforeAutofill');\nHooks.getSingleton().register('afterAutofill');\nexport const PLUGIN_KEY = 'autofill';\nexport const PLUGIN_PRIORITY = 20;\nconst SETTING_KEYS = ['fillHandle'];\nconst INSERT_ROW_ALTER_ACTION_NAME = 'insert_row_below';\nconst INTERVAL_FOR_ADDING_ROW = 200;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * This plugin provides \"drag-down\" and \"copy-down\" functionalities, both operated using the small square in the right\n * bottom of the cell selection.\n *\n * \"Drag-down\" expands the value of the selected cells to the neighbouring cells when you drag the small\n * square in the corner.\n *\n * \"Copy-down\" copies the value of the selection to all empty cells below when you double click the small square.\n *\n * @class Autofill\n * @plugin Autofill\n */\nvar _onCellCornerDblClick = /*#__PURE__*/new WeakSet();\nvar _onAfterCellCornerMouseDown = /*#__PURE__*/new WeakSet();\nvar _onBeforeCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nexport class Autofill extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On mouse move listener.\n     *\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * On mouse up listener.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * On before cell mouse over listener.\n     *\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeCellMouseOver);\n    /**\n     * On after cell corner mouse down listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCellCornerMouseDown);\n    /**\n     * On cell corner double click callback.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onCellCornerDblClick);\n    /**\n     * Specifies if adding new row started.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"addingStarted\", false);\n    /**\n     * Specifies if there was mouse down on the cell corner.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"mouseDownOnCellCorner\", false);\n    /**\n     * Specifies if mouse was dragged outside Handsontable.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"mouseDragOutside\", false);\n    /**\n     * Specifies how many cell levels were dragged using the handle.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"handleDraggedCells\", 0);\n    /**\n     * Specifies allowed directions of drag (`'horizontal'` or '`vertical`').\n     *\n     * @private\n     * @type {string[]}\n     */\n    _defineProperty(this, \"directions\", []);\n    /**\n     * Specifies if can insert new rows if needed.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"autoInsertRow\", false);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get SETTING_KEYS() {\n    return [PLUGIN_KEY, ...SETTING_KEYS];\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings().fillHandle;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.mapSettings();\n    this.registerEvents();\n    this.addHook('afterOnCellCornerMouseDown', event => _classPrivateMethodGet(this, _onAfterCellCornerMouseDown, _onAfterCellCornerMouseDown2).call(this, event));\n    this.addHook('afterOnCellCornerDblClick', event => _classPrivateMethodGet(this, _onCellCornerDblClick, _onCellCornerDblClick2).call(this, event));\n    this.addHook('beforeOnCellMouseOver', (_, coords) => _classPrivateMethodGet(this, _onBeforeCellMouseOver, _onBeforeCellMouseOver2).call(this, coords));\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - `autofill`\n   *  - [`fillHandle`](@/api/options.md#fillhandle)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.clearMappedSettings();\n    super.disablePlugin();\n  }\n\n  /**\n   * Gets selection data.\n   *\n   * @private\n   * @returns {object[]} Ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  getSelectionData() {\n    const selection = this.hot.getSelectedRangeLast();\n    const {\n      row: startRow,\n      col: startCol\n    } = selection.getTopStartCorner();\n    const {\n      row: endRow,\n      col: endCol\n    } = selection.getBottomEndCorner();\n    const copyableRanges = this.hot.runHooks('modifyCopyableRange', [{\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    }]);\n    const copyableRows = [];\n    const copyableColumns = [];\n    const data = [];\n    arrayEach(copyableRanges, range => {\n      for (let visualRow = range.startRow; visualRow <= range.endRow; visualRow += 1) {\n        if (copyableRows.indexOf(visualRow) === -1) {\n          copyableRows.push(visualRow);\n        }\n      }\n      for (let visualColumn = range.startCol; visualColumn <= range.endCol; visualColumn += 1) {\n        if (copyableColumns.indexOf(visualColumn) === -1) {\n          copyableColumns.push(visualColumn);\n        }\n      }\n    });\n    arrayEach(copyableRows, row => {\n      const rowSet = [];\n      arrayEach(copyableColumns, column => {\n        rowSet.push(this.hot.getCopyableData(row, column));\n      });\n      data.push(rowSet);\n    });\n    return data;\n  }\n\n  /**\n   * Try to apply fill values to the area in fill border, omitting the selection border.\n   *\n   * @private\n   * @returns {boolean} Reports if fill was applied.\n   *\n   * @fires Hooks#modifyAutofillRange\n   * @fires Hooks#beforeAutofill\n   * @fires Hooks#afterAutofill\n   */\n  fillIn() {\n    if (this.hot.selection.highlight.getFill().isEmpty()) {\n      return false;\n    }\n\n    // Fill area may starts or ends with invisible cell. There won't be any information about it as highlighted\n    // selection store just renderable indexes (It's part of Walkontable). I extrapolate where the start or/and\n    // the end is.\n    const [fillStartRow, fillStartColumn, fillEndRow, fillEndColumn] = this.hot.selection.highlight.getFill().getVisualCorners();\n    const selectionRangeLast = this.hot.getSelectedRangeLast();\n    const topStartCorner = selectionRangeLast.getTopStartCorner();\n    const bottomEndCorner = selectionRangeLast.getBottomEndCorner();\n    this.resetSelectionOfDraggedArea();\n    const cornersOfSelectedCells = [topStartCorner.row, topStartCorner.col, bottomEndCorner.row, bottomEndCorner.col];\n    const cornersOfSelectionAndDragAreas = this.hot.runHooks('modifyAutofillRange', [Math.min(topStartCorner.row, fillStartRow), Math.min(topStartCorner.col, fillStartColumn), Math.max(bottomEndCorner.row, fillEndRow), Math.max(bottomEndCorner.col, fillEndColumn)], cornersOfSelectedCells);\n    const {\n      directionOfDrag,\n      startOfDragCoords,\n      endOfDragCoords\n    } = getDragDirectionAndRange(cornersOfSelectedCells, cornersOfSelectionAndDragAreas, (row, column) => this.hot._createCellCoords(row, column));\n    if (startOfDragCoords && startOfDragCoords.row > -1 && startOfDragCoords.col > -1) {\n      const selectionData = this.getSelectionData();\n      const sourceRange = selectionRangeLast.clone();\n      const targetRange = this.hot._createCellRange(startOfDragCoords, startOfDragCoords, endOfDragCoords);\n      const beforeAutofillHookResult = this.hot.runHooks('beforeAutofill', selectionData, sourceRange, targetRange, directionOfDrag);\n      if (beforeAutofillHookResult === false) {\n        this.hot.selection.highlight.getFill().clear();\n        this.hot.render();\n        return false;\n      }\n      let fillData = beforeAutofillHookResult;\n      const res = beforeAutofillHookResult;\n      if (['up', 'left'].indexOf(directionOfDrag) > -1 && !(res.length === 1 && res[0].length === 0)) {\n        fillData = [];\n        if (directionOfDrag === 'up') {\n          const dragLength = endOfDragCoords.row - startOfDragCoords.row + 1;\n          const fillOffset = dragLength % res.length;\n          for (let i = 0; i < dragLength; i++) {\n            fillData.push(res[(i + (res.length - fillOffset)) % res.length]);\n          }\n        } else {\n          const dragLength = endOfDragCoords.col - startOfDragCoords.col + 1;\n          const fillOffset = dragLength % res[0].length;\n          for (let i = 0; i < res.length; i++) {\n            fillData.push([]);\n            for (let j = 0; j < dragLength; j++) {\n              fillData[i].push(res[i][(j + (res[i].length - fillOffset)) % res[i].length]);\n            }\n          }\n        }\n      }\n      this.hot.populateFromArray(startOfDragCoords.row, startOfDragCoords.col, fillData, endOfDragCoords.row, endOfDragCoords.col, `${this.pluginName}.fill`, null);\n      this.setSelection(cornersOfSelectionAndDragAreas);\n      this.hot.runHooks('afterAutofill', fillData, sourceRange, targetRange, directionOfDrag);\n      this.hot.render();\n    } else {\n      // reset to avoid some range bug\n      this.hot._refreshBorders();\n    }\n    return true;\n  }\n\n  /**\n   * Reduces the selection area if the handle was dragged outside of the table or on headers.\n   *\n   * @private\n   * @param {CellCoords} coords Indexes of selection corners.\n   * @returns {CellCoords}\n   */\n  reduceSelectionAreaIfNeeded(coords) {\n    if (coords.row < 0) {\n      coords.row = 0;\n    }\n    if (coords.col < 0) {\n      coords.col = 0;\n    }\n    return coords;\n  }\n\n  /**\n   * Gets the coordinates of the drag & drop borders.\n   *\n   * @private\n   * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n   * @returns {CellCoords}\n   */\n  getCoordsOfDragAndDropBorders(coordsOfSelection) {\n    const currentSelection = this.hot.getSelectedRangeLast();\n    const bottomRightCorner = currentSelection.getBottomEndCorner();\n    let coords = coordsOfSelection;\n    if (this.directions.includes(DIRECTIONS.vertical) && this.directions.includes(DIRECTIONS.horizontal)) {\n      const topStartCorner = currentSelection.getTopStartCorner();\n      if (bottomRightCorner.col <= coordsOfSelection.col || topStartCorner.col >= coordsOfSelection.col) {\n        coords = this.hot._createCellCoords(bottomRightCorner.row, coordsOfSelection.col);\n      }\n      if (bottomRightCorner.row < coordsOfSelection.row || topStartCorner.row > coordsOfSelection.row) {\n        coords = this.hot._createCellCoords(coordsOfSelection.row, bottomRightCorner.col);\n      }\n    } else if (this.directions.includes(DIRECTIONS.vertical)) {\n      coords = this.hot._createCellCoords(coordsOfSelection.row, bottomRightCorner.col);\n    } else if (this.directions.includes(DIRECTIONS.horizontal)) {\n      coords = this.hot._createCellCoords(bottomRightCorner.row, coordsOfSelection.col);\n    } else {\n      // wrong direction\n      return;\n    }\n    return this.reduceSelectionAreaIfNeeded(coords);\n  }\n\n  /**\n   * Show the fill border.\n   *\n   * @private\n   * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n   */\n  showBorder(coordsOfSelection) {\n    const coordsOfDragAndDropBorders = this.getCoordsOfDragAndDropBorders(coordsOfSelection);\n    if (coordsOfDragAndDropBorders) {\n      this.redrawBorders(coordsOfDragAndDropBorders);\n    }\n  }\n\n  /**\n   * Add new row.\n   *\n   * @private\n   */\n  addRow() {\n    this.hot._registerTimeout(() => {\n      this.hot.alter(INSERT_ROW_ALTER_ACTION_NAME, undefined, 1, `${this.pluginName}.fill`);\n      this.addingStarted = false;\n    }, INTERVAL_FOR_ADDING_ROW);\n  }\n\n  /**\n   * Add new rows if they are needed to continue auto-filling values.\n   *\n   * @private\n   */\n  addNewRowIfNeeded() {\n    if (!this.hot.selection.highlight.getFill().isEmpty() && this.addingStarted === false && this.autoInsertRow) {\n      const cornersOfSelectedCells = this.hot.getSelectedLast();\n      const cornersOfSelectedDragArea = this.hot.selection.highlight.getFill().getVisualCorners();\n      const nrOfTableRows = this.hot.countRows();\n      if (cornersOfSelectedCells[2] < nrOfTableRows - 1 && cornersOfSelectedDragArea[2] === nrOfTableRows - 1) {\n        this.addingStarted = true;\n        this.addRow();\n      }\n    }\n  }\n\n  /**\n   * Get index of last adjacent filled in row.\n   *\n   * @private\n   * @param {Array} cornersOfSelectedCells Indexes of selection corners.\n   * @returns {number} Gives number greater than or equal to zero when selection adjacent can be applied.\n   *                   Or -1 when selection adjacent can't be applied.\n   */\n  getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells) {\n    const data = this.hot.getData();\n    const nrOfTableRows = this.hot.countRows();\n    let lastFilledInRowIndex;\n    for (let rowIndex = cornersOfSelectedCells[2] + 1; rowIndex < nrOfTableRows; rowIndex++) {\n      for (let columnIndex = cornersOfSelectedCells[1]; columnIndex <= cornersOfSelectedCells[3]; columnIndex++) {\n        const dataInCell = data[rowIndex][columnIndex];\n        if (dataInCell) {\n          return -1;\n        }\n      }\n      const dataInNextLeftCell = data[rowIndex][cornersOfSelectedCells[1] - 1];\n      const dataInNextRightCell = data[rowIndex][cornersOfSelectedCells[3] + 1];\n      if (!!dataInNextLeftCell || !!dataInNextRightCell) {\n        lastFilledInRowIndex = rowIndex;\n      }\n    }\n    return lastFilledInRowIndex;\n  }\n\n  /**\n   * Adds a selection from the start area to the specific row index.\n   *\n   * @private\n   * @param {Array} selectStartArea Selection area from which we start to create more comprehensive selection.\n   * @param {number} rowIndex The row index into the selection will be added.\n   */\n  addSelectionFromStartAreaToSpecificRowIndex(selectStartArea, rowIndex) {\n    this.hot.selection.highlight.getFill().clear().add(this.hot._createCellCoords(selectStartArea[0], selectStartArea[1])).add(this.hot._createCellCoords(rowIndex, selectStartArea[3])).commit();\n  }\n\n  /**\n   * Sets selection based on passed corners.\n   *\n   * @private\n   * @param {Array} cornersOfArea An array witch defines selection.\n   */\n  setSelection(cornersOfArea) {\n    this.hot.selectCell(...arrayMap(cornersOfArea, index => Math.max(index, 0)), false, false);\n  }\n\n  /**\n   * Try to select cells down to the last row in the left column and then returns if selection was applied.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  selectAdjacent() {\n    const cornersOfSelectedCells = this.hot.getSelectedLast();\n    const lastFilledInRowIndex = this.getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells);\n    if (lastFilledInRowIndex === -1 || lastFilledInRowIndex === undefined) {\n      return false;\n    }\n    this.addSelectionFromStartAreaToSpecificRowIndex(cornersOfSelectedCells, lastFilledInRowIndex);\n    return true;\n  }\n\n  /**\n   * Resets selection of dragged area.\n   *\n   * @private\n   */\n  resetSelectionOfDraggedArea() {\n    this.handleDraggedCells = 0;\n    this.hot.selection.highlight.getFill().clear();\n  }\n\n  /**\n   * Redraws borders.\n   *\n   * @private\n   * @param {CellCoords} coords `CellCoords` coord object.\n   */\n  redrawBorders(coords) {\n    this.hot.selection.highlight.getFill().clear().add(this.hot.getSelectedRangeLast().from).add(this.hot.getSelectedRangeLast().to).add(coords).commit();\n    this.hot.view.render();\n  }\n\n  /**\n   * Get if mouse was dragged outside.\n   *\n   * @private\n   * @param {MouseEvent} event `mousemove` event properties.\n   * @returns {boolean}\n   */\n  getIfMouseWasDraggedOutside(event) {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    const tableBottom = offset(this.hot.table).top - (this.hot.rootWindow.pageYOffset || documentElement.scrollTop) + outerHeight(this.hot.table);\n    const tableRight = offset(this.hot.table).left - (this.hot.rootWindow.pageXOffset || documentElement.scrollLeft) + outerWidth(this.hot.table);\n    return event.clientY > tableBottom && event.clientX <= tableRight;\n  }\n\n  /**\n   * Bind the events used by the plugin.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    this.eventManager.addEventListener(documentElement, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(documentElement, 'mousemove', event => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, event));\n  }\n  /**\n   * Clears mapped settings.\n   *\n   * @private\n   */\n  clearMappedSettings() {\n    this.directions.length = 0;\n    this.autoInsertRow = false;\n  }\n\n  /**\n   * Map settings.\n   *\n   * @private\n   */\n  mapSettings() {\n    const mappedSettings = getMappedFillHandleSetting(this.hot.getSettings().fillHandle);\n    this.directions = mappedSettings.directions;\n    this.autoInsertRow = mappedSettings.autoInsertRow;\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onCellCornerDblClick2() {\n  const selectionApplied = this.selectAdjacent();\n  if (selectionApplied) {\n    this.fillIn();\n  }\n}\nfunction _onAfterCellCornerMouseDown2() {\n  this.handleDraggedCells = 1;\n  this.mouseDownOnCellCorner = true;\n}\nfunction _onBeforeCellMouseOver2(coords) {\n  if (this.mouseDownOnCellCorner && !this.hot.view.isMouseDown() && this.handleDraggedCells) {\n    this.handleDraggedCells += 1;\n    this.showBorder(coords);\n    this.addNewRowIfNeeded();\n  }\n}\nfunction _onMouseUp2() {\n  if (this.handleDraggedCells) {\n    if (this.handleDraggedCells > 1) {\n      this.fillIn();\n    }\n    this.handleDraggedCells = 0;\n    this.mouseDownOnCellCorner = false;\n  }\n}\nfunction _onMouseMove2(event) {\n  const mouseWasDraggedOutside = this.getIfMouseWasDraggedOutside(event);\n  if (this.addingStarted === false && this.handleDraggedCells > 0 && mouseWasDraggedOutside) {\n    this.mouseDragOutside = true;\n    this.addingStarted = true;\n  } else {\n    this.mouseDragOutside = false;\n  }\n  if (this.mouseDragOutside && this.autoInsertRow) {\n    this.addRow();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter } from \"../../helpers/array.mjs\";\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\nimport { isVisible } from \"../../helpers/dom/element.mjs\";\nimport GhostTable from \"../../utils/ghostTable.mjs\";\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\nimport { isPercentValue } from \"../../helpers/string.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nexport const PLUGIN_KEY = 'autoRowSize';\nexport const PLUGIN_PRIORITY = 40;\nconst ROW_WIDTHS_MAP_NAME = 'autoRowSize';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin AutoRowSize\n * @class AutoRowSize\n * @description\n * The `AutoRowSize` plugin allows you to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * But, to display Handsontable's [scrollbar](https://handsontable.com/docs/8.0.0/demo-scrolling.html)\n * in a proper size, you need to enable the `AutoRowSize` plugin,\n * by setting the [`autoRowSize`](@/api/options.md#autoRowSize) option to `true`.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of rows) or a percentage value to a config object:\n * ```js\n * // as a number (300 rows in sync, rest async)\n * autoRowSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * // First, let's contruct Handsontable\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   autoRowSize={true}\n * />\n *\n * ...\n *\n * // Access to plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nvar _onBeforeViewRender = /*#__PURE__*/new WeakSet();\nvar _onBeforeRowResize = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nvar _onBeforeChange = /*#__PURE__*/new WeakSet();\nexport class AutoRowSize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get SETTING_KEYS() {\n    return true;\n  }\n  static get CALCULATION_STEP() {\n    return 50;\n  }\n  static get SYNC_CALCULATION_LIMIT() {\n    return 500;\n  }\n\n  /**\n   * Columns header's height cache.\n   *\n   * @private\n   * @type {number}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * On before change listener.\n     *\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeChange);\n    /**\n     * On after load data listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * On before row resize listener.\n     *\n     * @param {number} size The size of the current row index.\n     * @param {number} row Current row index.\n     * @param {boolean} isDblClick Indicates if the resize was triggered by doubleclick.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRowResize);\n    /**\n     * On before view render listener.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeViewRender);\n    _defineProperty(this, \"headerHeight\", null);\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n    _defineProperty(this, \"ghostTable\", new GhostTable(this.hot));\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n    _defineProperty(this, \"samplesGenerator\", new SamplesGenerator((row, column) => {\n      if (row >= 0 && column >= 0) {\n        const cellMeta = this.hot.getCellMeta(row, column);\n        if (cellMeta.hidden) {\n          // do not generate samples for cells that are covered by merged cell (null values)\n          return false;\n        }\n      }\n      let cellValue;\n      if (row >= 0) {\n        cellValue = this.hot.getDataAtCell(row, column);\n      } else if (row === -1) {\n        cellValue = this.hot.getColHeader(column);\n      }\n      return {\n        value: cellValue\n      };\n    }));\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"firstCalculation\", true);\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"inProgress\", false);\n    /**\n     * Number of already measured rows (we already know their sizes).\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"measuredRows\", 0);\n    /**\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"rowHeightsMap\", new IndexToValueMap());\n    this.hot.rowIndexMapper.registerMap(ROW_WIDTHS_MAP_NAME, this.rowHeightsMap);\n\n    // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n    // This is necessary for height recalculation for resize handler doubleclick (ManualRowResize).\n    this.addHook('beforeRowResize', (size, row, isDblClick) => _classPrivateMethodGet(this, _onBeforeRowResize, _onBeforeRowResize2).call(this, size, row, isDblClick));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    return settings === true || isObject(settings);\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.setSamplingOptions();\n    this.addHook('afterLoadData', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.addHook('beforeChangeRender', changes => _classPrivateMethodGet(this, _onBeforeChange, _onBeforeChange2).call(this, changes));\n    this.addHook('beforeColumnResize', () => this.recalculateAllRowsHeight());\n    this.addHook('beforeViewRender', force => _classPrivateMethodGet(this, _onBeforeViewRender, _onBeforeViewRender2).call(this, force));\n    this.addHook('modifyRowHeight', (height, row) => this.getRowHeight(row, height));\n    this.addHook('modifyColumnHeaderHeight', () => this.getColumnHeaderHeight());\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.headerHeight = null;\n    super.disablePlugin();\n\n    // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n    // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n    this.addHook('beforeRowResize', (size, row, isDblClick) => _classPrivateMethodGet(this, _onBeforeRowResize, _onBeforeRowResize2).call(this, size, row, isDblClick));\n  }\n\n  /**\n   * Calculate a given rows height.\n   *\n   * @param {number|object} rowRange Row index or an object with `from` and `to` indexes as a range.\n   * @param {number|object} colRange Column index or an object with `from` and `to` indexes as a range.\n   * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n   */\n  calculateRowsHeight() {\n    let rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      from: 0,\n      to: this.hot.countRows() - 1\n    };\n    let colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      from: 0,\n      to: this.hot.countCols() - 1\n    };\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // eslint-disable-line max-len\n    const rowsRange = typeof rowRange === 'number' ? {\n      from: rowRange,\n      to: rowRange\n    } : rowRange;\n    const columnsRange = typeof colRange === 'number' ? {\n      from: colRange,\n      to: colRange\n    } : colRange;\n    if (this.hot.getColHeader(0) !== null) {\n      const samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n      this.ghostTable.addColumnHeadersRow(samples.get(-1));\n    }\n    rangeEach(rowsRange.from, rowsRange.to, row => {\n      // For rows we must calculate row height even when user had set height value manually.\n      // We can shrink column but cannot shrink rows!\n      if (force || this.rowHeightsMap.getValueAtIndex(row) === null) {\n        const samples = this.samplesGenerator.generateRowSamples(row, columnsRange);\n        arrayEach(samples, _ref => {\n          let [rowIndex, sample] = _ref;\n          return this.ghostTable.addRow(rowIndex, sample);\n        });\n      }\n    });\n    if (this.ghostTable.rows.length) {\n      this.hot.batchExecution(() => {\n        this.ghostTable.getHeights((row, height) => {\n          if (row < 0) {\n            this.headerHeight = height;\n          } else {\n            this.rowHeightsMap.setValueAtIndex(this.hot.toPhysicalRow(row), height);\n          }\n        });\n      }, true);\n      this.measuredRows = rowsRange.to + 1;\n      this.ghostTable.clean();\n    }\n  }\n\n  /**\n   * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n   * To retrieve height for specified row use {@link AutoRowSize#getRowHeight} method.\n   *\n   * @param {object|number} colRange Row index or an object with `from` and `to` properties which define row range.\n   */\n  calculateAllRowsHeight() {\n    let colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      from: 0,\n      to: this.hot.countCols() - 1\n    };\n    let current = 0;\n    const length = this.hot.countRows() - 1;\n    let timer = null;\n    this.inProgress = true;\n    const loop = () => {\n      // When hot was destroyed after calculating finished cancel frame\n      if (!this.hot) {\n        cancelAnimationFrame(timer);\n        this.inProgress = false;\n        return;\n      }\n      this.calculateRowsHeight({\n        from: current,\n        to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n      }, colRange);\n      current = current + AutoRowSize.CALCULATION_STEP + 1;\n      if (current < length) {\n        timer = requestAnimationFrame(loop);\n      } else {\n        cancelAnimationFrame(timer);\n        this.inProgress = false;\n\n        // @TODO Should call once per render cycle, currently fired separately in different plugins\n        this.hot.view.adjustElementsSize(true);\n\n        // tmp\n        if (this.hot.view._wt.wtOverlays.inlineStartOverlay.needFullRender) {\n          this.hot.view._wt.wtOverlays.inlineStartOverlay.clone.draw();\n        }\n      }\n    };\n    const syncLimit = this.getSyncCalculationLimit();\n\n    // sync\n    if (this.firstCalculation && syncLimit >= 0) {\n      this.calculateRowsHeight({\n        from: 0,\n        to: syncLimit\n      }, colRange);\n      this.firstCalculation = false;\n      current = syncLimit + 1;\n    }\n    // async\n    if (current < length) {\n      loop();\n    } else {\n      this.inProgress = false;\n      this.hot.view.adjustElementsSize(false);\n    }\n  }\n\n  /**\n   * Sets the sampling options.\n   *\n   * @private\n   */\n  setSamplingOptions() {\n    const setting = this.hot.getSettings()[PLUGIN_KEY];\n    const samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : undefined;\n    const allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : undefined;\n    if (samplingRatio && !isNaN(samplingRatio)) {\n      this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n    }\n    if (allowSampleDuplicates) {\n      this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n    }\n  }\n\n  /**\n   * Recalculates all rows height (overwrite cache values).\n   */\n  recalculateAllRowsHeight() {\n    if (isVisible(this.hot.view._wt.wtTable.TABLE)) {\n      this.clearCache();\n      this.calculateAllRowsHeight();\n    }\n  }\n\n  /**\n   * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n   * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n   *\n   * @returns {number}\n   */\n  getSyncCalculationLimit() {\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    /* eslint-disable no-bitwise */\n    let limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n    const rowsLimit = this.hot.countRows() - 1;\n    if (isObject(settings)) {\n      limit = settings.syncLimit;\n      if (isPercentValue(limit)) {\n        limit = valueAccordingPercent(rowsLimit, limit);\n      } else {\n        // Force to Number\n        limit >>= 0;\n      }\n    }\n    return Math.min(limit, rowsLimit);\n  }\n\n  /**\n   * Get a row's height, as measured in the DOM.\n   *\n   * The height returned includes 1 px of the row's bottom border.\n   *\n   * Mind that this method is different from the\n   * [`getRowHeight()`](@/api/core.md#getrowheight) method\n   * of Handsontable's [Core](@/api/core.md).\n   *\n   * @param {number} row A visual row index.\n   * @param {number} [defaultHeight] If no height is found, `defaultHeight` is returned instead.\n   * @returns {number} The height of the specified row, in pixels.\n   */\n  getRowHeight(row) {\n    let defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const cachedHeight = row < 0 ? this.headerHeight : this.rowHeightsMap.getValueAtIndex(this.hot.toPhysicalRow(row));\n    let height = defaultHeight;\n    if (cachedHeight !== null && cachedHeight > (defaultHeight || 0)) {\n      height = cachedHeight;\n    }\n    return height;\n  }\n\n  /**\n   * Get the calculated column header height.\n   *\n   * @returns {number|undefined}\n   */\n  getColumnHeaderHeight() {\n    return this.headerHeight;\n  }\n\n  /**\n   * Get the first visible row.\n   *\n   * @returns {number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n   */\n  getFirstVisibleRow() {\n    const wot = this.hot.view._wt;\n    if (wot.wtViewport.rowsVisibleCalculator) {\n      return wot.wtTable.getFirstVisibleRow();\n    }\n    if (wot.wtViewport.rowsRenderCalculator) {\n      return wot.wtTable.getFirstRenderedRow();\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last visible row.\n   *\n   * @returns {number} Returns row index or -1 if table is not rendered.\n   */\n  getLastVisibleRow() {\n    const wot = this.hot.view._wt;\n    if (wot.wtViewport.rowsVisibleCalculator) {\n      return wot.wtTable.getLastVisibleRow();\n    }\n    if (wot.wtViewport.rowsRenderCalculator) {\n      return wot.wtTable.getLastRenderedRow();\n    }\n    return -1;\n  }\n\n  /**\n   * Clears cached heights.\n   */\n  clearCache() {\n    this.headerHeight = null;\n    this.rowHeightsMap.init();\n  }\n\n  /**\n   * Clears cache by range.\n   *\n   * @param {object|number} range Row index or an object with `from` and `to` properties which define row range.\n   */\n  clearCacheByRange(range) {\n    const {\n      from,\n      to\n    } = typeof range === 'number' ? {\n      from: range,\n      to: range\n    } : range;\n    this.hot.batchExecution(() => {\n      rangeEach(Math.min(from, to), Math.max(from, to), row => {\n        this.rowHeightsMap.setValueAtIndex(row, null);\n      });\n    }, true);\n  }\n\n  /**\n   * Checks if all heights were calculated. If not then return `true` (need recalculate).\n   *\n   * @returns {boolean}\n   */\n  isNeedRecalculate() {\n    return !!arrayFilter(this.rowHeightsMap.getValues().slice(0, this.measuredRows), item => item === null).length;\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.ghostTable.clean();\n    super.destroy();\n  }\n}\nfunction _onBeforeViewRender2() {\n  const force = this.hot.renderCall;\n  const fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n  const firstVisibleRow = this.getFirstVisibleRow();\n  const lastVisibleRow = this.getLastVisibleRow();\n  if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n    return;\n  }\n  this.calculateRowsHeight({\n    from: firstVisibleRow,\n    to: lastVisibleRow\n  }, undefined, force);\n\n  // Calculate rows height synchronously for bottom overlay\n  if (fixedRowsBottom) {\n    const totalRows = this.hot.countRows() - 1;\n    this.calculateRowsHeight({\n      from: totalRows - fixedRowsBottom,\n      to: totalRows\n    });\n  }\n  if (this.isNeedRecalculate() && !this.inProgress) {\n    this.calculateAllRowsHeight();\n  }\n}\nfunction _onBeforeRowResize2(size, row, isDblClick) {\n  let newSize = size;\n  if (isDblClick) {\n    this.calculateRowsHeight(row, undefined, true);\n    newSize = this.getRowHeight(row);\n  }\n  return newSize;\n}\nfunction _onAfterLoadData2() {\n  if (this.hot.view) {\n    this.recalculateAllRowsHeight();\n  } else {\n    // first load - initialization\n    this.hot._registerTimeout(() => {\n      if (this.hot) {\n        this.recalculateAllRowsHeight();\n      }\n    });\n  }\n}\nfunction _onBeforeChange2(changes) {\n  let range = null;\n  if (changes.length === 1) {\n    range = changes[0][0];\n  } else if (changes.length > 1) {\n    range = {\n      from: changes[0][0],\n      to: changes[changes.length - 1][0]\n    };\n  }\n  if (range !== null) {\n    this.clearCacheByRange(range);\n  }\n}", "import { IndexMap, alterUtilsFactory, getDecreasedIndexes, getIncreasedIndexes } from \"../../../translations/index.mjs\";\nconst {\n  getListWithInsertedItems,\n  getListWithRemovedItems\n} = alterUtilsFactory('physicallyIndexed');\n\n/**\n * Map from physical index to another index.\n */\nclass LooseBindsMap extends IndexMap {\n  constructor() {\n    super(index => index);\n  }\n\n  /**\n   * Add values to list and reorganize.\n   *\n   * @private\n   * @param {number} insertionIndex Position inside the list.\n   * @param {Array} insertedIndexes List of inserted indexes.\n   */\n  insert(insertionIndex, insertedIndexes) {\n    const listAfterUpdate = getIncreasedIndexes(this.indexedValues, insertedIndexes);\n    this.indexedValues = getListWithInsertedItems(listAfterUpdate, insertionIndex, insertedIndexes, this.initValueOrFn);\n    super.insert(insertionIndex, insertedIndexes);\n  }\n\n  /**\n   * Remove values from the list and reorganize.\n   *\n   * @private\n   * @param {Array} removedIndexes List of removed indexes.\n   */\n  remove(removedIndexes) {\n    const listAfterUpdate = getListWithRemovedItems(this.indexedValues, removedIndexes);\n    this.indexedValues = getDecreasedIndexes(listAfterUpdate, removedIndexes);\n    super.remove(removedIndexes);\n  }\n}\nexport default LooseBindsMap;", "import { IndexMap, alterUtilsFactory } from \"../../../translations/index.mjs\";\nconst {\n  getListWithInsertedItems,\n  getListWithRemovedItems\n} = alterUtilsFactory('physicallyIndexed');\n\n/**\n * Map from physical index to another index.\n */\nclass StrictBindsMap extends IndexMap {\n  constructor() {\n    super(index => index);\n  }\n\n  /**\n   * Add values to list and reorganize.\n   *\n   * @private\n   * @param {number} insertionIndex Position inside the list.\n   * @param {Array} insertedIndexes List of inserted indexes.\n   */\n  insert(insertionIndex, insertedIndexes) {\n    this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, (_, ordinalNumber) => this.getNextValue(ordinalNumber));\n    super.insert(insertionIndex, insertedIndexes);\n  }\n\n  /**\n   * Remove values from the list and reorganize.\n   *\n   * @private\n   * @param {Array} removedIndexes List of removed indexes.\n   */\n  remove(removedIndexes) {\n    this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n    super.remove(removedIndexes);\n  }\n\n  /**\n   * Get next values, which should be greater than actual maximum value in the list.\n   *\n   * @param {number} ordinalNumber Position in the list.\n   * @returns {number}\n   */\n  getNextValue(ordinalNumber) {\n    return Math.max(...this.getValues()) + 1 + ordinalNumber;\n  }\n}\nexport default StrictBindsMap;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport LooseBindsMap from \"./maps/looseBindsMap.mjs\";\nimport StrictBindsMap from \"./maps/strictBindsMap.mjs\";\nexport const PLUGIN_KEY = 'bindRowsWithHeaders';\nexport const PLUGIN_PRIORITY = 210;\nconst DEFAULT_BIND = 'loose';\nconst bindTypeToMapStrategy = new Map([['loose', LooseBindsMap], ['strict', StrictBindsMap]]);\n\n/**\n * @plugin BindRowsWithHeaders\n * @class BindRowsWithHeaders\n *\n * @description\n * Plugin allows binding the table rows with their headers.\n *\n * If the plugin is enabled, the table row headers will \"stick\" to the rows, when they are hidden/moved. Basically, if\n * at the initialization row 0 has a header titled \"A\", it will have it no matter what you do with the table.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // enable plugin\n *   bindRowsWithHeaders: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   bindRowsWithHeaders={true}\n * />\n * ```\n * :::\n */\nvar _onModifyRowHeader = /*#__PURE__*/new WeakSet();\nexport class BindRowsWithHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On modify row header listener.\n     *\n     * @param {number} row Row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeader);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexMap}\n     */\n    _defineProperty(this, \"headerIndexes\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link BindRowsWithHeaders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    let bindType = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof bindType !== 'string') {\n      bindType = DEFAULT_BIND;\n    }\n    const MapStrategy = bindTypeToMapStrategy.get(bindType);\n    this.headerIndexes = this.hot.rowIndexMapper.registerMap('bindRowsWithHeaders', new MapStrategy());\n    this.addHook('modifyRowHeader', row => _classPrivateMethodGet(this, _onModifyRowHeader, _onModifyRowHeader2).call(this, row));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('bindRowsWithHeaders');\n    super.disablePlugin();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeader2(row) {\n  return this.headerIndexes.getValueAtIndex(this.hot.toPhysicalRow(row));\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter, arrayUnique } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { addClass, hasClass, removeClass, fastInnerText, removeAttribute, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { stopImmediatePropagation } from \"../../helpers/dom/event.mjs\";\nimport { A11Y_EXPANDED, A11Y_HIDDEN } from \"../../helpers/a11y.mjs\";\nexport const PLUGIN_KEY = 'collapsibleColumns';\nexport const PLUGIN_PRIORITY = 290;\nconst SETTING_KEYS = ['nestedHeaders'];\nconst COLLAPSIBLE_ELEMENT_CLASS = 'collapsibleIndicator';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nconst actionDictionary = new Map([['collapse', {\n  hideColumn: true,\n  beforeHook: 'beforeColumnCollapse',\n  afterHook: 'afterColumnCollapse'\n}], ['expand', {\n  hideColumn: false,\n  beforeHook: 'beforeColumnExpand',\n  afterHook: 'afterColumnExpand'\n}]]);\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin CollapsibleColumns\n * @class CollapsibleColumns\n *\n * @description\n * The _CollapsibleColumns_ plugin allows collapsing of columns, covered by a header with the `colspan` property defined.\n *\n * Clicking the \"collapse/expand\" button collapses (or expands) all \"child\" headers except the first one.\n *\n * Setting the {@link Options#collapsiblecolumns} property to `true` will display a \"collapse/expand\" button in every header\n * with a defined `colspan` property.\n *\n * To limit this functionality to a smaller group of headers, define the `collapsibleColumns` property as an array\n * of objects, as in the example below.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: generateDataObj(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   nestedHeaders: true,\n *   // enable plugin\n *   collapsibleColumns: true,\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: generateDataObj(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   nestedHeaders: true,\n *   // enable and configure which columns can be collapsed\n *   collapsibleColumns: [\n *     {row: -4, col: 1, collapsible: true},\n *     {row: -3, col: 5, collapsible: true}\n *   ],\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={generateDataObj()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   nestedHeaders={true}\n *   // enable plugin\n *   collapsibleColumns={true}\n * />\n *\n * // or\n * <HotTable\n *   data={generateDataObj()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   nestedHeaders={true}\n *   // enable and configure which columns can be collapsed\n *   collapsibleColumns={[\n *     {row: -4, col: 1, collapsible: true},\n *     {row: -3, col: 5, collapsible: true}\n *   ]}\n * />\n * ```\n * :::\n */\nvar _collapsedColumnsMap = /*#__PURE__*/new WeakMap();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onInit = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class CollapsibleColumns extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Updates the plugin state after new dataset load.\n     *\n     * @param {Array[]} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded\n     *                              during the initialization.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * Updates the plugin state after HoT initialization.\n     */\n    _classPrivateMethodInitSpec(this, _onInit);\n    /**\n     * Indicator mouse event callback.\n     *\n     * @param {object} event Mouse event.\n     * @param {object} coords Event coordinates.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Adds the indicator to the headers.\n     *\n     * @param {number} column Column index.\n     * @param {HTMLElement} TH TH element.\n     * @param {number} headerLevel The index of header level counting from the top (positive\n     *                             values counting from 0 to N).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Cached reference to the NestedHeaders plugin.\n     *\n     * @private\n     * @type {NestedHeaders}\n     */\n    _defineProperty(this, \"nestedHeadersPlugin\", null);\n    /**\n     * The NestedHeaders plugin StateManager instance.\n     *\n     * @private\n     * @type {StateManager}\n     */\n    _defineProperty(this, \"headerStateManager\", null);\n    /**\n     * Map of collapsed columns by the plugin.\n     *\n     * @private\n     * @type {HidingMap|null}\n     */\n    _classPrivateFieldInitSpec(this, _collapsedColumnsMap, {\n      writable: true,\n      value: null\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:NestedHeaders'];\n  }\n  static get SETTING_KEYS() {\n    return [PLUGIN_KEY, ...SETTING_KEYS];\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link CollapsibleColumns#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const {\n      nestedHeaders\n    } = this.hot.getSettings();\n    if (!nestedHeaders) {\n      warn('You need to configure the Nested Headers plugin in order to use collapsible headers.');\n    }\n    _classPrivateFieldSet(this, _collapsedColumnsMap, this.hot.columnIndexMapper.createAndRegisterIndexMap(this.pluginName, 'hiding'));\n    this.nestedHeadersPlugin = this.hot.getPlugin('nestedHeaders');\n    this.headerStateManager = this.nestedHeadersPlugin.getStateManager();\n    this.addHook('init', () => _classPrivateMethodGet(this, _onInit, _onInit2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.addHook('afterGetColHeader', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onAfterGetColHeader, _onAfterGetColHeader2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseDown', (event, coords, TD) => _classPrivateMethodGet(this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(this, event, coords, TD));\n    this.registerShortcuts();\n    super.enablePlugin();\n    // @TODO: Workaround for broken plugin initialization abstraction (#6806).\n    this.updatePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *   - [`collapsibleColumns`](@/api/options.md#collapsiblecolumns)\n   *   - [`nestedHeaders`](@/api/options.md#nestedheaders)\n   */\n  updatePlugin() {\n    // @TODO: Workaround for broken plugin initialization abstraction (#6806).\n    if (!this.hot.view) {\n      return;\n    }\n    if (!this.nestedHeadersPlugin.detectedOverlappedHeaders) {\n      const {\n        collapsibleColumns\n      } = this.hot.getSettings();\n      if (typeof collapsibleColumns === 'boolean') {\n        // Add `collapsible: true` attribute to all headers with colspan higher than 1.\n        this.headerStateManager.mapState(headerSettings => {\n          return {\n            collapsible: headerSettings.origColspan > 1\n          };\n        });\n      } else if (Array.isArray(collapsibleColumns)) {\n        this.headerStateManager.mapState(() => {\n          return {\n            collapsible: false\n          };\n        });\n        this.headerStateManager.mergeStateWith(collapsibleColumns);\n      }\n    }\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n    _classPrivateFieldSet(this, _collapsedColumnsMap, null);\n    this.nestedHeadersPlugin = null;\n    this.unregisterShortcuts();\n    this.clearButtons();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling collapsible columns.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Enter']],\n      callback: () => {\n        var _this$headerStateMana;\n        const {\n          row,\n          col\n        } = this.hot.getSelectedRangeLast().highlight;\n        const {\n          collapsible,\n          isCollapsed,\n          columnIndex\n        } = (_this$headerStateMana = this.headerStateManager.getHeaderTreeNodeData(row, col)) !== null && _this$headerStateMana !== void 0 ? _this$headerStateMana : {};\n        if (!collapsible) {\n          return;\n        }\n        if (isCollapsed) {\n          this.expandSection({\n            row,\n            col: columnIndex\n          });\n        } else {\n          this.collapseSection({\n            row,\n            col: columnIndex\n          });\n        }\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        return (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight.isHeader();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling collapsible columns.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Clears the expand/collapse buttons.\n   *\n   * @private\n   */\n  clearButtons() {\n    if (!this.hot.view) {\n      return;\n    }\n    const headerLevels = this.hot.view._wt.getSetting('columnHeaders').length;\n    const mainHeaders = this.hot.view._wt.wtTable.THEAD;\n    const topHeaders = this.hot.view._wt.wtOverlays.topOverlay.clone.wtTable.THEAD;\n    const topLeftCornerHeaders = this.hot.view._wt.wtOverlays.topInlineStartCornerOverlay ? this.hot.view._wt.wtOverlays.topInlineStartCornerOverlay.clone.wtTable.THEAD : null;\n    const removeButton = function (button) {\n      if (button) {\n        button.parentNode.removeChild(button);\n      }\n    };\n    rangeEach(0, headerLevels - 1, i => {\n      const masterLevel = mainHeaders.childNodes[i];\n      const topLevel = topHeaders.childNodes[i];\n      const topLeftCornerLevel = topLeftCornerHeaders ? topLeftCornerHeaders.childNodes[i] : null;\n      rangeEach(0, masterLevel.childNodes.length - 1, j => {\n        let button = masterLevel.childNodes[j].querySelector(`.${COLLAPSIBLE_ELEMENT_CLASS}`);\n        removeButton(button);\n        if (topLevel && topLevel.childNodes[j]) {\n          button = topLevel.childNodes[j].querySelector(`.${COLLAPSIBLE_ELEMENT_CLASS}`);\n          removeButton(button);\n        }\n        if (topLeftCornerHeaders && topLeftCornerLevel && topLeftCornerLevel.childNodes[j]) {\n          button = topLeftCornerLevel.childNodes[j].querySelector(`.${COLLAPSIBLE_ELEMENT_CLASS}`);\n          removeButton(button);\n        }\n      });\n    }, true);\n  }\n\n  /**\n   * Expands section at the provided coords.\n   *\n   * @param {object} coords Contains coordinates information. (`coords.row`, `coords.col`).\n   */\n  expandSection(coords) {\n    this.toggleCollapsibleSection([coords], 'expand');\n  }\n\n  /**\n   * Collapses section at the provided coords.\n   *\n   * @param {object} coords Contains coordinates information. (`coords.row`, `coords.col`).\n   */\n  collapseSection(coords) {\n    this.toggleCollapsibleSection([coords], 'collapse');\n  }\n\n  /**\n   * Collapses or expand all collapsible sections, depending on the action parameter.\n   *\n   * @param {string} action 'collapse' or 'expand'.\n   */\n  toggleAllCollapsibleSections(action) {\n    const coords = this.headerStateManager.mapNodes(headerSettings => {\n      const {\n        collapsible,\n        origColspan,\n        headerLevel,\n        columnIndex,\n        isCollapsed\n      } = headerSettings;\n      if (collapsible === true && origColspan > 1 && (isCollapsed && action === 'expand' || !isCollapsed && action === 'collapse')) {\n        return {\n          row: this.headerStateManager.levelToRowCoords(headerLevel),\n          col: columnIndex\n        };\n      }\n    });\n    this.toggleCollapsibleSection(coords, action);\n  }\n\n  /**\n   * Collapses all collapsible sections.\n   */\n  collapseAll() {\n    this.toggleAllCollapsibleSections('collapse');\n  }\n\n  /**\n   * Expands all collapsible sections.\n   */\n  expandAll() {\n    this.toggleAllCollapsibleSections('expand');\n  }\n\n  /**\n   * Collapses/Expands a section.\n   *\n   * @param {Array} coords Array of coords - section coordinates.\n   * @param {string} [action] Action definition ('collapse' or 'expand').\n   * @fires Hooks#beforeColumnCollapse\n   * @fires Hooks#beforeColumnExpand\n   * @fires Hooks#afterColumnCollapse\n   * @fires Hooks#afterColumnExpand\n   */\n  toggleCollapsibleSection(coords, action) {\n    if (!actionDictionary.has(action)) {\n      throw new Error(`Unsupported action is passed (${action}).`);\n    }\n    if (!Array.isArray(coords)) {\n      return;\n    }\n\n    // Ignore coordinates which points to the cells range.\n    const filteredCoords = arrayFilter(coords, _ref => {\n      let {\n        row\n      } = _ref;\n      return row < 0;\n    });\n    let isActionPossible = filteredCoords.length > 0;\n    arrayEach(filteredCoords, _ref2 => {\n      var _this$headerStateMana2;\n      let {\n        row,\n        col: column\n      } = _ref2;\n      const {\n        collapsible,\n        isCollapsed\n      } = (_this$headerStateMana2 = this.headerStateManager.getHeaderSettings(row, column)) !== null && _this$headerStateMana2 !== void 0 ? _this$headerStateMana2 : {};\n      if (!collapsible || isCollapsed && action === 'collapse' || !isCollapsed && action === 'expand') {\n        isActionPossible = false;\n        return false;\n      }\n    });\n    const nodeModRollbacks = [];\n    const affectedColumnsIndexes = [];\n    if (isActionPossible) {\n      arrayEach(filteredCoords, _ref3 => {\n        let {\n          row,\n          col: column\n        } = _ref3;\n        const {\n          colspanCompensation,\n          affectedColumns,\n          rollbackModification\n        } = this.headerStateManager.triggerNodeModification(action, row, column);\n        if (colspanCompensation > 0) {\n          affectedColumnsIndexes.push(...affectedColumns);\n          nodeModRollbacks.push(rollbackModification);\n        }\n      });\n    }\n    const currentCollapsedColumns = this.getCollapsedColumns();\n    let destinationCollapsedColumns = [];\n    if (action === 'collapse') {\n      destinationCollapsedColumns = arrayUnique([...currentCollapsedColumns, ...affectedColumnsIndexes]);\n    } else if (action === 'expand') {\n      destinationCollapsedColumns = arrayFilter(currentCollapsedColumns, index => !affectedColumnsIndexes.includes(index));\n    }\n    const actionTranslator = actionDictionary.get(action);\n    const isActionAllowed = this.hot.runHooks(actionTranslator.beforeHook, currentCollapsedColumns, destinationCollapsedColumns, isActionPossible);\n    if (isActionAllowed === false) {\n      // Rollback all header nodes modification (collapse or expand).\n      arrayEach(nodeModRollbacks, nodeModRollback => {\n        nodeModRollback();\n      });\n      return;\n    }\n    this.hot.batchExecution(() => {\n      arrayEach(affectedColumnsIndexes, visualColumn => {\n        _classPrivateFieldGet(this, _collapsedColumnsMap).setValueAtIndex(this.hot.toPhysicalColumn(visualColumn), actionTranslator.hideColumn);\n      });\n    }, true);\n    const isActionPerformed = this.getCollapsedColumns().length !== currentCollapsedColumns.length;\n    this.hot.runHooks(actionTranslator.afterHook, currentCollapsedColumns, destinationCollapsedColumns, isActionPossible, isActionPerformed);\n    this.hot.render();\n    this.hot.view.adjustElementsSize(true);\n  }\n\n  /**\n   * Gets an array of physical indexes of collapsed columns.\n   *\n   * @private\n   * @returns {number[]}\n   */\n  getCollapsedColumns() {\n    return _classPrivateFieldGet(this, _collapsedColumnsMap).getHiddenIndexes();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldSet(this, _collapsedColumnsMap, null);\n    super.destroy();\n  }\n}\nfunction _onAfterGetColHeader2(column, TH, headerLevel) {\n  var _this$headerStateMana3;\n  const {\n    collapsible,\n    origColspan,\n    isCollapsed\n  } = (_this$headerStateMana3 = this.headerStateManager.getHeaderSettings(headerLevel, column)) !== null && _this$headerStateMana3 !== void 0 ? _this$headerStateMana3 : {};\n  const isNodeCollapsible = collapsible && origColspan > 1 && column >= this.hot.getSettings().fixedColumnsStart;\n  const isAriaTagsEnabled = this.hot.getSettings().ariaTags;\n  let collapsibleElement = TH.querySelector(`.${COLLAPSIBLE_ELEMENT_CLASS}`);\n  removeAttribute(TH, [A11Y_EXPANDED('')[0]]);\n  if (isNodeCollapsible) {\n    if (!collapsibleElement) {\n      collapsibleElement = this.hot.rootDocument.createElement('div');\n      addClass(collapsibleElement, COLLAPSIBLE_ELEMENT_CLASS);\n      TH.querySelector('div:first-child').appendChild(collapsibleElement);\n    }\n    removeClass(collapsibleElement, ['collapsed', 'expanded']);\n    if (isCollapsed) {\n      addClass(collapsibleElement, 'collapsed');\n      fastInnerText(collapsibleElement, '+');\n\n      // Add ARIA tags\n      if (isAriaTagsEnabled) {\n        setAttribute(TH, ...A11Y_EXPANDED(false));\n      }\n    } else {\n      addClass(collapsibleElement, 'expanded');\n      fastInnerText(collapsibleElement, '-');\n\n      // Add ARIA tags\n      if (isAriaTagsEnabled) {\n        setAttribute(TH, ...A11Y_EXPANDED(true));\n      }\n    }\n    if (isAriaTagsEnabled) {\n      setAttribute(collapsibleElement, ...A11Y_HIDDEN());\n    }\n  } else {\n    var _collapsibleElement;\n    (_collapsibleElement = collapsibleElement) === null || _collapsibleElement === void 0 || _collapsibleElement.remove();\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords) {\n  if (hasClass(event.target, COLLAPSIBLE_ELEMENT_CLASS)) {\n    if (hasClass(event.target, 'expanded')) {\n      this.eventManager.fireEvent(event.target, 'mouseup');\n      this.toggleCollapsibleSection([coords], 'collapse');\n    } else if (hasClass(event.target, 'collapsed')) {\n      this.eventManager.fireEvent(event.target, 'mouseup');\n      this.toggleCollapsibleSection([coords], 'expand');\n    }\n    stopImmediatePropagation(event);\n  }\n}\nfunction _onInit2() {\n  // @TODO: Workaround for broken plugin initialization abstraction (#6806).\n  this.updatePlugin();\n}\nfunction _onAfterLoadData2(sourceData, initialLoad) {\n  if (!initialLoad) {\n    this.updatePlugin();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isObject, objectEach } from \"../../helpers/object.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nconst inheritedColumnProperties = ['sortEmptyCells', 'indicator', 'headerAction', 'compareFunctionFactory'];\nconst SORT_EMPTY_CELLS_DEFAULT = false;\nconst SHOW_SORT_INDICATOR_DEFAULT = true;\nconst HEADER_ACTION_DEFAULT = true;\n\n/**\n * Store and manages states of sorted columns.\n *\n * @private\n * @class ColumnStatesManager\n */\nexport class ColumnStatesManager {\n  constructor(hot, mapName) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Index map storing sorting states for every column. ColumnStatesManager write and read to/from this element.\n     *\n     * @type {LinkedPhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"sortingStates\", new IndexToValueMap());\n    /**\n     * Determines whether we should sort empty cells.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"sortEmptyCells\", SORT_EMPTY_CELLS_DEFAULT);\n    /**\n     * Determines whether indicator should be visible (for sorted columns).\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"indicator\", SHOW_SORT_INDICATOR_DEFAULT);\n    /**\n     * Determines whether click on the header perform sorting.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"headerAction\", HEADER_ACTION_DEFAULT);\n    /**\n     * Determines compare function factory. Method get as parameters `sortOder` and `columnMeta` and return compare function.\n     */\n    _defineProperty(this, \"compareFunctionFactory\", void 0);\n    /**\n     * Name of map storing sorting states. Required for unique name (PR #7440 introduced it). It's needed as\n     * both ColumnSorting and MultiColumnSorting plugins create state manager and as a consequence register maps.\n     * Objects are destroyed in strange order as the updateSettings doesn't work well.\n     */\n    _defineProperty(this, \"mapName\", void 0);\n    this.hot = hot;\n    this.mapName = mapName;\n    this.hot.columnIndexMapper.registerMap(mapName, this.sortingStates);\n  }\n\n  /**\n   * Update column properties which affect the sorting result.\n   *\n   * **Note**: All column properties can be overwritten by {@link Options#columns} option.\n   *\n   * @param {object} allSortSettings Column sorting plugin's configuration object.\n   */\n  updateAllColumnsProperties(allSortSettings) {\n    if (!isObject(allSortSettings)) {\n      return;\n    }\n    objectEach(allSortSettings, (newValue, propertyName) => {\n      if (inheritedColumnProperties.includes(propertyName)) {\n        this[propertyName] = newValue;\n      }\n    });\n  }\n\n  /**\n   * Get all column properties which affect the sorting result.\n   *\n   * @returns {object}\n   */\n  getAllColumnsProperties() {\n    const columnProperties = {\n      sortEmptyCells: this.sortEmptyCells,\n      indicator: this.indicator,\n      headerAction: this.headerAction\n    };\n    if (typeof this.compareFunctionFactory === 'function') {\n      columnProperties.compareFunctionFactory = this.compareFunctionFactory;\n    }\n    return columnProperties;\n  }\n\n  /**\n   * Get sort order of column.\n   *\n   * @param {number} searchedColumn Visual column index.\n   * @returns {string|undefined} Sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n   */\n  getSortOrderOfColumn(searchedColumn) {\n    var _this$sortingStates$g;\n    return (_this$sortingStates$g = this.sortingStates.getValueAtIndex(this.hot.toPhysicalColumn(searchedColumn))) === null || _this$sortingStates$g === void 0 ? void 0 : _this$sortingStates$g.sortOrder;\n  }\n\n  /**\n   * Get order of particular column in the states queue.\n   *\n   * @param {number} column Visual column index.\n   * @returns {number}\n   */\n  getIndexOfColumnInSortQueue(column) {\n    column = this.hot.toPhysicalColumn(column);\n    return this.sortingStates.getEntries().findIndex(_ref => {\n      let [physicalColumn] = _ref;\n      return physicalColumn === column;\n    });\n  }\n\n  /**\n   * Get number of sorted columns.\n   *\n   * @returns {number}\n   */\n  getNumberOfSortedColumns() {\n    return this.sortingStates.getLength();\n  }\n\n  /**\n   * Get if list of sorted columns is empty.\n   *\n   * @returns {boolean}\n   */\n  isListOfSortedColumnsEmpty() {\n    return this.getNumberOfSortedColumns() === 0;\n  }\n\n  /**\n   * Get if particular column is sorted.\n   *\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  isColumnSorted(column) {\n    return isObject(this.sortingStates.getValueAtIndex(this.hot.toPhysicalColumn(column)));\n  }\n\n  /**\n   * Queue of sort states containing sorted columns and their orders (Array of objects containing `column` and `sortOrder` properties).\n   *\n   * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key.\n   *\n   * @returns {Array<object>}\n   */\n  getSortStates() {\n    if (this.sortingStates === null) {\n      return [];\n    }\n    const sortingStatesQueue = this.sortingStates.getEntries();\n    return sortingStatesQueue.map(_ref2 => {\n      let [physicalColumn, value] = _ref2;\n      return {\n        column: this.hot.toVisualColumn(physicalColumn),\n        ...value\n      };\n    });\n  }\n\n  /**\n   * Get sort state for particular column. Object contains `column` and `sortOrder` properties.\n   *\n   * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key.\n   *\n   * @param {number} column Visual column index.\n   * @returns {object|undefined}\n   */\n  getColumnSortState(column) {\n    const sortOrder = this.getSortOrderOfColumn(column);\n    if (isDefined(sortOrder)) {\n      return {\n        column,\n        sortOrder\n      };\n    }\n  }\n\n  /**\n   * Set all column states.\n   *\n   * @param {Array} sortStates Sort states.\n   */\n  setSortStates(sortStates) {\n    this.sortingStates.clear();\n    for (let i = 0; i < sortStates.length; i += 1) {\n      this.sortingStates.setValueAtIndex(this.hot.toPhysicalColumn(sortStates[i].column), {\n        sortOrder: sortStates[i].sortOrder\n      });\n    }\n  }\n\n  /**\n   * Destroy the state manager.\n   */\n  destroy() {\n    this.hot.columnIndexMapper.unregisterMap(this.mapName);\n    this.sortingStates = null;\n  }\n}", "import { isObject } from \"../../helpers/object.mjs\";\nimport { isRightClick } from \"../../helpers/dom/event.mjs\";\nexport const ASC_SORT_STATE = 'asc';\nexport const DESC_SORT_STATE = 'desc';\nexport const HEADER_SPAN_CLASS = 'colHeader';\n\n/**\n * Get if column state is valid.\n *\n * @param {number} columnState Particular column state.\n * @returns {boolean}\n */\nfunction isValidColumnState(columnState) {\n  if (isObject(columnState) === false) {\n    return false;\n  }\n  const {\n    column,\n    sortOrder\n  } = columnState;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates The sort state collection.\n * @returns {boolean}\n */\nexport function areValidSortStates(sortStates) {\n  if (sortStates.some(columnState => isValidColumnState(columnState) === false)) {\n    return false;\n  }\n  const sortedColumns = sortStates.map(_ref => {\n    let {\n      column\n    } = _ref;\n    return column;\n  });\n\n  // Indexes occurs only once.\n  return new Set(sortedColumns).size === sortedColumns.length;\n}\n\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'.\n *\n * @param {string|undefined} sortOrder Sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {string|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n  return ASC_SORT_STATE;\n}\n\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH Th HTML element.\n * @returns {Element | null}\n */\nexport function getHeaderSpanElement(TH) {\n  const headerSpanElement = TH.querySelector(`.${HEADER_SPAN_CLASS}`);\n  return headerSpanElement;\n}\n\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {number} column Visual column index.\n * @param {Element} TH Th HTML element.\n * @returns {boolean}\n */\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n  const TRs = TH.parentNode.parentNode.childNodes;\n  const headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n  if (headerLevel !== -1) {\n    return false;\n  }\n  return true;\n}\n\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {number} row Visual row index.\n * @param {number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {boolean}\n */\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}", "import \"core-js/modules/es.array.push.js\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nimport { ASC_SORT_STATE, DESC_SORT_STATE } from \"./utils.mjs\";\nconst HEADER_CLASS_ASC_SORT = 'ascending';\nconst HEADER_CLASS_DESC_SORT = 'descending';\nconst HEADER_CLASS_INDICATOR_DISABLED = 'indicatorDisabled';\nconst HEADER_SORT_CLASS = 'columnSorting';\nconst HEADER_ACTION_CLASS = 'sortAction';\nconst orderToCssClass = new Map([[ASC_SORT_STATE, HEADER_CLASS_ASC_SORT], [DESC_SORT_STATE, HEADER_CLASS_DESC_SORT]]);\n\n/**\n * Get CSS classes which should be added to particular column header.\n *\n * @param {object} columnStatesManager Instance of column state manager.\n * @param {number} column Visual column index.\n * @param {boolean} showSortIndicator Indicates if indicator should be shown for the particular column.\n * @param {boolean} headerAction Indicates if header click to sort should be possible.\n * @returns {Array} Array of CSS classes.\n */\nexport function getClassesToAdd(columnStatesManager, column, showSortIndicator, headerAction) {\n  const cssClasses = [HEADER_SORT_CLASS];\n  if (headerAction) {\n    cssClasses.push(HEADER_ACTION_CLASS);\n  }\n  if (showSortIndicator === false) {\n    cssClasses.push(HEADER_CLASS_INDICATOR_DISABLED);\n    return cssClasses;\n  }\n  const columnOrder = columnStatesManager.getSortOrderOfColumn(column);\n  if (isDefined(columnOrder)) {\n    cssClasses.push(orderToCssClass.get(columnOrder));\n  }\n  return cssClasses;\n}\n\n/**\n * Get CSS classes which should be removed from column header.\n *\n * @returns {Array} Array of CSS classes.\n */\nexport function getClassesToRemove() {\n  return Array.from(orderToCssClass.values()).concat(HEADER_ACTION_CLASS, HEADER_CLASS_INDICATOR_DISABLED, HEADER_SORT_CLASS);\n}", "import { isEmpty } from \"../../../helpers/mixed.mjs\";\nimport { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\n/**\n * Default sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  const locale = columnMeta.locale;\n  return function (value, nextValue) {\n    const {\n      sortEmptyCells\n    } = columnPluginSettings;\n    if (typeof value === 'string') {\n      value = value.toLocaleLowerCase(locale);\n    }\n    if (typeof nextValue === 'string') {\n      nextValue = nextValue.toLocaleLowerCase(locale);\n    }\n    if (value === nextValue) {\n      return DO_NOT_SWAP;\n    }\n    if (isEmpty(value)) {\n      if (isEmpty(nextValue)) {\n        return DO_NOT_SWAP;\n      }\n\n      // Just fist value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n      }\n      return FIRST_AFTER_SECOND;\n    }\n    if (isEmpty(nextValue)) {\n      // Just second value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n      }\n      return FIRST_BEFORE_SECOND;\n    }\n    if (isNaN(value) && !isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    } else if (!isNaN(value) && isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    } else if (!(isNaN(value) || isNaN(nextValue))) {\n      value = parseFloat(value);\n      nextValue = parseFloat(nextValue);\n    }\n    if (value < nextValue) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n    if (value > nextValue) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'default';", "import { isEmpty } from \"../../../helpers/mixed.mjs\";\nimport { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\n/**\n * Numeric sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  return function (value, nextValue) {\n    const parsedFirstValue = parseFloat(value);\n    const parsedSecondValue = parseFloat(nextValue);\n    const {\n      sortEmptyCells\n    } = columnPluginSettings;\n\n    // Watch out when changing this part of code! Check below returns 0 (as expected) when comparing empty string, null, undefined\n    if (parsedFirstValue === parsedSecondValue || isNaN(parsedFirstValue) && isNaN(parsedSecondValue)) {\n      return DO_NOT_SWAP;\n    }\n    if (sortEmptyCells) {\n      if (isEmpty(value)) {\n        return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n      }\n      if (isEmpty(nextValue)) {\n        return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n      }\n    }\n    if (isNaN(parsedFirstValue)) {\n      return FIRST_AFTER_SECOND;\n    }\n    if (isNaN(parsedSecondValue)) {\n      return FIRST_BEFORE_SECOND;\n    }\n    if (parsedFirstValue < parsedSecondValue) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    } else if (parsedFirstValue > parsedSecondValue) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'numeric';", "import { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\nimport { compareFunctionFactory as defaultCompareFunctionFactory } from \"../sortFunction/default.mjs\";\nimport { isEmpty } from \"../../../helpers/mixed.mjs\";\n/**\n * Checkbox sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  const checkedTemplate = columnMeta.checkedTemplate;\n  const uncheckedTemplate = columnMeta.uncheckedTemplate;\n  const {\n    sortEmptyCells\n  } = columnPluginSettings;\n  return function (value, nextValue) {\n    const isEmptyValue = isEmpty(value);\n    const isEmptyNextValue = isEmpty(nextValue);\n    const unifiedValue = isEmptyValue ? uncheckedTemplate : value;\n    const unifiedNextValue = isEmptyNextValue ? uncheckedTemplate : nextValue;\n    const isValueFromTemplate = unifiedValue === uncheckedTemplate || unifiedValue === checkedTemplate;\n    const isNextValueFromTemplate = unifiedNextValue === uncheckedTemplate || unifiedNextValue === checkedTemplate;\n\n    // As an empty cell we recognize cells with undefined, null and '' values.\n    if (sortEmptyCells === false) {\n      if (isEmptyValue && isEmptyNextValue === false) {\n        return FIRST_AFTER_SECOND;\n      }\n      if (isEmptyValue === false && isEmptyNextValue) {\n        return FIRST_BEFORE_SECOND;\n      }\n    }\n\n    // 1st value === #BAD_VALUE#\n    if (isValueFromTemplate === false && isNextValueFromTemplate) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n\n    // 2nd value === #BAD_VALUE#\n    if (isValueFromTemplate && isNextValueFromTemplate === false) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n\n    // 1st value === #BAD_VALUE# && 2nd value === #BAD_VALUE#\n    if (isValueFromTemplate === false && isNextValueFromTemplate === false) {\n      // Sorting by values (not just by visual representation).\n      return defaultCompareFunctionFactory(sortOrder, columnMeta, columnPluginSettings)(value, nextValue);\n    }\n    if (unifiedValue === uncheckedTemplate && unifiedNextValue === checkedTemplate) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n    if (unifiedValue === checkedTemplate && unifiedNextValue === uncheckedTemplate) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'checkbox';", "import moment from 'moment';\nimport { isEmpty } from \"../../../helpers/mixed.mjs\";\nimport { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\n/**\n * Date sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  return function (value, nextValue) {\n    const {\n      sortEmptyCells\n    } = columnPluginSettings;\n    if (value === nextValue) {\n      return DO_NOT_SWAP;\n    }\n    if (isEmpty(value)) {\n      if (isEmpty(nextValue)) {\n        return DO_NOT_SWAP;\n      }\n\n      // Just fist value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n      }\n      return FIRST_AFTER_SECOND;\n    }\n    if (isEmpty(nextValue)) {\n      // Just second value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n      }\n      return FIRST_BEFORE_SECOND;\n    }\n    const dateFormat = columnMeta.dateFormat;\n    const firstDate = moment(value, dateFormat);\n    const nextDate = moment(nextValue, dateFormat);\n    if (!firstDate.isValid()) {\n      return FIRST_AFTER_SECOND;\n    }\n    if (!nextDate.isValid()) {\n      return FIRST_BEFORE_SECOND;\n    }\n    if (nextDate.isAfter(firstDate)) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n    if (nextDate.isBefore(firstDate)) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'date';", "import { compareFunctionFactory as defaultSort, COLUMN_DATA_TYPE as DEFAULT_DATA_TYPE } from \"../sortFunction/default.mjs\";\nimport { compareFunctionFactory as numericSort, COLUMN_DATA_TYPE as NUMERIC_DATA_TYPE } from \"../sortFunction/numeric.mjs\";\nimport { compareFunctionFactory as checkboxSort, COLUMN_DATA_TYPE as CHECKBOX_DATA_TYPE } from \"../sortFunction/checkbox.mjs\";\nimport { compareFunctionFactory as dateSort, COLUMN_DATA_TYPE as DATE_DATA_TYPE } from \"../sortFunction/date.mjs\";\nimport staticRegister from \"../../../utils/staticRegister.mjs\";\nconst {\n  register: registerCompareFunctionFactory,\n  getItem: getGloballyCompareFunctionFactory,\n  hasItem: hasGloballyCompareFunctionFactory\n} = staticRegister('sorting.compareFunctionFactory');\nconst {\n  register: registerRootComparator,\n  getItem: getRootComparator\n} = staticRegister('sorting.mainSortComparator');\n\n/**\n * Gets sort function for the particular column basing on it's data type.\n *\n * @param {string} type The data type.\n * @returns {Function}\n */\nexport function getCompareFunctionFactory(type) {\n  if (hasGloballyCompareFunctionFactory(type)) {\n    return getGloballyCompareFunctionFactory(type);\n  }\n  return getGloballyCompareFunctionFactory(DEFAULT_DATA_TYPE);\n}\nregisterCompareFunctionFactory(NUMERIC_DATA_TYPE, numericSort);\nregisterCompareFunctionFactory(CHECKBOX_DATA_TYPE, checkboxSort);\nregisterCompareFunctionFactory(DATE_DATA_TYPE, dateSort);\nregisterCompareFunctionFactory(DEFAULT_DATA_TYPE, defaultSort);\nexport { registerRootComparator, getRootComparator };", "import { getRootComparator } from \"./registry.mjs\";\nexport const DO_NOT_SWAP = 0;\nexport const FIRST_BEFORE_SECOND = -1;\nexport const FIRST_AFTER_SECOND = 1;\n\n/**\n * @param {Array} indexesWithData The data to sort.\n * @param {string} rootComparatorId The comparator logic to use.\n * @param {Array} argsForRootComparator Additional arguments for comparator function.\n */\nexport function sort(indexesWithData, rootComparatorId) {\n  const rootComparator = getRootComparator(rootComparatorId);\n  for (var _len = arguments.length, argsForRootComparator = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    argsForRootComparator[_key - 2] = arguments[_key];\n  }\n  indexesWithData.sort(rootComparator(...argsForRootComparator));\n}", "import { getCompareFunctionFactory } from \"./sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    const [, ...values] = rowIndexWithValues;\n    const [, ...nextValues] = nextRowIndexWithValues;\n    return function getCompareResult(column) {\n      const sortingOrder = sortingOrders[column];\n      const columnMeta = columnMetas[column];\n      const value = values[column];\n      const nextValue = nextValues[column];\n      const pluginSettings = columnMeta.columnSorting;\n      const compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      const compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue);\n\n      // DIFF - MultiColumnSorting & ColumnSorting: removed iteration through next sorted columns.\n\n      return compareResult;\n    }(0);\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass, hasClass, removeClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { isUndefined, isDefined } from \"../../helpers/mixed.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport { arrayMap } from \"../../helpers/array.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { IndexesSequence, PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { ColumnStatesManager } from \"./columnStatesManager.mjs\";\nimport { HEADER_SPAN_CLASS, getNextSortOrder, areValidSortStates, getHeaderSpanElement, isFirstLevelColumnHeader, wasHeaderClickedProperly } from \"./utils.mjs\";\nimport { getClassesToRemove, getClassesToAdd } from \"./domHelpers.mjs\";\nimport { rootComparator } from \"./rootComparator.mjs\";\nimport { registerRootComparator, sort } from \"./sortService/index.mjs\";\nimport { A11Y_SORT } from \"../../helpers/a11y.mjs\";\nexport const PLUGIN_KEY = 'columnSorting';\nexport const PLUGIN_PRIORITY = 50;\nexport const APPEND_COLUMN_CONFIG_STRATEGY = 'append';\nexport const REPLACE_COLUMN_CONFIG_STRATEGY = 'replace';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nregisterRootComparator(PLUGIN_KEY, rootComparator);\nHooks.getSingleton().register('beforeColumnSort');\nHooks.getSingleton().register('afterColumnSort');\n\n// DIFF - MultiColumnSorting & ColumnSorting: changed configuration documentation.\n/**\n * @plugin ColumnSorting\n * @class ColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#columnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * columnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1)\n * columnSorting: {\n *   initialConfig: {\n *     column: 1,\n *     sortOrder: 'asc'\n *   }\n * }\n *\n * // as an object which define specific sorting options for all columns\n * columnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: https://handsontable.com/docs/Options.html#columns\n * columns: [{\n *   columnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]\n * ```\n */\nvar _loadOrSortBySettings = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nexport class ColumnSorting extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Changes the behavior of selection / dragging.\n     *\n     * @param {MouseEvent} event The `mousedown` event.\n     * @param {CellCoords} coords Visual coordinates.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded during the initialization.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * Callback for the `onAfterGetColHeader` hook. Adds column sorting CSS classes.\n     *\n     * @param {number} column Visual column index.\n     * @param {Element} TH TH HTML element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Load saved settings or sort by predefined plugin configuration.\n     */\n    _classPrivateMethodInitSpec(this, _loadOrSortBySettings);\n    /**\n     * Instance of column state manager.\n     *\n     * @private\n     * @type {null|ColumnStatesManager}\n     */\n    _defineProperty(this, \"columnStatesManager\", null);\n    /**\n     * Cached column properties from plugin like i.e. `indicator`, `headerAction`.\n     *\n     * @private\n     * @type {null|PhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"columnMetaCache\", null);\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {string}\n     */\n    _defineProperty(this, \"pluginKey\", PLUGIN_KEY);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexesSequence}\n     */\n    _defineProperty(this, \"indexesSequenceCache\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[this.pluginKey];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.columnStatesManager = new ColumnStatesManager(this.hot, `${this.pluginKey}.sortingStates`);\n    this.columnMetaCache = new IndexToValueMap(physicalIndex => {\n      let visualIndex = this.hot.toVisualColumn(physicalIndex);\n      if (visualIndex === null) {\n        visualIndex = physicalIndex;\n      }\n      return this.getMergedPluginSettings(visualIndex);\n    });\n    this.hot.columnIndexMapper.registerMap(`${this.pluginKey}.columnMeta`, this.columnMetaCache);\n    this.addHook('afterGetColHeader', (column, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, column, TH));\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('afterOnCellMouseDown', (event, target) => this.onAfterOnCellMouseDown(event, target));\n    this.addHook('afterInit', () => _classPrivateMethodGet(this, _loadOrSortBySettings, _loadOrSortBySettings2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n\n    // TODO: Workaround? It should be refactored / described.\n    if (this.hot.view) {\n      _classPrivateMethodGet(this, _loadOrSortBySettings, _loadOrSortBySettings2).call(this);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    const clearColHeader = (column, TH) => {\n      const headerSpanElement = getHeaderSpanElement(TH);\n      if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n        return;\n      }\n      this.updateHeaderClasses(headerSpanElement);\n    };\n\n    // Changing header width and removing indicator.\n    this.hot.addHook('afterGetColHeader', clearColHeader);\n    this.hot.addHookOnce('afterViewRender', () => {\n      this.hot.removeHook('afterGetColHeader', clearColHeader);\n    });\n    this.hot.batchExecution(() => {\n      if (this.indexesSequenceCache !== null) {\n        this.hot.rowIndexMapper.setIndexesSequence(this.indexesSequenceCache.getValues());\n        this.hot.rowIndexMapper.unregisterMap(this.pluginKey);\n      }\n    }, true);\n    this.hot.columnIndexMapper.unregisterMap(`${this.pluginKey}.columnMeta`);\n    this.columnStatesManager.destroy();\n    this.columnMetaCache = null;\n    this.columnStatesManager = null;\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling column sorting functionality.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Enter']],\n      callback: () => {\n        const {\n          highlight\n        } = this.hot.getSelectedRangeLast();\n        if (highlight.row === -1 && highlight.col >= 0) {\n          this.sort(this.getColumnNextConfig(highlight.col));\n        }\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling column sorting functionality.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  // DIFF - MultiColumnSorting & ColumnSorting: changed function documentation.\n  /**\n   * Sorts the table by chosen columns and orders.\n   *\n   * @param {undefined|object} sortConfig Single column sort configuration. The configuration object contains `column` and `sortOrder` properties.\n   * First of them contains visual column index, the second one contains sort order (`asc` for ascending, `desc` for descending).\n   *\n   * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n   *\n   * @example\n   * ```js\n   * // sort ascending first visual column\n   * hot.getPlugin('columnSorting').sort({ column: 0, sortOrder: 'asc' });\n   * ```\n   *\n   * @fires Hooks#beforeColumnSort\n   * @fires Hooks#afterColumnSort\n   */\n  sort(sortConfig) {\n    const currentSortConfig = this.getSortConfig();\n\n    // We always pass configs defined as an array to `beforeColumnSort` and `afterColumnSort` hooks.\n    const destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n    const sortPossible = this.areValidSortConfigs(destinationSortConfigs);\n    const allowSort = this.hot.runHooks('beforeColumnSort', currentSortConfig, destinationSortConfigs, sortPossible);\n    if (allowSort === false) {\n      return;\n    }\n    if (currentSortConfig.length === 0 && this.indexesSequenceCache === null) {\n      this.indexesSequenceCache = this.hot.rowIndexMapper.registerMap(this.pluginKey, new IndexesSequence());\n      this.indexesSequenceCache.setValues(this.hot.rowIndexMapper.getIndexesSequence());\n    }\n    if (sortPossible) {\n      this.columnStatesManager.setSortStates(destinationSortConfigs);\n      this.sortByPresetSortStates(destinationSortConfigs);\n      this.saveAllSortSettings(destinationSortConfigs);\n    }\n    this.hot.runHooks('afterColumnSort', currentSortConfig, sortPossible ? destinationSortConfigs : currentSortConfig, sortPossible);\n    if (sortPossible) {\n      this.hot.render();\n      // TODO: Workaround? This triggers fast redraw. One test won't pass after removal.\n      // It should be refactored / described.\n      this.hot.forceFullRender = false;\n      this.hot.view.render();\n    }\n  }\n\n  /**\n   * Clear the sort performed on the table.\n   */\n  clearSort() {\n    this.sort([]);\n  }\n\n  /**\n   * Checks if the table is sorted (any column have to be sorted).\n   *\n   * @returns {boolean}\n   */\n  isSorted() {\n    return this.enabled && !this.columnStatesManager.isListOfSortedColumnsEmpty();\n  }\n\n  /**\n   * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n   *\n   * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n   *\n   * @param {number} [column] Visual column index.\n   * @returns {undefined|object|Array}\n   */\n  getSortConfig(column) {\n    if (isDefined(column)) {\n      return this.columnStatesManager.getColumnSortState(column);\n    }\n    return this.columnStatesManager.getSortStates();\n  }\n\n  /**\n   * @description\n   * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n   * Note: Please keep in mind that this method doesn't re-render the table.\n   *\n   * @example\n   * ```js\n   * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n   *   const columnSortPlugin = this.getPlugin('columnSorting');\n   *\n   *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n   *\n   *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n   *\n   *   this.loadData(newData); // Load new data set and re-render the table.\n   *\n   *   return false; // The blockade for the default sort action.\n   * }\n   * ```\n   *\n   * @param {undefined|object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n   * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n   * sort order (`asc` for ascending, `desc` for descending).\n   */\n  setSortConfig(sortConfig) {\n    // We always set configs defined as an array.\n    const destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n    if (this.areValidSortConfigs(destinationSortConfigs)) {\n      this.columnStatesManager.setSortStates(destinationSortConfigs);\n    }\n  }\n\n  /**\n   * Get normalized sort configs.\n   *\n   * @private\n   * @param {object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n   * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n   * sort order (`asc` for ascending, `desc` for descending).\n   * @returns {Array}\n   */\n  getNormalizedSortConfigs() {\n    let sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (Array.isArray(sortConfig)) {\n      return sortConfig.slice(0, 1);\n    }\n    return [sortConfig];\n  }\n\n  /**\n   * Get if sort configs are valid.\n   *\n   * @private\n   * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n   * @returns {boolean}\n   */\n  areValidSortConfigs(sortConfigs) {\n    const numberOfColumns = this.hot.countCols();\n\n    // We don't translate visual indexes to physical indexes.\n    return areValidSortStates(sortConfigs) && sortConfigs.every(_ref => {\n      let {\n        column\n      } = _ref;\n      return column <= numberOfColumns && column >= 0;\n    });\n  }\n\n  /**\n   * Saves all sorting settings. Saving works only when {@link Options#persistentState} option is enabled.\n   *\n   * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n   *\n   * @private\n   * @fires Hooks#persistentStateSave\n   */\n  saveAllSortSettings(sortConfigs) {\n    const allSortSettings = this.columnStatesManager.getAllColumnsProperties();\n    const translateColumnToPhysical = _ref2 => {\n      let {\n        column: visualColumn,\n        ...restOfProperties\n      } = _ref2;\n      return {\n        column: this.hot.toPhysicalColumn(visualColumn),\n        ...restOfProperties\n      };\n    };\n    allSortSettings.initialConfig = arrayMap(sortConfigs, translateColumnToPhysical);\n    this.hot.runHooks('persistentStateSave', 'columnSorting', allSortSettings);\n  }\n\n  /**\n   * Get all saved sorting settings. Loading works only when {@link Options#persistentState} option is enabled.\n   *\n   * @private\n   * @returns {object} Previously saved sort settings.\n   *\n   * @fires Hooks#persistentStateLoad\n   */\n  getAllSavedSortSettings() {\n    const storedAllSortSettings = {};\n    this.hot.runHooks('persistentStateLoad', 'columnSorting', storedAllSortSettings);\n    const allSortSettings = storedAllSortSettings.value;\n    const translateColumnToVisual = _ref3 => {\n      let {\n        column: physicalColumn,\n        ...restOfProperties\n      } = _ref3;\n      return {\n        column: this.hot.toVisualColumn(physicalColumn),\n        ...restOfProperties\n      };\n    };\n    if (isDefined(allSortSettings) && Array.isArray(allSortSettings.initialConfig)) {\n      allSortSettings.initialConfig = arrayMap(allSortSettings.initialConfig, translateColumnToVisual);\n    }\n    return allSortSettings;\n  }\n\n  /**\n   * Get next sort configuration for particular column. Object contain `column` and `sortOrder` properties.\n   *\n   * **Note**: Please keep in mind that returned object expose **visual** column index under the `column` key.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {undefined|object}\n   */\n  getColumnNextConfig(column) {\n    const sortOrder = this.columnStatesManager.getSortOrderOfColumn(column);\n    if (isDefined(sortOrder)) {\n      const nextSortOrder = getNextSortOrder(sortOrder);\n      if (isDefined(nextSortOrder)) {\n        return {\n          column,\n          sortOrder: nextSortOrder\n        };\n      }\n      return;\n    }\n    const nrOfColumns = this.hot.countCols();\n    if (Number.isInteger(column) && column >= 0 && column < nrOfColumns) {\n      return {\n        column,\n        sortOrder: getNextSortOrder()\n      };\n    }\n  }\n\n  /**\n   * Get sort configuration with \"next order\" for particular column.\n   *\n   * @private\n   * @param {number} columnToChange Visual column index of column which order will be changed.\n   * @param {string} strategyId ID of strategy. Possible values: 'append' and 'replace'. The first one\n   * change order of particular column and change it's position in the sort queue to the last one. The second one\n   * just change order of particular column.\n   *\n   * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key.\n   *\n   * @returns {Array}\n   */\n  getNextSortConfig(columnToChange) {\n    let strategyId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : APPEND_COLUMN_CONFIG_STRATEGY;\n    const indexOfColumnToChange = this.columnStatesManager.getIndexOfColumnInSortQueue(columnToChange);\n    const isColumnSorted = indexOfColumnToChange !== -1;\n    const currentSortConfig = this.getSortConfig();\n    const nextColumnConfig = this.getColumnNextConfig(columnToChange);\n    if (isColumnSorted) {\n      if (isUndefined(nextColumnConfig)) {\n        return [...currentSortConfig.slice(0, indexOfColumnToChange), ...currentSortConfig.slice(indexOfColumnToChange + 1)];\n      }\n      if (strategyId === APPEND_COLUMN_CONFIG_STRATEGY) {\n        return [...currentSortConfig.slice(0, indexOfColumnToChange), ...currentSortConfig.slice(indexOfColumnToChange + 1), nextColumnConfig];\n      } else if (strategyId === REPLACE_COLUMN_CONFIG_STRATEGY) {\n        return [...currentSortConfig.slice(0, indexOfColumnToChange), nextColumnConfig, ...currentSortConfig.slice(indexOfColumnToChange + 1)];\n      }\n    }\n    if (isDefined(nextColumnConfig)) {\n      return currentSortConfig.concat(nextColumnConfig);\n    }\n    return currentSortConfig;\n  }\n\n  /**\n   * Get plugin's column config for the specified column index.\n   *\n   * @private\n   * @param {object} columnConfig Configuration inside `columns` property for the specified column index.\n   * @returns {object}\n   */\n  getPluginColumnConfig(columnConfig) {\n    if (isObject(columnConfig)) {\n      const pluginColumnConfig = columnConfig[this.pluginKey];\n      if (isObject(pluginColumnConfig)) {\n        return pluginColumnConfig;\n      }\n    }\n    return {};\n  }\n\n  /**\n   * Get plugin settings related properties, properly merged from cascade settings.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {object}\n   */\n  getMergedPluginSettings(column) {\n    const pluginMainSettings = this.hot.getSettings()[this.pluginKey];\n    const storedColumnProperties = this.columnStatesManager.getAllColumnsProperties();\n    const cellMeta = this.hot.getCellMeta(0, column);\n    const columnMeta = Object.getPrototypeOf(cellMeta);\n    if (Array.isArray(columnMeta.columns)) {\n      return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns[column]));\n    } else if (isFunction(columnMeta.columns)) {\n      return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns(column)));\n    }\n    return Object.assign(storedColumnProperties, pluginMainSettings);\n  }\n\n  /**\n   * Get copy of settings for first cell in the column.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {object}\n   */\n  // TODO: Workaround. Inheriting of non-primitive cell meta values doesn't work. Instead of getting properties from column meta we call this function.\n  // TODO: Remove test named: \"should not break the dataset when inserted new row\" (#5431).\n  getFirstCellSettings(column) {\n    const cellMeta = this.hot.getCellMeta(0, column);\n    const cellMetaCopy = Object.create(cellMeta);\n    cellMetaCopy[this.pluginKey] = this.columnMetaCache.getValueAtIndex(this.hot.toPhysicalColumn(column));\n    return cellMetaCopy;\n  }\n\n  /**\n   * Get number of rows which should be sorted.\n   *\n   * @private\n   * @param {number} numberOfRows Total number of displayed rows.\n   * @returns {number}\n   */\n  getNumberOfRowsToSort(numberOfRows) {\n    const settings = this.hot.getSettings();\n\n    // `maxRows` option doesn't take into account `minSpareRows` option in this case.\n    if (settings.maxRows <= numberOfRows) {\n      return settings.maxRows;\n    }\n    return numberOfRows - settings.minSpareRows;\n  }\n\n  /**\n   * Performs the sorting using a stable sort function basing on internal state of sorting.\n   *\n   * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n   * @private\n   */\n  sortByPresetSortStates(sortConfigs) {\n    if (sortConfigs.length === 0) {\n      this.hot.rowIndexMapper.setIndexesSequence(this.indexesSequenceCache.getValues());\n      return;\n    }\n    const indexesWithData = [];\n    const numberOfRows = this.hot.countRows();\n    const getDataForSortedColumns = visualRowIndex => arrayMap(sortConfigs, sortConfig => this.hot.getDataAtCell(visualRowIndex, sortConfig.column));\n    for (let visualRowIndex = 0; visualRowIndex < this.getNumberOfRowsToSort(numberOfRows); visualRowIndex += 1) {\n      indexesWithData.push([this.hot.toPhysicalRow(visualRowIndex)].concat(getDataForSortedColumns(visualRowIndex)));\n    }\n    const indexesBefore = arrayMap(indexesWithData, indexWithData => indexWithData[0]);\n    sort(indexesWithData, this.pluginKey, arrayMap(sortConfigs, sortConfig => sortConfig.sortOrder), arrayMap(sortConfigs, sortConfig => this.getFirstCellSettings(sortConfig.column)));\n\n    // Append spareRows\n    for (let visualRowIndex = indexesWithData.length; visualRowIndex < numberOfRows; visualRowIndex += 1) {\n      indexesWithData.push([visualRowIndex].concat(getDataForSortedColumns(visualRowIndex)));\n    }\n    const indexesAfter = arrayMap(indexesWithData, indexWithData => indexWithData[0]);\n    const indexMapping = new Map(arrayMap(indexesBefore, (indexBefore, indexInsideArray) => [indexBefore, indexesAfter[indexInsideArray]]));\n    const newIndexesSequence = arrayMap(this.hot.rowIndexMapper.getIndexesSequence(), physicalIndex => {\n      if (indexMapping.has(physicalIndex)) {\n        return indexMapping.get(physicalIndex);\n      }\n      return physicalIndex;\n    });\n    this.hot.rowIndexMapper.setIndexesSequence(newIndexesSequence);\n  }\n  /**\n   * Sort the table by provided configuration.\n   *\n   * @private\n   * @param {object} allSortSettings All sort config settings. Object may contain `initialConfig`, `indicator`,\n   * `sortEmptyCells`, `headerAction` and `compareFunctionFactory` properties.\n   */\n  sortBySettings(allSortSettings) {\n    if (isObject(allSortSettings)) {\n      this.columnStatesManager.updateAllColumnsProperties(allSortSettings);\n      const initialConfig = allSortSettings.initialConfig;\n      if (Array.isArray(initialConfig) || isObject(initialConfig)) {\n        this.sort(initialConfig);\n      }\n    } else {\n      // Extra render for headers. Their width may change.\n      this.hot.render();\n    }\n  }\n  /**\n   * Update header classes.\n   *\n   * @private\n   * @param {HTMLElement} headerSpanElement Header span element.\n   * @param {...*} args Extra arguments for helpers.\n   */\n  updateHeaderClasses(headerSpanElement) {\n    removeClass(headerSpanElement, getClassesToRemove(headerSpanElement));\n    if (this.enabled !== false) {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n      addClass(headerSpanElement, getClassesToAdd(...args));\n    }\n  }\n\n  /**\n   * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n   * for `updateSettings` in specific situations.\n   *\n   * @private\n   * @param {object} newSettings New settings object.\n   */\n  onUpdateSettings(newSettings) {\n    super.onUpdateSettings();\n    if (this.columnMetaCache !== null) {\n      // Column meta cache base on settings, thus we should re-init the map.\n      this.columnMetaCache.init(this.hot.columnIndexMapper.getNumberOfIndexes());\n    }\n    if (isDefined(newSettings[this.pluginKey])) {\n      this.sortBySettings(newSettings[this.pluginKey]);\n    }\n  }\n  /**\n   * Indicates if clickable header was clicked.\n   *\n   * @private\n   * @param {MouseEvent} event The `mousedown` event.\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  wasClickableHeaderClicked(event, column) {\n    const pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n    const headerActionEnabled = pluginSettingsForColumn.headerAction;\n    return headerActionEnabled && hasClass(event.target, HEADER_SPAN_CLASS);\n  }\n  /**\n   * Callback for the `onAfterOnCellMouseDown` hook.\n   *\n   * @private\n   * @param {Event} event Event which are provided by hook.\n   * @param {CellCoords} coords Visual coords of the selected cell.\n   */\n  onAfterOnCellMouseDown(event, coords) {\n    if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n      return;\n    }\n    if (this.wasClickableHeaderClicked(event, coords.col)) {\n      if (this.hot.getShortcutManager().isCtrlPressed()) {\n        this.hot.deselectCell();\n        this.hot.selectColumns(coords.col);\n      }\n      this.sort(this.getColumnNextConfig(coords.col));\n    }\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    var _this$columnStatesMan;\n    // TODO: Probably not supported yet by ESLint: https://github.com/eslint/eslint/issues/11045\n    // eslint-disable-next-line no-unused-expressions\n    (_this$columnStatesMan = this.columnStatesManager) === null || _this$columnStatesMan === void 0 || _this$columnStatesMan.destroy();\n    super.destroy();\n  }\n}\nfunction _loadOrSortBySettings2() {\n  const storedAllSortSettings = this.getAllSavedSortSettings();\n  if (isObject(storedAllSortSettings)) {\n    this.sortBySettings(storedAllSortSettings);\n  } else {\n    const allSortSettings = this.hot.getSettings()[this.pluginKey];\n    this.sortBySettings(allSortSettings);\n  }\n}\nfunction _onAfterGetColHeader2(column, TH) {\n  const headerSpanElement = getHeaderSpanElement(TH);\n  if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n    return;\n  }\n  const pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n  const showSortIndicator = pluginSettingsForColumn.indicator;\n  const headerActionEnabled = pluginSettingsForColumn.headerAction;\n  this.updateHeaderClasses(headerSpanElement, this.columnStatesManager, column, showSortIndicator, headerActionEnabled);\n  if (this.hot.getSettings().ariaTags) {\n    const currentSortState = this.columnStatesManager.getSortOrderOfColumn(column);\n    setAttribute(TH, ...A11Y_SORT(currentSortState ? `${currentSortState}ending` : 'none'));\n  }\n}\nfunction _onAfterLoadData2(initialLoad) {\n  if (initialLoad === true) {\n    // TODO: Workaround? It should be refactored / described.\n    if (this.hot.view) {\n      _classPrivateMethodGet(this, _loadOrSortBySettings, _loadOrSortBySettings2).call(this);\n    }\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n    return;\n  }\n  if (this.wasClickableHeaderClicked(event, coords.col) && this.hot.getShortcutManager().isCtrlPressed()) {\n    controller.column = true;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\n/**\n * Class used to make all endpoint-related operations.\n *\n * @private\n * @class Endpoints\n */\nclass Endpoints {\n  constructor(plugin, settings) {\n    /**\n     * The main plugin instance.\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Handsontable instance.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Array of declared plugin endpoints (calculation destination points).\n     *\n     * @type {Array}\n     * @default {Array} Empty array.\n     */\n    _defineProperty(this, \"endpoints\", []);\n    /**\n     * The plugin settings, taken from Handsontable configuration.\n     *\n     * @type {object|Function}\n     * @default null\n     */\n    _defineProperty(this, \"settings\", void 0);\n    /**\n     * Settings type. Can be either 'array' or 'function'.\n     *\n     * @type {string}\n     * @default {'array'}\n     */\n    _defineProperty(this, \"settingsType\", 'array');\n    /**\n     * The current endpoint (calculation destination point) in question.\n     *\n     * @type {object}\n     * @default null\n     */\n    _defineProperty(this, \"currentEndpoint\", null);\n    /**\n     * Array containing a list of changes to be applied.\n     *\n     * @private\n     * @type {Array}\n     * @default {[]}\n     */\n    _defineProperty(this, \"cellsToSetCache\", []);\n    this.plugin = plugin;\n    this.hot = this.plugin.hot;\n    this.settings = settings;\n  }\n\n  /**\n   * Get a single endpoint object.\n   *\n   * @param {number} index Index of the endpoint.\n   * @returns {object}\n   */\n  getEndpoint(index) {\n    if (this.settingsType === 'function') {\n      return this.fillMissingEndpointData(this.settings)[index];\n    }\n    return this.endpoints[index];\n  }\n\n  /**\n   * Get an array with all the endpoints.\n   *\n   * @returns {Array}\n   */\n  getAllEndpoints() {\n    if (this.settingsType === 'function') {\n      return this.fillMissingEndpointData(this.settings);\n    }\n    return this.endpoints;\n  }\n\n  /**\n   * Used to fill the blanks in the endpoint data provided by a settings function.\n   *\n   * @private\n   * @param {Function} func Function provided in the HOT settings.\n   * @returns {Array} An array of endpoints.\n   */\n  fillMissingEndpointData(func) {\n    return this.parseSettings(func.call(this));\n  }\n\n  /**\n   * Parse plugin's settings.\n   *\n   * @param {Array} settings The settings array.\n   * @returns {object[]}\n   */\n  parseSettings(settings) {\n    const endpointsArray = [];\n    let settingsArray = settings;\n    if (!settingsArray && typeof this.settings === 'function') {\n      this.settingsType = 'function';\n      return;\n    }\n    if (!settingsArray) {\n      settingsArray = this.settings;\n    }\n    arrayEach(settingsArray, val => {\n      const newEndpoint = {};\n      this.assignSetting(val, newEndpoint, 'ranges', [[0, this.hot.countRows() - 1]]);\n      this.assignSetting(val, newEndpoint, 'reversedRowCoords', false);\n      this.assignSetting(val, newEndpoint, 'destinationRow', new Error(`\n        You must provide a destination row for the Column Summary plugin in order to work properly!\n      `));\n      this.assignSetting(val, newEndpoint, 'destinationColumn', new Error(`\n        You must provide a destination column for the Column Summary plugin in order to work properly!\n      `));\n      this.assignSetting(val, newEndpoint, 'sourceColumn', val.destinationColumn);\n      this.assignSetting(val, newEndpoint, 'type', 'sum');\n      this.assignSetting(val, newEndpoint, 'forceNumeric', false);\n      this.assignSetting(val, newEndpoint, 'suppressDataTypeErrors', true);\n      this.assignSetting(val, newEndpoint, 'suppressDataTypeErrors', true);\n      this.assignSetting(val, newEndpoint, 'customFunction', null);\n      this.assignSetting(val, newEndpoint, 'readOnly', true);\n      this.assignSetting(val, newEndpoint, 'roundFloat', false);\n      endpointsArray.push(newEndpoint);\n    });\n    return endpointsArray;\n  }\n\n  /**\n   * Setter for the internal setting objects.\n   *\n   * @param {object} settings Object with the settings.\n   * @param {object} endpoint Contains information about the endpoint for the the calculation.\n   * @param {string} name Settings name.\n   * @param {object} defaultValue Default value for the settings.\n   */\n  assignSetting(settings, endpoint, name, defaultValue) {\n    if (name === 'ranges' && settings[name] === undefined) {\n      endpoint[name] = defaultValue;\n      return;\n    } else if (name === 'ranges' && settings[name].length === 0) {\n      return;\n    }\n    if (settings[name] === undefined) {\n      if (defaultValue instanceof Error) {\n        throw defaultValue;\n      }\n      endpoint[name] = defaultValue;\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (name === 'destinationRow' && endpoint.reversedRowCoords) {\n        endpoint[name] = this.hot.countRows() - settings[name] - 1;\n      } else {\n        endpoint[name] = settings[name];\n      }\n    }\n  }\n\n  /**\n   * Resets the endpoint setup before the structure alteration (like inserting or removing rows/columns). Used for settings provided as a function.\n   *\n   * @private\n   * @param {string} action Type of the action performed.\n   * @param {number} index Row/column index.\n   * @param {number} number Number of rows/columns added/removed.\n   */\n  resetSetupBeforeStructureAlteration(action, index, number) {\n    if (this.settingsType !== 'function') {\n      return;\n    }\n    const type = action.indexOf('row') > -1 ? 'row' : 'col';\n    const endpoints = this.getAllEndpoints();\n    arrayEach(endpoints, val => {\n      if (type === 'row' && val.destinationRow >= index) {\n        if (action === 'insert_row') {\n          val.alterRowOffset = number;\n        } else if (action === 'remove_row') {\n          val.alterRowOffset = -1 * number;\n        }\n      }\n      if (type === 'col' && val.destinationColumn >= index) {\n        if (action === 'insert_col') {\n          val.alterColumnOffset = number;\n        } else if (action === 'remove_col') {\n          val.alterColumnOffset = -1 * number;\n        }\n      }\n    });\n    this.resetAllEndpoints(endpoints, false);\n  }\n\n  /**\n   * AfterCreateRow/afterCreateRow/afterRemoveRow/afterRemoveCol hook callback. Reset and reenables the summary functionality\n   * after changing the table structure.\n   *\n   * @private\n   * @param {string} action Type of the action performed.\n   * @param {number} index Row/column index.\n   * @param {number} number Number of rows/columns added/removed.\n   * @param {Array} [logicRows] Array of the logical indexes.\n   * @param {string} [source] Source of change.\n   * @param {boolean} [forceRefresh] `true` of the endpoints should refresh after completing the function.\n   */\n  resetSetupAfterStructureAlteration(action, index, number, logicRows, source) {\n    let forceRefresh = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    if (this.settingsType === 'function') {\n      // We need to run it on a next avaiable hook, because the TrimRows' `afterCreateRow` hook triggers after this one,\n      // and it needs to be run to properly calculate the endpoint value.\n      const beforeViewRenderCallback = () => {\n        this.hot.removeHook('beforeViewRender', beforeViewRenderCallback);\n        return this.refreshAllEndpoints();\n      };\n      this.hot.addHookOnce('beforeViewRender', beforeViewRenderCallback);\n      return;\n    }\n    const type = action.indexOf('row') > -1 ? 'row' : 'col';\n    const multiplier = action.indexOf('remove') > -1 ? -1 : 1;\n    const endpoints = this.getAllEndpoints();\n    const rowMoving = action.indexOf('move_row') === 0;\n    const placeOfAlteration = index;\n    arrayEach(endpoints, val => {\n      if (type === 'row' && val.destinationRow >= placeOfAlteration) {\n        val.alterRowOffset = multiplier * number;\n      }\n      if (type === 'col' && val.destinationColumn >= placeOfAlteration) {\n        val.alterColumnOffset = multiplier * number;\n      }\n    });\n    this.resetAllEndpoints(endpoints, !rowMoving);\n    if (rowMoving) {\n      arrayEach(endpoints, endpoint => {\n        this.extendEndpointRanges(endpoint, placeOfAlteration, logicRows[0], logicRows.length);\n        this.recreatePhysicalRanges(endpoint);\n        this.clearOffsetInformation(endpoint);\n      });\n    } else {\n      arrayEach(endpoints, endpoint => {\n        this.shiftEndpointCoordinates(endpoint, placeOfAlteration);\n      });\n    }\n    if (forceRefresh) {\n      this.refreshAllEndpoints();\n    }\n  }\n\n  /**\n   * Clear the offset information from the endpoint object.\n   *\n   * @private\n   * @param {object} endpoint And endpoint object.\n   */\n  clearOffsetInformation(endpoint) {\n    endpoint.alterRowOffset = undefined;\n    endpoint.alterColumnOffset = undefined;\n  }\n\n  /**\n   * Extend the row ranges for the provided endpoint.\n   *\n   * @private\n   * @param {object} endpoint The endpoint object.\n   * @param {number} placeOfAlteration Index of the row where the alteration takes place.\n   * @param {number} previousPosition Previous endpoint result position.\n   * @param {number} offset Offset generated by the alteration.\n   */\n  extendEndpointRanges(endpoint, placeOfAlteration, previousPosition, offset) {\n    arrayEach(endpoint.ranges, range => {\n      // is a range, not a single row\n      if (range[1]) {\n        if (placeOfAlteration >= range[0] && placeOfAlteration <= range[1]) {\n          if (previousPosition > range[1]) {\n            range[1] += offset;\n          } else if (previousPosition < range[0]) {\n            range[0] -= offset;\n          }\n        } else if (previousPosition >= range[0] && previousPosition <= range[1]) {\n          range[1] -= offset;\n          if (placeOfAlteration <= range[0]) {\n            range[0] += 1;\n            range[1] += 1;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Recreate the physical ranges for the provided endpoint. Used (for example) when a row gets moved and extends an existing range.\n   *\n   * @private\n   * @param {object} endpoint An endpoint object.\n   */\n  recreatePhysicalRanges(endpoint) {\n    const ranges = endpoint.ranges;\n    const newRanges = [];\n    const allIndexes = [];\n    arrayEach(ranges, range => {\n      const newRange = [];\n      if (range[1]) {\n        for (let i = range[0]; i <= range[1]; i++) {\n          newRange.push(this.hot.toPhysicalRow(i));\n        }\n      } else {\n        newRange.push(this.hot.toPhysicalRow(range[0]));\n      }\n      allIndexes.push(newRange);\n    });\n    arrayEach(allIndexes, range => {\n      let newRange = [];\n      arrayEach(range, (coord, index) => {\n        if (index === 0) {\n          newRange.push(coord);\n        } else if (range[index] !== range[index - 1] + 1) {\n          newRange.push(range[index - 1]);\n          newRanges.push(newRange);\n          newRange = [];\n          newRange.push(coord);\n        }\n        if (index === range.length - 1) {\n          newRange.push(coord);\n          newRanges.push(newRange);\n        }\n      });\n    });\n    endpoint.ranges = newRanges;\n  }\n\n  /**\n   * Shifts the endpoint coordinates by the defined offset.\n   *\n   * @private\n   * @param {object} endpoint Endpoint object.\n   * @param {number} offsetStartIndex Index of the performed change (if the change is located after the endpoint, nothing about the endpoint has to be changed.\n   */\n  shiftEndpointCoordinates(endpoint, offsetStartIndex) {\n    if (endpoint.alterRowOffset && endpoint.alterRowOffset !== 0) {\n      endpoint.destinationRow += endpoint.alterRowOffset || 0;\n      arrayEach(endpoint.ranges, element => {\n        arrayEach(element, (subElement, j) => {\n          if (subElement >= offsetStartIndex) {\n            element[j] += endpoint.alterRowOffset || 0;\n          }\n        });\n      });\n    } else if (endpoint.alterColumnOffset && endpoint.alterColumnOffset !== 0) {\n      endpoint.destinationColumn += endpoint.alterColumnOffset || 0;\n      endpoint.sourceColumn += endpoint.alterColumnOffset || 0;\n    }\n  }\n\n  /**\n   * Resets (removes) the endpoints from the table.\n   *\n   * @param {Array} [endpoints] Array containing the endpoints.\n   * @param {boolean} [useOffset=true] Use the cell offset value.\n   */\n  resetAllEndpoints() {\n    let endpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAllEndpoints();\n    let useOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const anyEndpointOutOfRange = endpoints.some(endpoint => {\n      const alterRowOffset = endpoint.alterRowOffset || 0;\n      const alterColOffset = endpoint.alterColumnOffset || 0;\n      if (endpoint.destinationRow + alterRowOffset >= this.hot.countRows() || endpoint.destinationColumn + alterColOffset >= this.hot.countCols()) {\n        return true;\n      }\n      return false;\n    });\n    if (anyEndpointOutOfRange) {\n      return;\n    }\n    this.cellsToSetCache = [];\n    arrayEach(endpoints, endpoint => {\n      this.resetEndpointValue(endpoint, useOffset);\n    });\n    this.hot.setDataAtCell(this.cellsToSetCache, 'ColumnSummary.reset');\n    this.cellsToSetCache = [];\n  }\n\n  /**\n   * Calculate and refresh all defined endpoints.\n   */\n  refreshAllEndpoints() {\n    this.cellsToSetCache = [];\n    arrayEach(this.getAllEndpoints(), value => {\n      this.currentEndpoint = value;\n      this.plugin.calculate(value);\n      this.setEndpointValue(value, 'init');\n    });\n    this.currentEndpoint = null;\n    this.hot.setDataAtCell(this.cellsToSetCache, 'ColumnSummary.reset');\n    this.cellsToSetCache = [];\n  }\n\n  /**\n   * Calculate and refresh endpoints only in the changed columns.\n   *\n   * @param {Array} changes Array of changes from the `afterChange` hook.\n   */\n  refreshChangedEndpoints(changes) {\n    const needToRefresh = [];\n    this.cellsToSetCache = [];\n    arrayEach(changes, (value, key, changesObj) => {\n      // if nothing changed, dont update anything\n      if (`${value[2] || ''}` === `${value[3]}`) {\n        return;\n      }\n      arrayEach(this.getAllEndpoints(), (endpoint, j) => {\n        if (this.hot.propToCol(changesObj[key][1]) === endpoint.sourceColumn && needToRefresh.indexOf(j) === -1) {\n          needToRefresh.push(j);\n        }\n      });\n    });\n    arrayEach(needToRefresh, value => {\n      this.refreshEndpoint(this.getEndpoint(value));\n    });\n    this.hot.setDataAtCell(this.cellsToSetCache, 'ColumnSummary.reset');\n    this.cellsToSetCache = [];\n  }\n\n  /**\n   * Calculate and refresh a single endpoint.\n   *\n   * @param {object} endpoint Contains the endpoint information.\n   */\n  refreshEndpoint(endpoint) {\n    this.currentEndpoint = endpoint;\n    this.plugin.calculate(endpoint);\n    this.setEndpointValue(endpoint);\n    this.currentEndpoint = null;\n  }\n\n  /**\n   * Reset the endpoint value.\n   *\n   * @param {object} endpoint Contains the endpoint information.\n   * @param {boolean} [useOffset=true] Use the cell offset value.\n   */\n  resetEndpointValue(endpoint) {\n    let useOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const alterRowOffset = endpoint.alterRowOffset || 0;\n    const alterColOffset = endpoint.alterColumnOffset || 0;\n    this.cellsToSetCache.push([this.hot.toVisualRow(endpoint.destinationRow + (useOffset ? alterRowOffset : 0)), this.hot.toVisualColumn(endpoint.destinationColumn + (useOffset ? alterColOffset : 0)), '']);\n  }\n\n  /**\n   * Set the endpoint value.\n   *\n   * @param {object} endpoint Contains the endpoint information.\n   * @param {string} [source] Source of the call information.\n   * @param {boolean} [render=false] `true` if it needs to render the table afterwards.\n   */\n  setEndpointValue(endpoint, source) {\n    let render = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const visualEndpointRowIndex = this.hot.toVisualRow(endpoint.destinationRow);\n    if (endpoint.destinationRow >= this.hot.countRows() || endpoint.destinationColumn >= this.hot.countCols()) {\n      this.throwOutOfBoundsWarning();\n      return;\n    }\n    const destinationVisualRow = this.hot.toVisualRow(endpoint.destinationRow);\n    if (destinationVisualRow !== null) {\n      const cellMeta = this.hot.getCellMeta(destinationVisualRow, endpoint.destinationColumn);\n      if (source === 'init' || cellMeta.readOnly !== endpoint.readOnly) {\n        cellMeta.readOnly = endpoint.readOnly;\n        cellMeta.className = 'columnSummaryResult';\n      }\n    }\n    if (endpoint.roundFloat && !isNaN(endpoint.result)) {\n      endpoint.result = endpoint.result.toFixed(endpoint.roundFloat);\n    }\n    if (render) {\n      this.hot.setDataAtCell(visualEndpointRowIndex, endpoint.destinationColumn, endpoint.result, 'ColumnSummary.set');\n    } else {\n      this.cellsToSetCache.push([visualEndpointRowIndex, endpoint.destinationColumn, endpoint.result]);\n    }\n    endpoint.alterRowOffset = undefined;\n    endpoint.alterColumnOffset = undefined;\n  }\n\n  /**\n   * Throw an error for the calculation range being out of boundaries.\n   *\n   * @private\n   */\n  throwOutOfBoundsWarning() {\n    warn('One of the Column Summary plugins\\' destination points you provided is beyond the table boundaries!');\n  }\n}\nexport default Endpoints;", "/**\n * Returns `true` if the value is one of the type: `null`, `undefined` or `NaN`.\n *\n * @param {*} value The value to check.\n * @returns {boolean}\n */\nexport function isNullishOrNaN(value) {\n  return value === null || value === undefined || isNaN(value);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport Endpoints from \"./endpoints.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { isNullishOrNaN } from \"./utils.mjs\";\nexport const PLUGIN_KEY = 'columnSummary';\nexport const PLUGIN_PRIORITY = 220;\n\n/**\n * @plugin ColumnSummary\n * @class ColumnSummary\n *\n * @description\n * The `ColumnSummary` plugin lets you [easily summarize your columns](@/guides/columns/column-summary.md).\n *\n * You can use the [built-in summary functions](@/guides/columns/column-summary.md#built-in-summary-functions),\n * or implement a [custom summary function](@/guides/columns/column-summary.md#implement-a-custom-summary-function).\n *\n * For each column summary, you can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `sourceColumn` | No | Number | Same as `destinationColumn` | [Selects a column to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `ranges` | No | Array | - | [Selects ranges of rows to summarize](@/guides/columns/column-summary.md#step-2-select-cells-that-you-want-to-summarize) |\n * | `type` | Yes | String | - | [Sets a summary function](@/guides/columns/column-summary.md#step-3-calculate-your-summary) |\n * | `destinationRow` | Yes | Number | - | [Sets the destination cell's row coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `destinationColumn` | Yes | Number | - | [Sets the destination cell's column coordinate](@/guides/columns/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\n * | `forceNumeric` | No | Boolean | `false` | [Forces the summary to treat non-numerics as numerics](@/guides/columns/column-summary.md#force-numeric-values) |\n * | `reversedRowCoords` | No | Boolean | `false` | [Reverses row coordinates](@/guides/columns/column-summary.md#step-5-make-room-for-the-destination-cell) |\n * | `suppressDataTypeErrors` | No | Boolean | `true` | [Suppresses data type errors](@/guides/columns/column-summary.md#throw-data-type-errors) |\n * | `readOnly` | No | Boolean | `true` | Makes summary cell read-only |\n * | `roundFloat` | No | Number | - | [Rounds summary result](@/guides/columns/column-summary.md#round-a-column-summary-result) |\n * | `customFunction` | No | Function | - | [Lets you add a custom summary function](@/guides/columns/column-summary.md#implement-a-custom-summary-function) |\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   columnSummary: [\n *     {\n *       type: 'min',\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *     },\n *     {\n *       type: 'max',\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true\n *     },\n *     {\n *       type: 'sum',\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       forceNumeric: true\n *     }\n *   ]\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   columnSummary={[\n *     {\n *       type: 'min',\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *     },\n *     {\n *       type: 'max',\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true\n *     },\n *     {\n *       type: 'sum',\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       forceNumeric: true\n *     }\n *   ]}\n * />\n * ```\n * :::\n */\nvar _onAfterInit = /*#__PURE__*/new WeakSet();\nvar _onAfterChange = /*#__PURE__*/new WeakSet();\nvar _onAfterRowMove = /*#__PURE__*/new WeakSet();\nexport class ColumnSummary extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @param {Array} rows Array of visual row indexes to be moved.\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n     * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRowMove);\n    /**\n     * `afterChange` hook callback.\n     *\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     * @param {string} source The string that identifies source of changes.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterChange);\n    /**\n     * `afterInit` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterInit);\n    /**\n     * The Endpoints class instance. Used to make all endpoint-related operations.\n     *\n     * @private\n     * @type {null|Endpoints}\n     */\n    _defineProperty(this, \"endpoints\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ColumnSummary#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.settings = this.hot.getSettings()[PLUGIN_KEY];\n    this.endpoints = new Endpoints(this, this.settings);\n    this.addHook('afterInit', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterInit, _onAfterInit2).call(_this, ...args);\n    });\n    this.addHook('afterChange', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onAfterChange, _onAfterChange2).call(_this, ...args);\n    });\n    this.addHook('beforeCreateRow', (index, amount, source) => this.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source)); // eslint-disable-line max-len\n    this.addHook('beforeCreateCol', (index, amount, source) => this.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source)); // eslint-disable-line max-len\n    this.addHook('beforeRemoveRow', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _this.endpoints.resetSetupBeforeStructureAlteration('remove_row', ...args);\n    });\n    this.addHook('beforeRemoveCol', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _this.endpoints.resetSetupBeforeStructureAlteration('remove_col', ...args);\n    });\n    this.addHook('afterCreateRow', (index, amount, source) => this.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source)); // eslint-disable-line max-len\n    this.addHook('afterCreateCol', (index, amount, source) => this.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source)); // eslint-disable-line max-len\n    this.addHook('afterRemoveRow', function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      return _this.endpoints.resetSetupAfterStructureAlteration('remove_row', ...args);\n    });\n    this.addHook('afterRemoveCol', function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      return _this.endpoints.resetSetupAfterStructureAlteration('remove_col', ...args);\n    });\n    this.addHook('afterRowMove', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _classPrivateMethodGet(_this, _onAfterRowMove, _onAfterRowMove2).call(_this, ...args);\n    });\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.endpoints = null;\n    this.settings = null;\n    this.currentEndpoint = null;\n  }\n\n  /**\n   * Calculates math for a single endpoint.\n   *\n   * @private\n   * @param {object} endpoint Contains information about the endpoint.\n   */\n  calculate(endpoint) {\n    switch (endpoint.type.toLowerCase()) {\n      case 'sum':\n        endpoint.result = this.calculateSum(endpoint);\n        break;\n      case 'min':\n        endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n        break;\n      case 'max':\n        endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n        break;\n      case 'count':\n        endpoint.result = this.countEntries(endpoint);\n        break;\n      case 'average':\n        endpoint.result = this.calculateAverage(endpoint);\n        break;\n      case 'custom':\n        endpoint.result = endpoint.customFunction.call(this, endpoint);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Calculates sum of the values contained in ranges provided in the plugin config.\n   *\n   * @private\n   * @param {object} endpoint Contains the endpoint information.\n   * @returns {number} Sum for the selected range.\n   */\n  calculateSum(endpoint) {\n    let sum = 0;\n    objectEach(endpoint.ranges, range => {\n      sum += this.getPartialSum(range, endpoint.sourceColumn);\n    });\n    return sum;\n  }\n\n  /**\n   * Returns partial sum of values from a single row range.\n   *\n   * @private\n   * @param {Array} rowRange Range for the sum.\n   * @param {number} col Column index.\n   * @returns {number} The partial sum.\n   */\n  getPartialSum(rowRange, col) {\n    let sum = 0;\n    let i = rowRange[1] || rowRange[0];\n    let cellValue = null;\n    let biggestDecimalPlacesCount = 0;\n    do {\n      cellValue = this.getCellValue(i, col);\n      cellValue = isNullishOrNaN(cellValue) ? null : cellValue;\n      if (cellValue !== null) {\n        const decimalPlaces = (`${cellValue}`.split('.')[1] || []).length || 1;\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n      }\n      sum += cellValue || 0;\n      i -= 1;\n    } while (i >= rowRange[0]);\n\n    // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n    return Math.round(sum * 10 ** biggestDecimalPlacesCount) / 10 ** biggestDecimalPlacesCount;\n  }\n\n  /**\n   * Calculates the minimal value for the selected ranges.\n   *\n   * @private\n   * @param {object} endpoint Contains the endpoint information.\n   * @param {string} type `'min'` or `'max'`.\n   * @returns {number} Min or Max value.\n   */\n  calculateMinMax(endpoint, type) {\n    let result = null;\n    objectEach(endpoint.ranges, range => {\n      const partialResult = this.getPartialMinMax(range, endpoint.sourceColumn, type);\n      if (result === null && partialResult !== null) {\n        result = partialResult;\n      }\n      if (partialResult !== null) {\n        switch (type) {\n          case 'min':\n            result = Math.min(result, partialResult);\n            break;\n          case 'max':\n            result = Math.max(result, partialResult);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    return result === null ? 'Not enough data' : result;\n  }\n\n  /**\n   * Returns a local minimum of the provided sub-range.\n   *\n   * @private\n   * @param {Array} rowRange Range for the calculation.\n   * @param {number} col Column index.\n   * @param {string} type `'min'` or `'max'`.\n   * @returns {number|null} Min or max value.\n   */\n  getPartialMinMax(rowRange, col, type) {\n    let result = null;\n    let i = rowRange[1] || rowRange[0];\n    let cellValue;\n    do {\n      cellValue = this.getCellValue(i, col);\n      cellValue = isNullishOrNaN(cellValue) ? null : cellValue;\n      if (result === null) {\n        result = cellValue;\n      } else if (cellValue !== null) {\n        switch (type) {\n          case 'min':\n            result = Math.min(result, cellValue);\n            break;\n          case 'max':\n            result = Math.max(result, cellValue);\n            break;\n          default:\n            break;\n        }\n      }\n      i -= 1;\n    } while (i >= rowRange[0]);\n    return result;\n  }\n\n  /**\n   * Counts empty cells in the provided row range.\n   *\n   * @private\n   * @param {Array} rowRange Row range for the calculation.\n   * @param {number} col Column index.\n   * @returns {number} Empty cells count.\n   */\n  countEmpty(rowRange, col) {\n    let cellValue;\n    let counter = 0;\n    let i = rowRange[1] || rowRange[0];\n    do {\n      cellValue = this.getCellValue(i, col);\n      cellValue = isNullishOrNaN(cellValue) ? null : cellValue;\n      if (cellValue === null) {\n        counter += 1;\n      }\n      i -= 1;\n    } while (i >= rowRange[0]);\n    return counter;\n  }\n\n  /**\n   * Counts non-empty cells in the provided row range.\n   *\n   * @private\n   * @param {object} endpoint Contains the endpoint information.\n   * @returns {number} Entry count.\n   */\n  countEntries(endpoint) {\n    let result = 0;\n    const ranges = endpoint.ranges;\n    objectEach(ranges, range => {\n      const partial = range[1] === undefined ? 1 : range[1] - range[0] + 1;\n      const emptyCount = this.countEmpty(range, endpoint.sourceColumn);\n      result += partial;\n      result -= emptyCount;\n    });\n    return result;\n  }\n\n  /**\n   * Calculates the average value from the cells in the range.\n   *\n   * @private\n   * @param {object} endpoint Contains the endpoint information.\n   * @returns {number} Avarage value.\n   */\n  calculateAverage(endpoint) {\n    const sum = this.calculateSum(endpoint);\n    const entriesCount = this.countEntries(endpoint);\n    return sum / entriesCount;\n  }\n\n  /**\n   * Returns a cell value, taking into consideration a basic validation.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @param {number} col Column index.\n   * @returns {string} The cell value.\n   */\n  getCellValue(row, col) {\n    const visualRowIndex = this.hot.toVisualRow(row);\n    const visualColumnIndex = this.hot.toVisualColumn(col);\n    let cellValue = this.hot.getSourceDataAtCell(row, col);\n    let cellClassName = '';\n    if (visualRowIndex !== null && visualColumnIndex !== null) {\n      cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n    }\n    if (cellClassName.indexOf('columnSummaryResult') > -1) {\n      return null;\n    }\n    if (this.endpoints.currentEndpoint.forceNumeric) {\n      if (typeof cellValue === 'string') {\n        cellValue = cellValue.replace(/,/, '.');\n      }\n      cellValue = parseFloat(cellValue);\n    }\n    if (isNaN(cellValue)) {\n      if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n        throw new Error(toSingleLine`ColumnSummary plugin: cell at (${row}, ${col}) is not in a\\x20\n          numeric format. Cannot do the calculation.`);\n      }\n    }\n    return cellValue;\n  }\n}\nfunction _onAfterInit2() {\n  this.endpoints.endpoints = this.endpoints.parseSettings();\n  this.endpoints.refreshAllEndpoints(true);\n}\nfunction _onAfterChange2(changes, source) {\n  if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n    this.endpoints.refreshChangedEndpoints(changes);\n  }\n}\nfunction _onAfterRowMove2(rows, finalIndex) {\n  this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n  this.endpoints.resetSetupAfterStructureAlteration('move_row', finalIndex, rows.length, rows, this.pluginName);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { addClass, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\n/**\n * Comment editor for the Comments plugin.\n *\n * @private\n * @class CommentEditor\n */\nclass CommentEditor {\n  static get CLASS_EDITOR_CONTAINER() {\n    return 'htCommentsContainer';\n  }\n  static get CLASS_EDITOR() {\n    return 'htComments';\n  }\n  static get CLASS_INPUT() {\n    return 'htCommentTextArea';\n  }\n  static get CLASS_CELL() {\n    return 'htCommentCell';\n  }\n\n  /**\n   * @type {HTMLDocument}\n   */\n\n  constructor(rootDocument, isRtl) {\n    _defineProperty(this, \"rootDocument\", void 0);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"isRtl\", false);\n    /**\n     * @type {HTMLElement}\n     */\n    _defineProperty(this, \"container\", null);\n    /**\n     * @type {HTMLElement}\n     */\n    _defineProperty(this, \"editor\", void 0);\n    /**\n     * @type {CSSStyleDeclaration}\n     */\n    _defineProperty(this, \"editorStyle\", void 0);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"hidden\", true);\n    this.rootDocument = rootDocument;\n    this.isRtl = isRtl;\n    this.editor = this.createEditor();\n    this.editorStyle = this.editor.style;\n    this.hide();\n  }\n\n  /**\n   * Set position of the comments editor according to the  provided x and y coordinates.\n   *\n   * @param {number} x X position (in pixels).\n   * @param {number} y Y position (in pixels).\n   */\n  setPosition(x, y) {\n    this.editorStyle.left = `${x}px`;\n    this.editorStyle.top = `${y}px`;\n  }\n\n  /**\n   * Set the editor size according to the provided arguments.\n   *\n   * @param {number} width Width in pixels.\n   * @param {number} height Height in pixels.\n   */\n  setSize(width, height) {\n    if (width && height) {\n      const input = this.getInputElement();\n      input.style.width = `${width}px`;\n      input.style.height = `${height}px`;\n    }\n  }\n\n  /**\n   * Returns the size of the comments editor.\n   *\n   * @returns {{ width: number, height: number }}\n   */\n  getSize() {\n    return {\n      width: outerWidth(this.getInputElement()),\n      height: outerHeight(this.getInputElement())\n    };\n  }\n\n  /**\n   * Reset the editor size to its initial state.\n   */\n  resetSize() {\n    const input = this.getInputElement();\n    input.style.width = '';\n    input.style.height = '';\n  }\n\n  /**\n   * Set the read-only state for the comments editor.\n   *\n   * @param {boolean} state The new read only state.\n   */\n  setReadOnlyState(state) {\n    const input = this.getInputElement();\n    input.readOnly = state;\n  }\n\n  /**\n   * Show the comments editor.\n   */\n  show() {\n    this.editorStyle.display = 'block';\n    this.hidden = false;\n  }\n\n  /**\n   * Hide the comments editor.\n   */\n  hide() {\n    if (!this.hidden) {\n      this.editorStyle.display = 'none';\n    }\n    this.hidden = true;\n  }\n\n  /**\n   * Checks if the editor is visible.\n   *\n   * @returns {boolean}\n   */\n  isVisible() {\n    return this.editorStyle.display === 'block';\n  }\n\n  /**\n   * Set the comment value.\n   *\n   * @param {string} [value] The value to use.\n   */\n  setValue() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const comment = value || '';\n    this.getInputElement().value = comment;\n  }\n\n  /**\n   * Get the comment value.\n   *\n   * @returns {string}\n   */\n  getValue() {\n    return this.getInputElement().value;\n  }\n\n  /**\n   * Checks if the comment input element is focused.\n   *\n   * @returns {boolean}\n   */\n  isFocused() {\n    return this.rootDocument.activeElement === this.getInputElement();\n  }\n\n  /**\n   * Focus the comments input element.\n   */\n  focus() {\n    this.getInputElement().focus();\n  }\n\n  /**\n   * Create the `textarea` to be used as a comments editor.\n   *\n   * @returns {HTMLElement}\n   */\n  createEditor() {\n    const editor = this.rootDocument.createElement('div');\n    const textArea = this.rootDocument.createElement('textarea');\n    editor.style.display = 'none';\n    this.container = this.rootDocument.createElement('div');\n    this.container.setAttribute('dir', this.isRtl ? 'rtl' : 'ltr');\n    addClass(this.container, CommentEditor.CLASS_EDITOR_CONTAINER);\n    this.rootDocument.body.appendChild(this.container);\n    addClass(editor, CommentEditor.CLASS_EDITOR);\n    addClass(textArea, CommentEditor.CLASS_INPUT);\n    textArea.setAttribute('data-hot-input', true);\n    editor.appendChild(textArea);\n    this.container.appendChild(editor);\n    return editor;\n  }\n\n  /**\n   * Get the input element.\n   *\n   * @returns {HTMLElement}\n   */\n  getInputElement() {\n    return this.editor.querySelector(`.${CommentEditor.CLASS_INPUT}`);\n  }\n\n  /**\n   * Destroy the comments editor.\n   */\n  destroy() {\n    const containerParentElement = this.container ? this.container.parentNode : null;\n    this.editor.parentNode.removeChild(this.editor);\n    this.editor = null;\n    this.editorStyle = null;\n    if (containerParentElement) {\n      containerParentElement.removeChild(this.container);\n    }\n  }\n}\nexport default CommentEditor;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { debounce } from \"../../helpers/function.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\nconst DEFAULT_DISPLAY_DELAY = 250;\nconst DEFAULT_HIDE_DELAY = 250;\n\n/**\n * Display switch for the Comments plugin. Manages the time of delayed displaying / hiding comments.\n *\n * @private\n * @class DisplaySwitch\n */\nclass DisplaySwitch {\n  constructor(displayDelay) {\n    /**\n     * Flag to determine if comment can be showed or hidden. State `true` mean that last performed action\n     * was an attempt to show comment element. State `false` mean that it was attempt to hide comment element.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"wasLastActionShow\", true);\n    /**\n     * Show comment after predefined delay. It keeps reference to immutable `debounce` function.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"showDebounced\", null);\n    /**\n     * Reference to timer, run by `setTimeout`, which is hiding comment.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"hidingTimer\", null);\n    this.updateDelay(displayDelay);\n  }\n\n  /**\n   * Responsible for hiding comment after proper delay.\n   */\n  hide() {\n    this.wasLastActionShow = false;\n    this.hidingTimer = setTimeout(() => {\n      if (this.wasLastActionShow === false) {\n        this.runLocalHooks('hide');\n      }\n    }, DEFAULT_HIDE_DELAY);\n  }\n\n  /**\n   * Responsible for showing comment after proper delay.\n   *\n   * @param {object} range Coordinates of selected cell.\n   */\n  show(range) {\n    this.wasLastActionShow = true;\n    this.showDebounced(range);\n  }\n\n  /**\n   * Cancel hiding comment.\n   */\n  cancelHiding() {\n    this.wasLastActionShow = true;\n    clearTimeout(this.hidingTimer);\n    this.hidingTimer = null;\n  }\n\n  /**\n   * Update the switch settings.\n   *\n   * @param {number} displayDelay Delay of showing the comments (in milliseconds).\n   */\n  updateDelay() {\n    let displayDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_DISPLAY_DELAY;\n    this.showDebounced = debounce(range => {\n      if (this.wasLastActionShow) {\n        this.runLocalHooks('show', range.from.row, range.from.col);\n      }\n    }, displayDelay);\n  }\n\n  /**\n   * Destroy the switcher.\n   */\n  destroy() {\n    this.clearLocalHooks();\n  }\n}\nmixin(DisplaySwitch, localHooks);\nexport default DisplaySwitch;", "import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {Comments} plugin The Comments plugin instance.\n * @returns {object}\n */\nexport default function addEditCommentItem(plugin) {\n  return {\n    key: 'commentsAddEdit',\n    name() {\n      var _this$getSelectedRang;\n      const highlight = (_this$getSelectedRang = this.getSelectedRangeLast()) === null || _this$getSelectedRang === void 0 ? void 0 : _this$getSelectedRang.highlight;\n      if (highlight !== null && highlight !== void 0 && highlight.isCell() && plugin.getCommentAtCell(highlight.row, highlight.col)) {\n        return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n    },\n    callback() {\n      const range = this.getSelectedRangeLast();\n      this.deselectCell();\n      plugin.setRange(range);\n      plugin.show();\n      plugin.focusEditor();\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range || range.highlight.isHeader() || this.selection.isEntireRowSelected() && this.selection.isEntireColumnSelected() || this.countRenderedRows() === 0 || this.countRenderedCols() === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {Comments} plugin The Comments plugin instance.\n * @returns {object}\n */\nexport default function removeCommentItem(plugin) {\n  return {\n    key: 'commentsRemove',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n    },\n    callback() {\n      const range = this.getSelectedRangeLast();\n      range.forAll((row, column) => {\n        if (row >= 0 && column >= 0) {\n          plugin.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.render();\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range || range.highlight.isHeader() || this.selection.isEntireRowSelected() && this.selection.isEntireColumnSelected() || this.countRenderedRows() === 0 || this.countRenderedCols() === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../../contextMenu/utils.mjs\";\nimport { META_READONLY } from \"../comments.mjs\";\n/**\n * @param {Comments} plugin The Comments plugin instance.\n * @returns {object}\n */\nexport default function readOnlyCommentItem(plugin) {\n  return {\n    key: 'commentsReadOnly',\n    name() {\n      const label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n      const areReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => {\n        return plugin.getCommentMeta(row, col, META_READONLY);\n      });\n      return areReadOnly ? markLabelAsSelected(label) : label;\n    },\n    callback() {\n      const range = this.getSelectedRangeLast();\n      range.forAll((row, column) => {\n        if (row >= 0 && column >= 0) {\n          const currentState = !!plugin.getCommentMeta(row, column, META_READONLY);\n          plugin.updateCommentMeta(row, column, {\n            [META_READONLY]: !currentState\n          });\n        }\n      });\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range || range.highlight.isHeader() || !plugin.getCommentAtCell(range.highlight.row, range.highlight.col) || this.selection.isEntireRowSelected() && this.selection.isEntireColumnSelected() || this.countRenderedRows() === 0 || this.countRenderedCols() === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { addClass, closest, isChildOf, hasClass, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { stopImmediatePropagation } from \"../../helpers/dom/event.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport addEditCommentItem from \"./contextMenuItem/addEditComment.mjs\";\nimport removeCommentItem from \"./contextMenuItem/removeComment.mjs\";\nimport readOnlyCommentItem from \"./contextMenuItem/readOnlyComment.mjs\";\nexport const PLUGIN_KEY = 'comments';\nexport const PLUGIN_PRIORITY = 60;\nexport const META_COMMENT = 'comment';\nexport const META_COMMENT_VALUE = 'value';\nexport const META_STYLE = 'style';\nexport const META_READONLY = 'readOnly';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nconst SHORTCUTS_CONTEXT_NAME = `plugin:${PLUGIN_KEY}`;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   comments={true}\n *   cell={[\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]}\n * />\n *\n * // Access to the Comments plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n */\nvar _editor = /*#__PURE__*/new WeakMap();\nvar _displaySwitch = /*#__PURE__*/new WeakMap();\nvar _preventEditorAutoSwitch = /*#__PURE__*/new WeakMap();\nvar _preventEditorHiding = /*#__PURE__*/new WeakMap();\nvar _tempEditorDimensions = /*#__PURE__*/new WeakMap();\nvar _cellBelowCursor = /*#__PURE__*/new WeakMap();\nvar _commentValueBeforeSave = /*#__PURE__*/new WeakMap();\nvar _onMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterRenderer = /*#__PURE__*/new WeakSet();\nvar _onEditorBlur = /*#__PURE__*/new WeakSet();\nvar _onEditorFocus = /*#__PURE__*/new WeakSet();\nvar _onEditorMouseDown = /*#__PURE__*/new WeakSet();\nvar _onEditorMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterDocumentKeyDown = /*#__PURE__*/new WeakSet();\nvar _onAfterScroll = /*#__PURE__*/new WeakSet();\nexport class Comments extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Observes the changes in the scroll position if triggered it hides the comment editor.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterScroll);\n    /**\n     * Observes the pressed keys and if there is already opened the comment editor prevents open\n     * the table editor into the fast edit mode.\n     *\n     * @param {Event} event The keydown event.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDocumentKeyDown);\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n    _classPrivateMethodInitSpec(this, _onEditorMouseUp);\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n    _classPrivateMethodInitSpec(this, _onEditorMouseDown);\n    /**\n     * Hook observer the \"focus\" event from the comments editor element. The hook takes the control of\n     * the keyboard shortcuts by switching the context to plugins one.\n     */\n    _classPrivateMethodInitSpec(this, _onEditorFocus);\n    /**\n     * Hook observer the \"blur\" event from the comments editor element. The hook clears the\n     * editor content and gives back the keyboard shortcuts control by switching to the \"grid\" context.\n     */\n    _classPrivateMethodInitSpec(this, _onEditorBlur);\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRenderer);\n    /**\n     * `mouseup` event callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * `mouseover` event callback.\n     *\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseOver);\n    /**\n     * `mousedown` event callback.\n     *\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseDown);\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"range\", {});\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n    _classPrivateFieldInitSpec(this, _editor, {\n      writable: true,\n      value: null\n    });\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n    _classPrivateFieldInitSpec(this, _displaySwitch, {\n      writable: true,\n      value: null\n    });\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _preventEditorAutoSwitch, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Prevents hiding editor when the table viewport is scrolled and that scroll is triggered by the\n     * keyboard shortcut that insert or edits the comment.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _preventEditorHiding, {\n      writable: true,\n      value: false\n    });\n    /**\n     * The property for holding editor dimensions for further processing.\n     *\n     * @private\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _tempEditorDimensions, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * The flag that allows processing mousedown event correctly when comments editor is triggered.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _cellBelowCursor, {\n      writable: true,\n      value: null\n    });\n    /**\n     * Holds the comment value before it's actually saved to the cell meta.\n     *\n     * @private\n     * @type {string}\n     */\n    _classPrivateFieldInitSpec(this, _commentValueBeforeSave, {\n      writable: true,\n      value: ''\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    if (!_classPrivateFieldGet(this, _editor)) {\n      _classPrivateFieldSet(this, _editor, new CommentEditor(this.hot.rootDocument, this.hot.isRtl()));\n    }\n    if (!_classPrivateFieldGet(this, _displaySwitch)) {\n      _classPrivateFieldSet(this, _displaySwitch, new DisplaySwitch(this.getDisplayDelaySetting()));\n    }\n    this.addHook('afterContextMenuDefaultOptions', options => this.addToContextMenu(options));\n    this.addHook('afterRenderer', (TD, row, col, prop, value, cellProperties) => _classPrivateMethodGet(this, _onAfterRenderer, _onAfterRenderer2).call(this, TD, cellProperties));\n    this.addHook('afterScroll', () => _classPrivateMethodGet(this, _onAfterScroll, _onAfterScroll2).call(this));\n    this.addHook('afterBeginEditing', () => this.hide());\n    this.addHook('afterDocumentKeyDown', event => _classPrivateMethodGet(this, _onAfterDocumentKeyDown, _onAfterDocumentKeyDown2).call(this, event));\n    _classPrivateFieldGet(this, _displaySwitch).addLocalHook('hide', () => this.hide());\n    _classPrivateFieldGet(this, _displaySwitch).addLocalHook('show', (row, col) => this.showAtCell(row, col));\n    this.registerShortcuts();\n    this.registerListeners();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *   - [`comments`](@/api/options.md#comments)\n   */\n  updatePlugin() {\n    _classPrivateFieldGet(this, _displaySwitch).updateDelay(this.getDisplayDelaySetting());\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const manager = this.hot.getShortcutManager();\n    const gridContext = manager.getContext('grid');\n    const pluginContext = manager.addContext(SHORTCUTS_CONTEXT_NAME);\n    gridContext.addShortcut({\n      keys: [['Control', 'Alt', 'M']],\n      callback: () => {\n        const range = this.hot.getSelectedRangeLast();\n        _classPrivateFieldSet(this, _preventEditorHiding, true);\n        this.hot.scrollToFocusedCell(() => {\n          this.setRange(range);\n          this.show();\n          this.focusEditor();\n          manager.setActiveContextName(SHORTCUTS_CONTEXT_NAME);\n          this.hot._registerTimeout(() => {\n            _classPrivateFieldSet(this, _preventEditorHiding, false);\n          });\n        });\n      },\n      stopPropagation: true,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        return ((_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight.isCell()) && !_classPrivateFieldGet(this, _editor).isVisible();\n      },\n      group: SHORTCUTS_GROUP\n    });\n    pluginContext.addShortcut({\n      keys: [['Escape']],\n      callback: () => {\n        _classPrivateFieldGet(this, _editor).setValue(_classPrivateFieldGet(this, _commentValueBeforeSave));\n        this.hide();\n        manager.setActiveContextName('grid');\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        return ((_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight.isCell()) && _classPrivateFieldGet(this, _editor).isVisible();\n      },\n      group: SHORTCUTS_GROUP\n    });\n    pluginContext.addShortcut({\n      keys: [['Control/Meta', 'Enter']],\n      callback: () => {\n        this.hide();\n        manager.setActiveContextName('grid');\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected3;\n        return ((_this$hot$getSelected3 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected3 === void 0 ? void 0 : _this$hot$getSelected3.highlight.isCell()) && _classPrivateFieldGet(this, _editor).isVisible();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers all necessary DOM listeners.\n   *\n   * @private\n   */\n  registerListeners() {\n    const {\n      rootDocument\n    } = this.hot;\n    const editorElement = this.getEditorInputElement();\n    this.eventManager.addEventListener(rootDocument, 'mouseover', event => _classPrivateMethodGet(this, _onMouseOver, _onMouseOver2).call(this, event));\n    this.eventManager.addEventListener(rootDocument, 'mousedown', event => _classPrivateMethodGet(this, _onMouseDown, _onMouseDown2).call(this, event));\n    this.eventManager.addEventListener(rootDocument, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(editorElement, 'focus', () => _classPrivateMethodGet(this, _onEditorFocus, _onEditorFocus2).call(this));\n    this.eventManager.addEventListener(editorElement, 'blur', () => _classPrivateMethodGet(this, _onEditorBlur, _onEditorBlur2).call(this));\n    this.eventManager.addEventListener(editorElement, 'mousedown', event => _classPrivateMethodGet(this, _onEditorMouseDown, _onEditorMouseDown2).call(this, event));\n    this.eventManager.addEventListener(editorElement, 'mouseup', event => _classPrivateMethodGet(this, _onEditorMouseUp, _onEditorMouseUp2).call(this, event));\n  }\n\n  /**\n   * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n   *\n   * @param {object} range Object with `from` property, each with `row` and `col` properties.\n   */\n  setRange(range) {\n    this.range = range;\n  }\n\n  /**\n   * Clears the currently selected cell.\n   */\n  clearRange() {\n    this.range = {};\n  }\n\n  /**\n   * Checks if the event target is a cell containing a comment.\n   *\n   * @private\n   * @param {Event} event DOM event.\n   * @returns {boolean}\n   */\n  targetIsCellWithComment(event) {\n    const closestCell = closest(event.target, 'TD', 'TBODY');\n    return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n  }\n\n  /**\n   * Checks if the event target is a comment textarea.\n   *\n   * @private\n   * @param {Event} event DOM event.\n   * @returns {boolean}\n   */\n  targetIsCommentTextArea(event) {\n    return this.getEditorInputElement() === event.target;\n  }\n\n  /**\n   * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n   *\n   * @param {string} value Comment contents.\n   */\n  setComment(value) {\n    if (!this.range.from) {\n      throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n    }\n    const editorValue = _classPrivateFieldGet(this, _editor).getValue();\n    let comment = '';\n    if (value !== null && value !== undefined) {\n      comment = value;\n    } else if (editorValue !== null && editorValue !== undefined) {\n      comment = editorValue;\n    }\n    const row = this.range.from.row;\n    const col = this.range.from.col;\n    this.updateCommentMeta(row, col, {\n      [META_COMMENT_VALUE]: comment\n    });\n    this.hot.render();\n  }\n\n  /**\n   * Sets a comment for a specified cell.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {string} value Comment contents.\n   */\n  setCommentAtCell(row, column, value) {\n    this.setRange({\n      from: this.hot._createCellCoords(row, column)\n    });\n    this.setComment(value);\n  }\n\n  /**\n   * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n   *\n   * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n   */\n  removeComment() {\n    let forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!this.range.from) {\n      throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n    }\n    this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n    if (forceRender) {\n      this.hot.render();\n    }\n    this.hide();\n  }\n\n  /**\n   * Removes a comment from a specified cell.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n   */\n  removeCommentAtCell(row, column) {\n    let forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.setRange({\n      from: this.hot._createCellCoords(row, column)\n    });\n    this.removeComment(forceRender);\n  }\n\n  /**\n   * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n   *\n   * @returns {string|undefined} Returns a content of the comment.\n   */\n  getComment() {\n    const row = this.range.from.row;\n    const column = this.range.from.col;\n    return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n  }\n\n  /**\n   * Gets comment from a cell at the provided coordinates.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @returns {string|undefined} Returns a content of the comment.\n   */\n  getCommentAtCell(row, column) {\n    return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n  }\n\n  /**\n   * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n   *\n   * @returns {boolean} Returns `true` if comment editor was shown.\n   */\n  show() {\n    var _ref;\n    if (!this.range.from) {\n      throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n    }\n    const {\n      from: {\n        row,\n        col\n      }\n    } = this.range;\n    if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n      return false;\n    }\n    const meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n    _classPrivateFieldGet(this, _displaySwitch).cancelHiding();\n    _classPrivateFieldGet(this, _editor).setValue((_ref = meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null) !== null && _ref !== void 0 ? _ref : '');\n    _classPrivateFieldGet(this, _editor).show();\n    this.refreshEditor(true);\n    return true;\n  }\n\n  /**\n   * Shows comment editor according to cell coordinates.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @returns {boolean} Returns `true` if comment editor was shown.\n   */\n  showAtCell(row, column) {\n    this.setRange({\n      from: this.hot._createCellCoords(row, column)\n    });\n    return this.show();\n  }\n\n  /**\n   * Hides the comment editor.\n   */\n  hide() {\n    _classPrivateFieldGet(this, _editor).hide();\n  }\n\n  /**\n   * Refreshes comment editor position and styling.\n   *\n   * @param {boolean} [force=false] If `true` then recalculation will be forced.\n   */\n  refreshEditor() {\n    var _renderableRow, _renderableColumn;\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!force && (!this.range.from || !_classPrivateFieldGet(this, _editor).isVisible())) {\n      return;\n    }\n    const {\n      rowIndexMapper,\n      columnIndexMapper\n    } = this.hot;\n    const {\n      row: visualRow,\n      col: visualColumn\n    } = this.range.from;\n    let renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n    let renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn);\n    // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n    const targetingPreviousRow = renderableRow === null;\n\n    // Reset the editor position to (0, 0) so the opening direction calculation wouldn't be influenced by its\n    // previous position\n    _classPrivateFieldGet(this, _editor).setPosition(0, 0);\n    if (renderableRow === null) {\n      renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getNearestNotHiddenIndex(visualRow, -1));\n    }\n    if (renderableColumn === null) {\n      renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(visualColumn, -1));\n    }\n    const isBeforeRenderedRows = renderableRow === null;\n    const isBeforeRenderedColumns = renderableColumn === null;\n    renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n    renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n    const {\n      rootWindow,\n      view: {\n        _wt: wt\n      }\n    } = this.hot;\n    const {\n      wtTable\n    } = wt;\n    // TODO: Probably using `hot.getCell` would be the best. However, case for showing comment editor for hidden cell\n    // potentially should be removed with that change (currently a test for it is passing).\n    const TD = wt.getCell({\n      row: renderableRow,\n      col: renderableColumn\n    }, true);\n    const commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n    if (commentStyle) {\n      _classPrivateFieldGet(this, _editor).setSize(commentStyle.width, commentStyle.height);\n    } else {\n      _classPrivateFieldGet(this, _editor).resetSize();\n    }\n    const lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n    const lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n    const {\n      left,\n      top,\n      width: cellWidth,\n      height: cellHeight\n    } = TD.getBoundingClientRect();\n    const {\n      width: editorWidth,\n      height: editorHeight\n    } = _classPrivateFieldGet(this, _editor).getSize();\n    const {\n      innerWidth,\n      innerHeight\n    } = this.hot.rootWindow;\n    const documentElement = this.hot.rootDocument.documentElement;\n    let x = left + rootWindow.scrollX + lastColWidth;\n    let y = top + rootWindow.scrollY + lastRowHeight;\n    if (this.hot.isRtl()) {\n      x -= editorWidth + lastColWidth;\n    }\n\n    // flip to the right or left the comments editor position when it goes out of browser viewport\n    if (this.hot.isLtr() && left + cellWidth + editorWidth > innerWidth) {\n      x = left + rootWindow.scrollX - editorWidth - 1;\n    } else if (this.hot.isRtl() && x < -(documentElement.scrollWidth - documentElement.clientWidth)) {\n      x = left + rootWindow.scrollX + lastColWidth + 1;\n    }\n    if (top + editorHeight > innerHeight) {\n      y -= editorHeight - cellHeight + 1;\n    }\n    _classPrivateFieldGet(this, _editor).setPosition(x, y);\n    _classPrivateFieldGet(this, _editor).setReadOnlyState(this.getCommentMeta(visualRow, visualColumn, META_READONLY));\n  }\n\n  /**\n   * Focuses the comments editor element.\n   */\n  focusEditor() {\n    _classPrivateFieldGet(this, _editor).focus();\n  }\n\n  /**\n   * Sets or update the comment-related cell meta.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {object} metaObject Object defining all the comment-related meta information.\n   */\n  updateCommentMeta(row, column, metaObject) {\n    const oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n    let newComment;\n    if (oldComment) {\n      newComment = deepClone(oldComment);\n      deepExtend(newComment, metaObject);\n    } else {\n      newComment = metaObject;\n    }\n    this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n  }\n\n  /**\n   * Gets the comment related meta information.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {string} property Cell meta property.\n   * @returns {Mixed}\n   */\n  getCommentMeta(row, column, property) {\n    const cellMeta = this.hot.getCellMeta(row, column);\n    if (!cellMeta[META_COMMENT]) {\n      return undefined;\n    }\n    return cellMeta[META_COMMENT][property];\n  }\n  /**\n   * Add Comments plugin options to the Context Menu.\n   *\n   * @private\n   * @param {object} options The menu options.\n   */\n  addToContextMenu(options) {\n    options.items.push({\n      name: SEPARATOR\n    }, addEditCommentItem(this), removeCommentItem(this), readOnlyCommentItem(this));\n  }\n\n  /**\n   * Get `displayDelay` setting of comment plugin.\n   *\n   * @private\n   * @returns {number|undefined}\n   */\n  getDisplayDelaySetting() {\n    const commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n    if (isObject(commentSetting)) {\n      return commentSetting.displayDelay;\n    }\n  }\n\n  /**\n   * Gets the editors input element.\n   *\n   * @private\n   * @returns {HTMLTextAreaElement}\n   */\n  getEditorInputElement() {\n    return _classPrivateFieldGet(this, _editor).getInputElement();\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    if (_classPrivateFieldGet(this, _editor)) {\n      _classPrivateFieldGet(this, _editor).destroy();\n    }\n    if (_classPrivateFieldGet(this, _displaySwitch)) {\n      _classPrivateFieldGet(this, _displaySwitch).destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _onMouseDown2(event) {\n  if (!this.hot.view || !this.hot.view._wt) {\n    return;\n  }\n  if (!_classPrivateFieldGet(this, _preventEditorAutoSwitch) && !this.targetIsCommentTextArea(event)) {\n    const eventCell = closest(event.target, 'TD', 'TBODY');\n    let coordinates = null;\n    if (eventCell) {\n      coordinates = this.hot.getCoords(eventCell);\n    }\n    if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n      this.hide();\n    }\n  }\n}\nfunction _onMouseOver2(event) {\n  const {\n    rootDocument\n  } = this.hot;\n  if (_classPrivateFieldGet(this, _preventEditorAutoSwitch) || _classPrivateFieldGet(this, _editor).isFocused() || hasClass(event.target, 'wtBorder') || _classPrivateFieldGet(this, _cellBelowCursor) === event.target || !_classPrivateFieldGet(this, _editor)) {\n    return;\n  }\n  _classPrivateFieldSet(this, _cellBelowCursor, rootDocument.elementFromPoint(event.clientX, event.clientY));\n  if (this.targetIsCellWithComment(event)) {\n    const range = this.hot._createCellRange(this.hot.getCoords(event.target));\n    _classPrivateFieldGet(this, _displaySwitch).show(range);\n  } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n    _classPrivateFieldGet(this, _displaySwitch).hide();\n  }\n}\nfunction _onMouseUp2() {\n  _classPrivateFieldSet(this, _preventEditorAutoSwitch, false);\n}\nfunction _onAfterRenderer2(TD, cellProperties) {\n  if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n    addClass(TD, cellProperties.commentedCellClassName);\n  }\n}\nfunction _onEditorBlur2() {\n  _classPrivateFieldSet(this, _commentValueBeforeSave, '');\n  this.hot.getShortcutManager().setActiveContextName('grid');\n  this.setComment();\n}\nfunction _onEditorFocus2() {\n  _classPrivateFieldSet(this, _commentValueBeforeSave, this.getComment());\n  this.hot.listen();\n  this.hot.getShortcutManager().setActiveContextName(SHORTCUTS_CONTEXT_NAME);\n}\nfunction _onEditorMouseDown2(event) {\n  _classPrivateFieldSet(this, _tempEditorDimensions, {\n    width: outerWidth(event.target),\n    height: outerHeight(event.target)\n  });\n}\nfunction _onEditorMouseUp2(event) {\n  const currentWidth = outerWidth(event.target);\n  const currentHeight = outerHeight(event.target);\n  if (currentWidth !== _classPrivateFieldGet(this, _tempEditorDimensions).width + 1 || currentHeight !== _classPrivateFieldGet(this, _tempEditorDimensions).height + 2) {\n    this.updateCommentMeta(this.range.from.row, this.range.from.col, {\n      [META_STYLE]: {\n        width: currentWidth,\n        height: currentHeight\n      }\n    });\n  }\n}\nfunction _onAfterDocumentKeyDown2(event) {\n  if (_classPrivateFieldGet(this, _editor).isVisible()) {\n    stopImmediatePropagation(event);\n  }\n}\nfunction _onAfterScroll2() {\n  if (!_classPrivateFieldGet(this, _preventEditorHiding)) {\n    this.hide();\n  }\n}", "import { CONTEXTMENU_ITEMS_COPY } from \"../../../i18n/constants.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\nexport default function copyItem(copyPastePlugin) {\n  return {\n    key: 'copy',\n    name() {\n      return this.getTranslatedPhrase(CONTEXTMENU_ITEMS_COPY);\n    },\n    callback() {\n      copyPastePlugin.copyCellsOnly();\n    },\n    disabled() {\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      const selected = this.getSelected();\n\n      // Disable for no selection or for non-contiguous selection.\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n      return false;\n    },\n    hidden: false\n  };\n}", "import { CONTEXTMENU_ITEMS_COPY_COLUMN_HEADERS_ONLY } from \"../../../i18n/constants.mjs\";\nimport { clamp } from \"../../../helpers/number.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\nexport default function copyColumnHeadersOnlyItem(copyPastePlugin) {\n  return {\n    key: 'copy_column_headers_only',\n    name() {\n      const selectedRange = this.getSelectedRangeLast();\n      const nounForm = selectedRange ? clamp(selectedRange.getWidth() - 1, 0, 1) : 0;\n      return this.getTranslatedPhrase(CONTEXTMENU_ITEMS_COPY_COLUMN_HEADERS_ONLY, nounForm);\n    },\n    callback() {\n      copyPastePlugin.copyColumnHeadersOnly();\n    },\n    disabled() {\n      if (!this.hasColHeaders()) {\n        return true;\n      }\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      const selected = this.getSelected();\n\n      // Disable for no selection or for non-contiguous selection.\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n      return false;\n    },\n    hidden: false\n  };\n}", "import { CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_GROUP_HEADERS } from \"../../../i18n/constants.mjs\";\nimport { clamp } from \"../../../helpers/number.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\nexport default function copyWithColumnGroupHeadersItem(copyPastePlugin) {\n  return {\n    key: 'copy_with_column_group_headers',\n    name() {\n      const selectedRange = this.getSelectedRangeLast();\n      const nounForm = selectedRange ? clamp(selectedRange.getWidth() - 1, 0, 1) : 0;\n      return this.getTranslatedPhrase(CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_GROUP_HEADERS, nounForm);\n    },\n    callback() {\n      copyPastePlugin.copyWithAllColumnHeaders();\n    },\n    disabled() {\n      if (!this.hasColHeaders() || !this.getSettings().nestedHeaders) {\n        return true;\n      }\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      const selected = this.getSelected();\n\n      // Disable for no selection or for non-contiguous selection.\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n      return false;\n    },\n    hidden: false\n  };\n}", "import { CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_HEADERS } from \"../../../i18n/constants.mjs\";\nimport { clamp } from \"../../../helpers/number.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\nexport default function copyWithColumnHeadersItem(copyPastePlugin) {\n  return {\n    key: 'copy_with_column_headers',\n    name() {\n      const selectedRange = this.getSelectedRangeLast();\n      const nounForm = selectedRange ? clamp(selectedRange.getWidth() - 1, 0, 1) : 0;\n      return this.getTranslatedPhrase(CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_HEADERS, nounForm);\n    },\n    callback() {\n      copyPastePlugin.copyWithColumnHeaders();\n    },\n    disabled() {\n      if (!this.hasColHeaders()) {\n        return true;\n      }\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      const selected = this.getSelected();\n\n      // Disable for no selection or for non-contiguous selection.\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n      return false;\n    },\n    hidden: false\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\nexport default function cutItem(copyPastePlugin) {\n  return {\n    key: 'cut',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CUT);\n    },\n    callback() {\n      copyPastePlugin.cut();\n    },\n    disabled() {\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      const selected = this.getSelected();\n\n      // Disable for no selection or for non-contiquous selection.\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n      return false;\n    },\n    hidden: false\n  };\n}", "/**\n * @private\n */\nexport default class ClipboardData {\n  constructor() {\n    this.data = {};\n  }\n  setData(type, value) {\n    this.data[type] = value;\n  }\n  getData(type) {\n    return this.data[type] || void 0;\n  }\n}", "import ClipboardData from \"./clipboardData.mjs\";\n/**\n * @private\n */\nexport default class PasteEvent {\n  constructor() {\n    this.clipboardData = new ClipboardData();\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * The utils class produces the selection ranges in the `{startRow, startCol, endRow, endCol}` format\n * based on the current table selection. The CopyPaste plugin consumes that ranges to generate\n * appropriate data ready to copy to the clipboard.\n *\n * @private\n */\nvar _selectedRange = /*#__PURE__*/new WeakMap();\nvar _countRows = /*#__PURE__*/new WeakMap();\nvar _countColumns = /*#__PURE__*/new WeakMap();\nvar _rowsLimit = /*#__PURE__*/new WeakMap();\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\nvar _countColumnHeaders = /*#__PURE__*/new WeakMap();\nvar _trimColumnsRange = /*#__PURE__*/new WeakSet();\nvar _trimRowsRange = /*#__PURE__*/new WeakSet();\nexport class CopyableRangesFactory {\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @param {{\n   *   countRows: function(): number,\n   *   countColumns: function(): number,\n   *   rowsLimit: function(): number,\n   *   columnsLimit: function(): number,\n   *   countColumnHeaders: function(): number\n   * }} dependencies The utils class dependencies.\n   */\n  constructor(_ref) {\n    let {\n      countRows,\n      countColumns,\n      rowsLimit,\n      columnsLimit,\n      countColumnHeaders\n    } = _ref;\n    /**\n     * Trimmed the rows range to the limit.\n     *\n     * @param {*} startRow The lowest row index in the range.\n     * @param {*} endRow The highest row index in the range.\n     * @returns {number} Returns trimmed row index if it exceeds the limit.\n     */\n    _classPrivateMethodInitSpec(this, _trimRowsRange);\n    /**\n     * Trimmed the columns range to the limit.\n     *\n     * @param {*} startColumn The lowest column index in the range.\n     * @param {*} endColumn The highest column index in the range.\n     * @returns {number} Returns trimmed column index if it exceeds the limit.\n     */\n    _classPrivateMethodInitSpec(this, _trimColumnsRange);\n    /**\n     * @type {CellRange}\n     */\n    _classPrivateFieldInitSpec(this, _selectedRange, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {function(): number}\n     */\n    _classPrivateFieldInitSpec(this, _countRows, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {function(): number}\n     */\n    _classPrivateFieldInitSpec(this, _countColumns, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {function(): number}\n     */\n    _classPrivateFieldInitSpec(this, _rowsLimit, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {function(): number}\n     */\n    _classPrivateFieldInitSpec(this, _columnsLimit, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {function(): number}\n     */\n    _classPrivateFieldInitSpec(this, _countColumnHeaders, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _countRows, countRows);\n    _classPrivateFieldSet(this, _countColumns, countColumns);\n    _classPrivateFieldSet(this, _rowsLimit, rowsLimit);\n    _classPrivateFieldSet(this, _columnsLimit, columnsLimit);\n    _classPrivateFieldSet(this, _countColumnHeaders, countColumnHeaders);\n  }\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n\n  /**\n   * Sets the selection range to be processed.\n   *\n   * @param {CellRange} selectedRange The selection range represented by the CellRange class.\n   */\n  setSelectedRange(selectedRange) {\n    _classPrivateFieldSet(this, _selectedRange, selectedRange);\n  }\n\n  /**\n   * Returns a new coords object within the dataset range (cells) with `startRow`, `startCol`, `endRow`\n   * and `endCol` keys.\n   *\n   * @returns {{startRow: number, startCol: number, endRow: number, endCol: number} | null}\n   */\n  getCellsRange() {\n    if (_classPrivateFieldGet(this, _countRows).call(this) === 0 || _classPrivateFieldGet(this, _countColumns).call(this) === 0) {\n      return null;\n    }\n    const {\n      row: startRow,\n      col: startCol\n    } = _classPrivateFieldGet(this, _selectedRange).getTopStartCorner();\n    const {\n      row: endRow,\n      col: endCol\n    } = _classPrivateFieldGet(this, _selectedRange).getBottomEndCorner();\n    const finalEndRow = _classPrivateMethodGet(this, _trimRowsRange, _trimRowsRange2).call(this, startRow, endRow);\n    const finalEndCol = _classPrivateMethodGet(this, _trimColumnsRange, _trimColumnsRange2).call(this, startCol, endCol);\n    const isRangeTrimmed = endRow !== finalEndRow || endCol !== finalEndCol;\n    return {\n      isRangeTrimmed,\n      startRow,\n      startCol,\n      endRow: finalEndRow,\n      endCol: finalEndCol\n    };\n  }\n\n  /**\n   * Returns a new coords object within the most-bottom column headers range with `startRow`,\n   * `startCol`, `endRow` and `endCol` keys.\n   *\n   * @returns {{startRow: number, startCol: number, endRow: number, endCol: number} | null}\n   */\n  getMostBottomColumnHeadersRange() {\n    if (_classPrivateFieldGet(this, _countColumns).call(this) === 0 || _classPrivateFieldGet(this, _countColumnHeaders).call(this) === 0) {\n      return null;\n    }\n    const {\n      col: startCol\n    } = _classPrivateFieldGet(this, _selectedRange).getTopStartCorner();\n    const {\n      col: endCol\n    } = _classPrivateFieldGet(this, _selectedRange).getBottomEndCorner();\n    const finalEndCol = _classPrivateMethodGet(this, _trimColumnsRange, _trimColumnsRange2).call(this, startCol, endCol);\n    const isRangeTrimmed = endCol !== finalEndCol;\n    return {\n      isRangeTrimmed,\n      startRow: -1,\n      startCol,\n      endRow: -1,\n      endCol: finalEndCol\n    };\n  }\n\n  /**\n   * Returns a new coords object within all column headers layers (including nested headers) range with\n   * `startRow`, `startCol`, `endRow` and `endCol` keys.\n   *\n   * @returns {{startRow: number, startCol: number, endRow: number, endCol: number} | null}\n   */\n  getAllColumnHeadersRange() {\n    if (_classPrivateFieldGet(this, _countColumns).call(this) === 0 || _classPrivateFieldGet(this, _countColumnHeaders).call(this) === 0) {\n      return null;\n    }\n    const {\n      col: startCol\n    } = _classPrivateFieldGet(this, _selectedRange).getTopStartCorner();\n    const {\n      col: endCol\n    } = _classPrivateFieldGet(this, _selectedRange).getBottomEndCorner();\n    const finalEndCol = _classPrivateMethodGet(this, _trimColumnsRange, _trimColumnsRange2).call(this, startCol, endCol);\n    const isRangeTrimmed = endCol !== finalEndCol;\n    return {\n      isRangeTrimmed,\n      startRow: -_classPrivateFieldGet(this, _countColumnHeaders).call(this),\n      startCol,\n      endRow: -1,\n      endCol: finalEndCol\n    };\n  }\n}\n\n/**\n * Returns an object with `rows` and `columns` keys. The arrays contains sorted indexes\n * generated according to the given `ranges` array.\n *\n * @param {Array<{startRow: number, startCol: number, endRow: number, endCol: number}>} ranges The range to process.\n * @returns {{rows: number[], columns: number[]}}\n */\nfunction _trimColumnsRange2(startColumn, endColumn) {\n  return Math.min(endColumn, Math.max(startColumn + _classPrivateFieldGet(this, _columnsLimit).call(this) - 1, startColumn));\n}\nfunction _trimRowsRange2(startRow, endRow) {\n  return Math.min(endRow, Math.max(startRow + _classPrivateFieldGet(this, _rowsLimit).call(this) - 1, startRow));\n}\nexport function normalizeRanges(ranges) {\n  const rows = [];\n  const columns = [];\n  arrayEach(ranges, range => {\n    const minRow = Math.min(range.startRow, range.endRow);\n    const maxRow = Math.max(range.startRow, range.endRow);\n    rangeEach(minRow, maxRow, row => {\n      if (rows.indexOf(row) === -1) {\n        rows.push(row);\n      }\n    });\n    const minColumn = Math.min(range.startCol, range.endCol);\n    const maxColumn = Math.max(range.startCol, range.endCol);\n    rangeEach(minColumn, maxColumn, column => {\n      if (columns.indexOf(column) === -1) {\n        columns.push(column);\n      }\n    });\n  });\n  return {\n    rows,\n    columns\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { stringify, parse } from \"../../3rdparty/SheetClip/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { sanitize } from \"../../helpers/string.mjs\";\nimport { removeContentEditableFromElementAndDeselect, runWithSelectedContendEditableElement, makeElementContentEditableAndSelectItsContent } from \"../../helpers/dom/element.mjs\";\nimport { isSafari } from \"../../helpers/browser.mjs\";\nimport copyItem from \"./contextMenuItem/copy.mjs\";\nimport copyColumnHeadersOnlyItem from \"./contextMenuItem/copyColumnHeadersOnly.mjs\";\nimport copyWithColumnGroupHeadersItem from \"./contextMenuItem/copyWithColumnGroupHeaders.mjs\";\nimport copyWithColumnHeadersItem from \"./contextMenuItem/copyWithColumnHeaders.mjs\";\nimport cutItem from \"./contextMenuItem/cut.mjs\";\nimport PasteEvent from \"./pasteEvent.mjs\";\nimport { CopyableRangesFactory, normalizeRanges } from \"./copyableRanges.mjs\";\nimport { _dataToHTML, htmlToGridSettings } from \"../../utils/parseTable.mjs\";\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nexport const PLUGIN_KEY = 'copyPaste';\nexport const PLUGIN_PRIORITY = 80;\nconst SETTING_KEYS = ['fragmentSelection'];\nconst META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @description\n * Copy, cut, and paste data by using the `CopyPaste` plugin.\n *\n * Control the `CopyPaste` plugin programmatically through its [API methods](#methods).\n *\n * The user can access the copy-paste features through:\n * - The [context menu](@/guides/cell-features/clipboard.md#context-menu).\n * - The [keyboard shortcuts](@/guides/cell-features/clipboard.md#related-keyboard-shortcuts).\n * - The browser's menu bar.\n *\n * Read more:\n * - [Guides: Clipboard](@/guides/cell-features/clipboard.md)\n * - [Configuration options: `copyPaste`](@/api/options.md#copypaste)\n *\n * @example\n * ```js\n * // enable the plugin with the default configuration\n * copyPaste: true,\n *\n * // or, enable the plugin with a custom configuration\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   copyColumnHeaders: true,\n *   copyColumnGroupHeaders: true,\n *   copyColumnHeadersOnly: true,\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\nvar _enableCopyColumnHeaders = /*#__PURE__*/new WeakMap();\nvar _enableCopyColumnGroupHeaders = /*#__PURE__*/new WeakMap();\nvar _enableCopyColumnHeadersOnly = /*#__PURE__*/new WeakMap();\nvar _copyMode = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByCopy = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByCut = /*#__PURE__*/new WeakMap();\nvar _copyableRangesFactory = /*#__PURE__*/new WeakMap();\nvar _ensureClipboardEventsGetTriggered = /*#__PURE__*/new WeakSet();\nvar _countCopiedHeaders = /*#__PURE__*/new WeakSet();\nvar _addContentEditableToHighlightedCell = /*#__PURE__*/new WeakSet();\nvar _removeContentEditableFromHighlightedCell = /*#__PURE__*/new WeakSet();\nvar _onAfterContextMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onAfterSelectionEnd = /*#__PURE__*/new WeakSet();\nvar _onSafariMouseEnter = /*#__PURE__*/new WeakSet();\nvar _onSafariMouseLeave = /*#__PURE__*/new WeakSet();\nvar _onSafariAfterSelection = /*#__PURE__*/new WeakSet();\nexport class CopyPaste extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * `afterSelection` hook callback triggered only on Safari.\n     */\n    _classPrivateMethodInitSpec(this, _onSafariAfterSelection);\n    /**\n     * `document.body` `mouseleave` callback used to work around a Safari's problem with copying/cutting from the\n     * browser's menu.\n     */\n    _classPrivateMethodInitSpec(this, _onSafariMouseLeave);\n    /**\n     * `document.body` `mouseenter` callback used to work around a Safari's problem with copying/cutting from the\n     * browser's menu.\n     */\n    _classPrivateMethodInitSpec(this, _onSafariMouseEnter);\n    /**\n     * Force focus on focusableElement after end of the selection.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterSelectionEnd);\n    /**\n     * Add copy and cut options to the Context Menu.\n     *\n     * @param {object} options Contains default added options of the Context Menu.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterContextMenuDefaultOptions);\n    /**\n     * Remove the `contenteditable` attribute from the highlighted cell and deselect its content.\n     */\n    _classPrivateMethodInitSpec(this, _removeContentEditableFromHighlightedCell);\n    /**\n     * Add the `contenteditable` attribute to the highlighted cell and select its content.\n     */\n    _classPrivateMethodInitSpec(this, _addContentEditableToHighlightedCell);\n    /**\n     * Counts how many column headers will be copied based on the passed range.\n     *\n     * @private\n     * @param {Array<{startRow: number, startCol: number, endRow: number, endCol: number}>} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {{ columnHeadersCount: number }} Returns an object with keys that holds\n     *                                           information with the number of copied headers.\n     */\n    _classPrivateMethodInitSpec(this, _countCopiedHeaders);\n    /**\n     * Ensure that the `copy`/`cut` events get triggered properly in Safari.\n     *\n     * @param {string} eventName Name of the event to get triggered.\n     */\n    _classPrivateMethodInitSpec(this, _ensureClipboardEventsGetTriggered);\n    /**\n     * The maximum number of columns than can be copied to the clipboard.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n    _defineProperty(this, \"columnsLimit\", Infinity);\n    /**\n     * The maximum number of rows than can be copied to the clipboard.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n    _defineProperty(this, \"rowsLimit\", Infinity);\n    /**\n     * When pasting:\n     * - `'overwrite'`: overwrite the currently-selected cells\n     * - `'shift_down'`: move currently-selected cells down\n     * - `'shift_right'`: move currently-selected cells to the right\n     *\n     * @type {string}\n     * @default 'overwrite'\n     */\n    _defineProperty(this, \"pasteMode\", 'overwrite');\n    /**\n     * The UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n    _defineProperty(this, \"uiContainer\", this.hot.rootDocument.body);\n    /**\n     * Shows the \"Copy with headers\" item in the context menu and extends the context menu with the\n     * `'copy_with_column_headers'` option that can be used for creating custom menus arrangements.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    _classPrivateFieldInitSpec(this, _enableCopyColumnHeaders, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Shows the \"Copy with group headers\" item in the context menu and extends the context menu with the\n     * `'copy_with_column_group headers'` option that can be used for creating custom menus arrangements.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    _classPrivateFieldInitSpec(this, _enableCopyColumnGroupHeaders, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Shows the \"Copy headers only\" item in the context menu and extends the context menu with the\n     * `'copy_column_headers_only'` option that can be used for creating custom menus arrangements.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    _classPrivateFieldInitSpec(this, _enableCopyColumnHeadersOnly, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Defines the data range to copy. Possible values:\n     *  * `'cells-only'` Copy selected cells only;\n     *  * `'column-headers-only'` Copy column headers only;\n     *  * `'with-column-group-headers'` Copy cells with all column headers;\n     *  * `'with-column-headers'` Copy cells with column headers;\n     *\n     * @type {'cells-only' | 'column-headers-only' | 'with-column-group-headers' | 'with-column-headers'}\n     */\n    _classPrivateFieldInitSpec(this, _copyMode, {\n      writable: true,\n      value: 'cells-only'\n    });\n    /**\n     * Flag that is used to prevent copying when the native shortcut was not pressed.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByCopy, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Flag that is used to prevent cutting when the native shortcut was not pressed.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByCut, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Class that helps generate copyable ranges based on the current selection for different copy mode\n     * types.\n     *\n     * @type {CopyableRangesFactory}\n     */\n    _classPrivateFieldInitSpec(this, _copyableRangesFactory, {\n      writable: true,\n      value: new CopyableRangesFactory({\n        countRows: () => this.hot.countRows(),\n        countColumns: () => this.hot.countCols(),\n        rowsLimit: () => this.rowsLimit,\n        columnsLimit: () => this.columnsLimit,\n        countColumnHeaders: () => this.hot.view.getColumnHeadersCount()\n      })\n    });\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array<{startRow: number, startCol: number, endRow: number, endCol: number}>}\n     */\n    _defineProperty(this, \"copyableRanges\", []);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get SETTING_KEYS() {\n    return [PLUGIN_KEY, ...SETTING_KEYS];\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the [`CopyPaste`](#copypaste) plugin is enabled.\n   *\n   * This method gets called by Handsontable's [`beforeInit`](@/api/hooks.md#beforeinit) hook.\n   * If it returns `true`, the [`enablePlugin()`](#enableplugin) method gets called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the [`CopyPaste`](#copypaste) plugin for your Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const {\n      [PLUGIN_KEY]: settings\n    } = this.hot.getSettings();\n    if (typeof settings === 'object') {\n      var _settings$pasteMode, _settings$uiContainer;\n      this.pasteMode = (_settings$pasteMode = settings.pasteMode) !== null && _settings$pasteMode !== void 0 ? _settings$pasteMode : this.pasteMode;\n      this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n      this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n      _classPrivateFieldSet(this, _enableCopyColumnHeaders, !!settings.copyColumnHeaders);\n      _classPrivateFieldSet(this, _enableCopyColumnGroupHeaders, !!settings.copyColumnGroupHeaders);\n      _classPrivateFieldSet(this, _enableCopyColumnHeadersOnly, !!settings.copyColumnHeadersOnly);\n      this.uiContainer = (_settings$uiContainer = settings.uiContainer) !== null && _settings$uiContainer !== void 0 ? _settings$uiContainer : this.uiContainer;\n    }\n    this.addHook('afterContextMenuDefaultOptions', options => _classPrivateMethodGet(this, _onAfterContextMenuDefaultOptions, _onAfterContextMenuDefaultOptions2).call(this, options));\n    this.addHook('afterSelectionEnd', () => _classPrivateMethodGet(this, _onAfterSelectionEnd, _onAfterSelectionEnd2).call(this));\n    this.eventManager.addEventListener(this.hot.rootDocument, 'copy', function () {\n      return _this.onCopy(...arguments);\n    });\n    this.eventManager.addEventListener(this.hot.rootDocument, 'cut', function () {\n      return _this.onCut(...arguments);\n    });\n    this.eventManager.addEventListener(this.hot.rootDocument, 'paste', function () {\n      return _this.onPaste(...arguments);\n    });\n\n    // Without this workaround Safari (tested on Safari@16.5.2) does allow copying/cutting from the browser menu.\n    if (isSafari()) {\n      this.eventManager.addEventListener(this.hot.rootDocument.body, 'mouseenter', function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _classPrivateMethodGet(_this, _onSafariMouseEnter, _onSafariMouseEnter2).call(_this, ...args);\n      });\n      this.eventManager.addEventListener(this.hot.rootDocument.body, 'mouseleave', function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return _classPrivateMethodGet(_this, _onSafariMouseLeave, _onSafariMouseLeave2).call(_this, ...args);\n      });\n      this.addHook('afterSelection', () => _classPrivateMethodGet(this, _onSafariAfterSelection, _onSafariAfterSelection2).call(this));\n    }\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the state of the [`CopyPaste`](#copypaste) plugin.\n   *\n   * Gets called when [`updateSettings()`](@/api/core.md#updatesettings)\n   * is invoked with any of the following configuration options:\n   *  - [`copyPaste`](@/api/options.md#copypaste)\n   *  - [`fragmentSelection`](@/api/options.md#fragmentselection)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the [`CopyPaste`](#copypaste) plugin for your Handsontable instance.\n   */\n  disablePlugin() {\n    super.disablePlugin();\n  }\n\n  /**\n   * Copies the contents of the selected cells (and/or their related column headers) to the system clipboard.\n   *\n   * Takes an optional parameter (`copyMode`) that defines the scope of copying:\n   *\n   * | `copyMode` value              | Description                                                     |\n   * | ----------------------------- | --------------------------------------------------------------- |\n   * | `'cells-only'` (default)      | Copy the selected cells                                         |\n   * | `'with-column-headers'`       | - Copy the selected cells<br>- Copy the nearest column headers  |\n   * | `'with-column-group-headers'` | - Copy the selected cells<br>- Copy all related columns headers |\n   * | `'column-headers-only'`       | Copy the nearest column headers (without copying cells)         |\n   *\n   * @param {string} [copyMode='cells-only'] Copy mode.\n   */\n  copy() {\n    let copyMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cells-only';\n    _classPrivateFieldSet(this, _copyMode, copyMode);\n    _classPrivateFieldSet(this, _isTriggeredByCopy, true);\n    _classPrivateMethodGet(this, _ensureClipboardEventsGetTriggered, _ensureClipboardEventsGetTriggered2).call(this, 'copy');\n  }\n\n  /**\n   * Copies the contents of the selected cells.\n   */\n  copyCellsOnly() {\n    this.copy('cells-only');\n  }\n  /**\n   * Copies the contents of column headers that are nearest to the selected cells.\n   */\n  copyColumnHeadersOnly() {\n    this.copy('column-headers-only');\n  }\n  /**\n   * Copies the contents of the selected cells and all their related column headers.\n   */\n  copyWithAllColumnHeaders() {\n    this.copy('with-column-group-headers');\n  }\n  /**\n   * Copies the contents of the selected cells and their nearest column headers.\n   */\n  copyWithColumnHeaders() {\n    this.copy('with-column-headers');\n  }\n\n  /**\n   * Cuts the contents of the selected cells to the system clipboard.\n   */\n  cut() {\n    _classPrivateFieldSet(this, _isTriggeredByCut, true);\n    _classPrivateMethodGet(this, _ensureClipboardEventsGetTriggered, _ensureClipboardEventsGetTriggered2).call(this, 'cut');\n  }\n\n  /**\n   * Converts the contents of multiple ranges (`ranges`) into a single string.\n   *\n   * @param {Array<{startRow: number, startCol: number, endRow: number, endCol: number}>} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n   * @returns {string} A string that will be copied to the clipboard.\n   */\n  getRangedCopyableData(ranges) {\n    return stringify(this.getRangedData(ranges));\n  }\n\n  /**\n   * Converts the contents of multiple ranges (`ranges`) into an array of arrays.\n   *\n   * @param {Array<{startRow: number, startCol: number, endRow: number, endCol: number}>} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n   * @returns {Array[]} An array of arrays that will be copied to the clipboard.\n   */\n  getRangedData(ranges) {\n    const data = [];\n    const {\n      rows,\n      columns\n    } = normalizeRanges(ranges);\n\n    // concatenate all rows and columns data defined in ranges into one copyable string\n    arrayEach(rows, row => {\n      const rowSet = [];\n      arrayEach(columns, column => {\n        if (row < 0) {\n          // `row` as the second argument acts here as the `headerLevel` argument\n          rowSet.push(this.hot.getColHeader(column, row));\n        } else {\n          rowSet.push(this.hot.getCopyableData(row, column));\n        }\n      });\n      data.push(rowSet);\n    });\n    return data;\n  }\n\n  /**\n   * Simulates the paste action.\n   *\n   * For security reasons, modern browsers don't allow reading from the system clipboard.\n   *\n   * @param {string} pastableText The value to paste, as a raw string.\n   * @param {string} [pastableHtml=''] The value to paste, as HTML.\n   */\n  paste() {\n    let pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n    if (!pastableText && !pastableHtml) {\n      return;\n    }\n    const pasteData = new PasteEvent();\n    if (pastableText) {\n      pasteData.clipboardData.setData('text/plain', pastableText);\n    }\n    if (pastableHtml) {\n      pasteData.clipboardData.setData('text/html', pastableHtml);\n    }\n    this.onPaste(pasteData);\n  }\n\n  /**\n   * Prepares copyable text from the cells selection in the invisible textarea.\n   */\n  setCopyableText() {\n    const selectionRange = this.hot.getSelectedRangeLast();\n    if (!selectionRange) {\n      return;\n    }\n    if (selectionRange.isSingleHeader()) {\n      this.copyableRanges = [];\n      return;\n    }\n    _classPrivateFieldGet(this, _copyableRangesFactory).setSelectedRange(selectionRange);\n    const groupedRanges = new Map([['headers', null], ['cells', null]]);\n    if (_classPrivateFieldGet(this, _copyMode) === 'column-headers-only') {\n      groupedRanges.set('headers', _classPrivateFieldGet(this, _copyableRangesFactory).getMostBottomColumnHeadersRange());\n    } else {\n      if (_classPrivateFieldGet(this, _copyMode) === 'with-column-headers') {\n        groupedRanges.set('headers', _classPrivateFieldGet(this, _copyableRangesFactory).getMostBottomColumnHeadersRange());\n      } else if (_classPrivateFieldGet(this, _copyMode) === 'with-column-group-headers') {\n        groupedRanges.set('headers', _classPrivateFieldGet(this, _copyableRangesFactory).getAllColumnHeadersRange());\n      }\n      groupedRanges.set('cells', _classPrivateFieldGet(this, _copyableRangesFactory).getCellsRange());\n    }\n    this.copyableRanges = Array.from(groupedRanges.values()).filter(range => range !== null).map(_ref => {\n      let {\n        startRow,\n        startCol,\n        endRow,\n        endCol\n      } = _ref;\n      return {\n        startRow,\n        startCol,\n        endRow,\n        endCol\n      };\n    });\n    this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n    const cellsRange = groupedRanges.get('cells');\n    if (cellsRange !== null && cellsRange.isRangeTrimmed) {\n      const {\n        startRow,\n        startCol,\n        endRow,\n        endCol\n      } = cellsRange;\n      this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n    }\n  }\n\n  /**\n   * Verifies if editor exists and is open.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  isEditorOpened() {\n    var _this$hot$getActiveEd;\n    return (_this$hot$getActiveEd = this.hot.getActiveEditor()) === null || _this$hot$getActiveEd === void 0 ? void 0 : _this$hot$getActiveEd.isOpened();\n  }\n  /**\n   * Prepares new values to populate them into datasource.\n   *\n   * @private\n   * @param {Array} inputArray An array of the data to populate.\n   * @param {Array} [selection] The selection which indicates from what position the data will be populated.\n   * @returns {Array} Range coordinates after populate data.\n   */\n  populateValues(inputArray) {\n    let selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedRangeLast();\n    if (!inputArray.length) {\n      return;\n    }\n    const populatedRowsLength = inputArray.length;\n    const populatedColumnsLength = inputArray[0].length;\n    const newRows = [];\n    const {\n      row: startRow,\n      col: startColumn\n    } = selection.getTopStartCorner();\n    const {\n      row: endRowFromSelection,\n      col: endColumnFromSelection\n    } = selection.getBottomEndCorner();\n    let visualRowForPopulatedData = startRow;\n    let visualColumnForPopulatedData = startColumn;\n    let lastVisualRow = startRow;\n    let lastVisualColumn = startColumn;\n\n    // We try to populate just all copied data or repeat copied data within a selection. Please keep in mind that we\n    // don't know whether populated data is bigger than selection on start as there are some cells for which values\n    // should be not inserted (it's known right after getting cell meta).\n    while (newRows.length < populatedRowsLength || visualRowForPopulatedData <= endRowFromSelection) {\n      const {\n        skipRowOnPaste,\n        visualRow\n      } = this.hot.getCellMeta(visualRowForPopulatedData, startColumn);\n      visualRowForPopulatedData = visualRow + 1;\n      if (skipRowOnPaste === true) {\n        /* eslint-disable no-continue */\n        continue;\n      }\n      lastVisualRow = visualRow;\n      visualColumnForPopulatedData = startColumn;\n      const newRow = [];\n      const insertedRow = newRows.length % populatedRowsLength;\n      while (newRow.length < populatedColumnsLength || visualColumnForPopulatedData <= endColumnFromSelection) {\n        const {\n          skipColumnOnPaste,\n          visualCol\n        } = this.hot.getCellMeta(startRow, visualColumnForPopulatedData);\n        visualColumnForPopulatedData = visualCol + 1;\n        if (skipColumnOnPaste === true) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n        lastVisualColumn = visualCol;\n        const insertedColumn = newRow.length % populatedColumnsLength;\n        newRow.push(inputArray[insertedRow][insertedColumn]);\n      }\n      newRows.push(newRow);\n    }\n    this.hot.populateFromArray(startRow, startColumn, newRows, undefined, undefined, 'CopyPaste.paste', this.pasteMode);\n    return [startRow, startColumn, lastVisualRow, lastVisualColumn];\n  }\n  /**\n   * `copy` event callback on textarea element.\n   *\n   * @param {Event} event ClipboardEvent.\n   * @private\n   */\n  onCopy(event) {\n    if (!this.hot.isListening() && !_classPrivateFieldGet(this, _isTriggeredByCopy) || this.isEditorOpened()) {\n      return;\n    }\n    this.setCopyableText();\n    _classPrivateFieldSet(this, _isTriggeredByCopy, false);\n    const data = this.getRangedData(this.copyableRanges);\n    const copiedHeadersCount = _classPrivateMethodGet(this, _countCopiedHeaders, _countCopiedHeaders2).call(this, this.copyableRanges);\n    const allowCopying = !!this.hot.runHooks('beforeCopy', data, this.copyableRanges, copiedHeadersCount);\n    if (allowCopying) {\n      const textPlain = stringify(data);\n      if (event && event.clipboardData) {\n        const textHTML = _dataToHTML(data, this.hot.rootDocument);\n        event.clipboardData.setData('text/plain', textPlain);\n        event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n      } else if (typeof ClipboardEvent === 'undefined') {\n        this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n      }\n      this.hot.runHooks('afterCopy', data, this.copyableRanges, copiedHeadersCount);\n    }\n    _classPrivateFieldSet(this, _copyMode, 'cells-only');\n    event.preventDefault();\n  }\n\n  /**\n   * `cut` event callback on textarea element.\n   *\n   * @param {Event} event ClipboardEvent.\n   * @private\n   */\n  onCut(event) {\n    if (!this.hot.isListening() && !_classPrivateFieldGet(this, _isTriggeredByCut) || this.isEditorOpened()) {\n      return;\n    }\n    this.setCopyableText();\n    _classPrivateFieldSet(this, _isTriggeredByCut, false);\n    const rangedData = this.getRangedData(this.copyableRanges);\n    const allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n    if (allowCuttingOut) {\n      const textPlain = stringify(rangedData);\n      if (event && event.clipboardData) {\n        const textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n        event.clipboardData.setData('text/plain', textPlain);\n        event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n      } else if (typeof ClipboardEvent === 'undefined') {\n        this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n      }\n      this.hot.emptySelectedCells('CopyPaste.cut');\n      this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * `paste` event callback on textarea element.\n   *\n   * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n   * @private\n   */\n  onPaste(event) {\n    if (!this.hot.isListening() || this.isEditorOpened() || !this.hot.getSelected()) {\n      return;\n    }\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    let pastedData;\n    if (event && typeof event.clipboardData !== 'undefined') {\n      const textHTML = sanitize(event.clipboardData.getData('text/html'), {\n        ADD_TAGS: ['meta'],\n        ADD_ATTR: ['content'],\n        FORCE_BODY: true\n      });\n      if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n        const parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n        pastedData = parsedConfig.data;\n      } else {\n        pastedData = event.clipboardData.getData('text/plain');\n      }\n    } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n      pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n    }\n    if (typeof pastedData === 'string') {\n      pastedData = parse(pastedData);\n    }\n    if (pastedData === void 0 || pastedData && pastedData.length === 0) {\n      return;\n    }\n    if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n      return;\n    }\n    const [startRow, startColumn, endRow, endColumn] = this.populateValues(pastedData);\n    this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n    this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n  }\n  /**\n   * Destroys the `CopyPaste` plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _ensureClipboardEventsGetTriggered2(eventName) {\n  // Without this workaround Safari (tested on Safari@16.5.2) does not trigger the 'copy' event.\n  if (isSafari()) {\n    const lastSelectedRange = this.hot.getSelectedRangeLast();\n    if (lastSelectedRange) {\n      const {\n        row: highlightRow,\n        col: highlightColumn\n      } = lastSelectedRange.highlight;\n      const currentlySelectedCell = this.hot.getCell(highlightRow, highlightColumn, true);\n      if (currentlySelectedCell) {\n        runWithSelectedContendEditableElement(currentlySelectedCell, () => {\n          this.hot.rootDocument.execCommand(eventName);\n        });\n      }\n    }\n  } else {\n    this.hot.rootDocument.execCommand(eventName);\n  }\n}\nfunction _countCopiedHeaders2(ranges) {\n  const {\n    rows\n  } = normalizeRanges(ranges);\n  let columnHeadersCount = 0;\n  for (let row = 0; row < rows.length; row++) {\n    if (rows[row] >= 0) {\n      break;\n    }\n    columnHeadersCount += 1;\n  }\n  return {\n    columnHeadersCount\n  };\n}\nfunction _addContentEditableToHighlightedCell2() {\n  if (this.hot.isListening()) {\n    const lastSelectedRange = this.hot.getSelectedRangeLast();\n    if (lastSelectedRange) {\n      const {\n        row: highlightRow,\n        col: highlightColumn\n      } = lastSelectedRange.highlight;\n      const currentlySelectedCell = this.hot.getCell(highlightRow, highlightColumn, true);\n      if (currentlySelectedCell) {\n        makeElementContentEditableAndSelectItsContent(currentlySelectedCell);\n      }\n    }\n  }\n}\nfunction _removeContentEditableFromHighlightedCell2() {\n  // If the instance is not listening, the workaround is not needed.\n  if (this.hot.isListening()) {\n    const lastSelectedRange = this.hot.getSelectedRangeLast();\n    if (lastSelectedRange) {\n      const {\n        row: highlightRow,\n        col: highlightColumn\n      } = lastSelectedRange.highlight;\n      const currentlySelectedCell = this.hot.getCell(highlightRow, highlightColumn, true);\n      if (currentlySelectedCell !== null && currentlySelectedCell !== void 0 && currentlySelectedCell.hasAttribute('contenteditable')) {\n        removeContentEditableFromElementAndDeselect(currentlySelectedCell);\n      }\n    }\n  }\n}\nfunction _onAfterContextMenuDefaultOptions2(options) {\n  options.items.push({\n    name: '---------'\n  }, copyItem(this));\n  if (_classPrivateFieldGet(this, _enableCopyColumnHeaders)) {\n    options.items.push(copyWithColumnHeadersItem(this));\n  }\n  if (_classPrivateFieldGet(this, _enableCopyColumnGroupHeaders)) {\n    options.items.push(copyWithColumnGroupHeadersItem(this));\n  }\n  if (_classPrivateFieldGet(this, _enableCopyColumnHeadersOnly)) {\n    options.items.push(copyColumnHeadersOnlyItem(this));\n  }\n  options.items.push(cutItem(this));\n}\nfunction _onAfterSelectionEnd2() {\n  if (this.isEditorOpened()) {\n    return;\n  }\n  if (this.hot.getSettings().fragmentSelection) {\n    return;\n  }\n  this.setCopyableText();\n}\nfunction _onSafariMouseEnter2() {\n  _classPrivateMethodGet(this, _removeContentEditableFromHighlightedCell, _removeContentEditableFromHighlightedCell2).call(this);\n}\nfunction _onSafariMouseLeave2() {\n  _classPrivateMethodGet(this, _addContentEditableToHighlightedCell, _addContentEditableToHighlightedCell2).call(this);\n}\nfunction _onSafariAfterSelection2() {\n  _classPrivateMethodGet(this, _removeContentEditableFromHighlightedCell, _removeContentEditableFromHighlightedCell2).call(this);\n}", "import { hasOwnProperty, isObject } from \"../../helpers/object.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\n/**\n * Create separated id for borders for each cell.\n *\n * @param {number} row Visual row index.\n * @param {number} col Visual column index.\n * @returns {string}\n */\nexport function createId(row, col) {\n  return `border_row${row}col${col}`;\n}\n\n/**\n * Create default single border for each position (top/right/bottom/left).\n *\n * @returns {object} `{{width: number, color: string}}`.\n */\nexport function createDefaultCustomBorder() {\n  return {\n    width: 1,\n    color: '#000'\n  };\n}\n\n/**\n * Create default object for empty border.\n *\n * @returns {object} `{{hide: boolean}}`.\n */\nexport function createSingleEmptyBorder() {\n  return {\n    hide: true\n  };\n}\n\n/**\n * Create default Handsontable border object.\n *\n * @returns {object} `{{width: number, color: string, cornerVisible: boolean}}`.\n */\nexport function createDefaultHtBorder() {\n  return {\n    width: 1,\n    color: '#000',\n    cornerVisible: false\n  };\n}\n\n/**\n * Normalizes the border object to be compatible with the Border API from the Walkontable.\n * The function translates the \"left\"/\"right\" properties to \"start\"/\"end\" prop names.\n *\n * @param {object} border The configuration object of the border.\n * @returns {object}\n */\nexport function normalizeBorder(border) {\n  if (isDefined(border.start) || isDefined(border.left)) {\n    var _border$start;\n    border.start = (_border$start = border.start) !== null && _border$start !== void 0 ? _border$start : border.left;\n  }\n  if (isDefined(border.end) || isDefined(border.right)) {\n    var _border$end;\n    border.end = (_border$end = border.end) !== null && _border$end !== void 0 ? _border$end : border.right;\n  }\n  delete border.left;\n  delete border.right;\n  return border;\n}\n\n/**\n * Denormalizes the border object to be backward compatible with the previous version of the CustomBorders\n * plugin API. The function extends the border configuration object for the backward compatible \"left\"/\"right\"\n * properties.\n *\n * @param {object} border The configuration object of the border.\n * @returns {object}\n */\nexport function denormalizeBorder(border) {\n  if (isDefined(border.start)) {\n    border.left = border.start;\n  }\n  if (isDefined(border.end)) {\n    border.right = border.end;\n  }\n  return border;\n}\n\n/**\n * Prepare empty border for each cell with all custom borders hidden.\n *\n * @param {number} row Visual row index.\n * @param {number} col Visual column index.\n * @returns {{id: string, border: any, row: number, col: number, top: {hide: boolean}, bottom: {hide: boolean}, start: {hide: boolean}, end: {hide: boolean}}} Returns border configuration containing visual indexes.\n */\nexport function createEmptyBorders(row, col) {\n  return {\n    id: createId(row, col),\n    border: createDefaultHtBorder(),\n    row,\n    col,\n    top: createSingleEmptyBorder(),\n    bottom: createSingleEmptyBorder(),\n    start: createSingleEmptyBorder(),\n    end: createSingleEmptyBorder()\n  };\n}\n\n/**\n * @param {object} defaultBorder The default border object.\n * @param {object} customBorder The border object with custom settings.\n * @returns {object}\n */\nexport function extendDefaultBorder(defaultBorder, customBorder) {\n  if (hasOwnProperty(customBorder, 'border') && customBorder.border) {\n    defaultBorder.border = customBorder.border;\n  }\n  if (hasOwnProperty(customBorder, 'top') && isDefined(customBorder.top)) {\n    if (customBorder.top) {\n      if (!isObject(customBorder.top)) {\n        customBorder.top = createDefaultCustomBorder();\n      }\n      defaultBorder.top = customBorder.top;\n    } else {\n      customBorder.top = createSingleEmptyBorder();\n      defaultBorder.top = customBorder.top;\n    }\n  }\n  if (hasOwnProperty(customBorder, 'bottom') && isDefined(customBorder.bottom)) {\n    if (customBorder.bottom) {\n      if (!isObject(customBorder.bottom)) {\n        customBorder.bottom = createDefaultCustomBorder();\n      }\n      defaultBorder.bottom = customBorder.bottom;\n    } else {\n      customBorder.bottom = createSingleEmptyBorder();\n      defaultBorder.bottom = customBorder.bottom;\n    }\n  }\n  if (hasOwnProperty(customBorder, 'start') && isDefined(customBorder.start)) {\n    if (customBorder.start) {\n      if (!isObject(customBorder.start)) {\n        customBorder.start = createDefaultCustomBorder();\n      }\n      defaultBorder.start = customBorder.start;\n    } else {\n      customBorder.start = createSingleEmptyBorder();\n      defaultBorder.start = customBorder.start;\n    }\n  }\n  if (hasOwnProperty(customBorder, 'end') && isDefined(customBorder.end)) {\n    if (customBorder.end) {\n      if (!isObject(customBorder.end)) {\n        customBorder.end = createDefaultCustomBorder();\n      }\n      defaultBorder.end = customBorder.end;\n    } else {\n      customBorder.end = createSingleEmptyBorder();\n      defaultBorder.end = customBorder.end;\n    }\n  }\n  return defaultBorder;\n}\n\n/**\n * Check if selection has border.\n *\n * @param {Core} hot The Handsontable instance.\n * @param {string} [direction] If set ('left' or 'top') then only the specified border side will be checked.\n * @returns {boolean}\n */\nexport function checkSelectionBorders(hot, direction) {\n  let atLeastOneHasBorder = false;\n  arrayEach(hot.getSelectedRange(), range => {\n    range.forAll((r, c) => {\n      if (r < 0 || c < 0) {\n        return;\n      }\n      const metaBorders = hot.getCellMeta(r, c).borders;\n      if (metaBorders) {\n        if (direction) {\n          if (!hasOwnProperty(metaBorders[direction], 'hide') || metaBorders[direction].hide === false) {\n            atLeastOneHasBorder = true;\n            return false; // breaks forAll\n          }\n        } else {\n          atLeastOneHasBorder = true;\n          return false; // breaks forAll\n        }\n      }\n    });\n  });\n\n  return atLeastOneHasBorder;\n}\n\n/**\n * Mark label in contextMenu as selected.\n *\n * @param {string} label The label text.\n * @returns {string}\n */\nexport function markSelected(label) {\n  return `<span class=\"selected\">${String.fromCharCode(10003)}</span>${label}`; // workaround for https://github.com/handsontable/handsontable/issues/1946\n}\n\n/**\n * Checks if in the borders config there are defined \"left\" or \"right\" border properties.\n *\n * @param {object[]} borders The custom border plugin's options.\n * @returns {boolean}\n */\nexport function hasLeftRightTypeOptions(borders) {\n  return borders.some(border => isDefined(border.left) || isDefined(border.right));\n}\n\n/**\n * Checks if in the borders config there are defined \"start\" or \"end\" border properties.\n *\n * @param {object[]} borders The custom border plugin's options.\n * @returns {boolean}\n */\nexport function hasStartEndTypeOptions(borders) {\n  return borders.some(border => isDefined(border.start) || isDefined(border.end));\n}\nconst physicalToInlinePropNames = new Map([['left', 'start'], ['right', 'end']]);\n\n/**\n * Translates the physical horizontal direction to logical ones. If not known property name is\n * passed it will be returned without modification.\n *\n * @param {string} propName The physical direction property name (\"left\" or \"right\").\n * @returns {string}\n */\nexport function toInlinePropName(propName) {\n  var _physicalToInlineProp;\n  return (_physicalToInlineProp = physicalToInlinePropNames.get(propName)) !== null && _physicalToInlineProp !== void 0 ? _physicalToInlineProp : propName;\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\nexport default function bottom(customBordersPlugin) {\n  return {\n    key: 'borders:bottom',\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_BOTTOM);\n      const hasBorder = checkSelectionBorders(this, 'bottom');\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n      return label;\n    },\n    callback(key, selected) {\n      const hasBorder = checkSelectionBorders(this, 'bottom');\n      customBordersPlugin.prepareBorder(selected, 'bottom', hasBorder);\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\nexport default function left(customBordersPlugin) {\n  const borderDirection = customBordersPlugin.hot.isRtl() ? 'end' : 'start';\n  return {\n    key: 'borders:left',\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_LEFT);\n      const hasBorder = checkSelectionBorders(this, borderDirection);\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n      return label;\n    },\n    callback(key, selected) {\n      const hasBorder = checkSelectionBorders(this, borderDirection);\n      customBordersPlugin.prepareBorder(selected, borderDirection, hasBorder);\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\nexport default function noBorders(customBordersPlugin) {\n  return {\n    key: 'borders:no_borders',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_BORDERS);\n    },\n    callback(key, selected) {\n      customBordersPlugin.prepareBorder(selected, 'noBorders');\n    },\n    disabled() {\n      return !checkSelectionBorders(this);\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\nexport default function right(customBordersPlugin) {\n  const borderDirection = customBordersPlugin.hot.isRtl() ? 'start' : 'end';\n  return {\n    key: 'borders:right',\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_RIGHT);\n      const hasBorder = checkSelectionBorders(this, borderDirection);\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n      return label;\n    },\n    callback(key, selected) {\n      const hasBorder = checkSelectionBorders(this, borderDirection);\n      customBordersPlugin.prepareBorder(selected, borderDirection, hasBorder);\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\nexport default function top(customBordersPlugin) {\n  return {\n    key: 'borders:top',\n    name() {\n      let label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_TOP);\n      const hasBorder = checkSelectionBorders(this, 'top');\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n      return label;\n    },\n    callback(key, selected) {\n      const hasBorder = checkSelectionBorders(this, 'top');\n      customBordersPlugin.prepareBorder(selected, 'top', hasBorder);\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, deepClone } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { top as menuItemTop, bottom as menuItemBottom, left as menuItemLeft, right as menuItemRight, noBorders as menuItemNoBorders } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder, hasLeftRightTypeOptions, hasStartEndTypeOptions, toInlinePropName, normalizeBorder, denormalizeBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport const PLUGIN_KEY = 'customBorders';\nexport const PLUGIN_PRIORITY = 90;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin CustomBorders\n * @class CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [`customBorders` configuration option](@/api/options.md#customBorders) or go to\n * [Custom cell borders demo](@/guides/cell-features/formatting-cells.md#custom-cell-borders) for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    start: {},\n *    end: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     start: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     end: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\nvar _onAfterContextMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onAfterInit = /*#__PURE__*/new WeakSet();\nexport class CustomBorders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * `afterInit` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterInit);\n    /**\n     * Add border options to context menu.\n     *\n     * @param {object} defaultOptions Context menu items.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterContextMenuDefaultOptions);\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n    _defineProperty(this, \"savedBorders\", []);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('afterContextMenuDefaultOptions', options => _classPrivateMethodGet(this, _onAfterContextMenuDefaultOptions, _onAfterContextMenuDefaultOptions2).call(this, options));\n    this.addHook('init', () => _classPrivateMethodGet(this, _onAfterInit, _onAfterInit2).call(this));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hideBorders();\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`customBorders`](@/api/options.md#customborders)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    this.changeBorderSettings();\n    super.updatePlugin();\n  }\n\n  /**\n   * Set custom borders.\n   *\n   * @example\n   * ```js\n   * const customBordersPlugin = hot.getPlugin('customBorders');\n   *\n   * // Using an array of arrays (produced by `.getSelected()` method).\n   * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {start: {width: 2, color: 'blue'}});\n   *\n   * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n   * //  Selecting a cell range.\n   * hot.selectCell(0, 0, 2, 2);\n   * // Returning selected cells' range with the getSelectedRange method.\n   * customBordersPlugin.setBorders(hot.getSelectedRange(), {start: {hide: false, width: 2, color: 'blue'}});\n   * ```\n   *\n   * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n   * @param {object} borderObject Object with `top`, `right`, `bottom` and `start` properties.\n   */\n  setBorders(selectionRanges, borderObject) {\n    let borderKeys = ['top', 'bottom', 'start', 'end'];\n    let normBorder = null;\n    if (borderObject) {\n      this.checkSettingsCohesion([borderObject]);\n      borderKeys = Object.keys(borderObject);\n      normBorder = normalizeBorder(borderObject);\n    }\n    const selectionType = detectSelectionType(selectionRanges);\n    const selectionSchemaNormalizer = normalizeSelectionFactory(selectionType, {\n      createCellCoords: this.hot._createCellCoords.bind(this.hot),\n      createCellRange: this.hot._createCellRange.bind(this.hot)\n    });\n    arrayEach(selectionRanges, selection => {\n      selectionSchemaNormalizer(selection).forAll((row, col) => {\n        arrayEach(borderKeys, borderKey => {\n          this.prepareBorderFromCustomAdded(row, col, normBorder, toInlinePropName(borderKey));\n        });\n      });\n    });\n\n    /*\n    The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n    render, because that is the default for the TableView class.\n     The re-render is needed for borders on cells that did not have a border before.\n    The way this call works is that it calls Table.refreshSelections, which calls\n    Selection.getBorder, which creates a new instance of Border.\n     Seems wise to keep this single-direction flow of creating new Borders\n    */\n    this.hot.view.render();\n  }\n\n  /**\n   * Get custom borders.\n   *\n   * @example\n   * ```js\n   * const customBordersPlugin = hot.getPlugin('customBorders');\n   *\n   * // Using an array of arrays (produced by `.getSelected()` method).\n   * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n   * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n   * customBordersPlugin.getBorders(hot.getSelectedRange());\n   * // Using without param - return all customBorders.\n   * customBordersPlugin.getBorders();\n   * ```\n   *\n   * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n   * @returns {object[]} Returns array of border objects.\n   */\n  getBorders(selectionRanges) {\n    if (!Array.isArray(selectionRanges)) {\n      return this.savedBorders;\n    }\n    const selectionType = detectSelectionType(selectionRanges);\n    const selectionSchemaNormalizer = normalizeSelectionFactory(selectionType, {\n      createCellCoords: this.hot._createCellCoords.bind(this.hot),\n      createCellRange: this.hot._createCellRange.bind(this.hot)\n    });\n    const selectedBorders = [];\n    arrayEach(selectionRanges, selection => {\n      selectionSchemaNormalizer(selection).forAll((row, col) => {\n        arrayEach(this.savedBorders, border => {\n          if (border.row === row && border.col === col) {\n            selectedBorders.push(denormalizeBorder(border));\n          }\n        });\n      });\n    });\n    return selectedBorders;\n  }\n\n  /**\n   * Clear custom borders.\n   *\n   * @example\n   * ```js\n   * const customBordersPlugin = hot.getPlugin('customBorders');\n   *\n   * // Using an array of arrays (produced by `.getSelected()` method).\n   * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n   * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n   * customBordersPlugin.clearBorders(hot.getSelectedRange());\n   * // Using without param - clear all customBorders.\n   * customBordersPlugin.clearBorders();\n   * ```\n   *\n   * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n   */\n  clearBorders(selectionRanges) {\n    if (selectionRanges) {\n      this.setBorders(selectionRanges);\n    } else {\n      arrayEach(this.savedBorders, border => {\n        this.clearBordersFromSelectionSettings(border.id);\n        this.clearNullCellRange();\n        this.hot.removeCellMeta(border.row, border.col, 'borders');\n      });\n      this.savedBorders.length = 0;\n    }\n  }\n\n  /**\n   * Insert WalkontableSelection instance into Walkontable settings.\n   *\n   * @private\n   * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n   * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n   */\n  insertBorderIntoSettings(border, place) {\n    const hasSavedBorders = this.checkSavedBorders(border);\n    if (!hasSavedBorders) {\n      this.savedBorders.push(border);\n    }\n    const visualCellRange = this.hot._createCellRange(this.hot._createCellCoords(border.row, border.col));\n    const hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n    if (!hasCustomSelections) {\n      this.hot.selection.highlight.addCustomSelection({\n        border,\n        visualCellRange\n      });\n    }\n  }\n\n  /**\n   * Prepare borders from setting (single cell).\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {object} borderDescriptor Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n   * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n   */\n  prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n    const nrOfRows = this.hot.countRows();\n    const nrOfColumns = this.hot.countCols();\n    if (row >= nrOfRows || column >= nrOfColumns) {\n      return;\n    }\n    let border = createEmptyBorders(row, column);\n    if (borderDescriptor) {\n      border = extendDefaultBorder(border, borderDescriptor);\n      arrayEach(this.hot.selection.highlight.customSelections, customSelection => {\n        if (border.id === customSelection.settings.id) {\n          Object.assign(customSelection.settings, borderDescriptor);\n          border.id = customSelection.settings.id;\n          border.top = customSelection.settings.top;\n          border.bottom = customSelection.settings.bottom;\n          border.start = customSelection.settings.start;\n          border.end = customSelection.settings.end;\n          return false; // breaks forAll\n        }\n      });\n    }\n\n    this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(border));\n    this.insertBorderIntoSettings(border, place);\n  }\n\n  /**\n   * Prepare borders from setting (object).\n   *\n   * @private\n   * @param {object} range {CellRange} The CellRange object.\n   * @param {object} customBorder Object with `start`, `end`, `top` and `bottom` properties.\n   */\n  prepareBorderFromCustomAddedRange(range, customBorder) {\n    const lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n    const lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n    rangeEach(range.from.row, lastRowIndex, rowIndex => {\n      rangeEach(range.from.col, lastColumnIndex, colIndex => {\n        const border = createEmptyBorders(rowIndex, colIndex);\n        let add = 0;\n        if (rowIndex === range.from.row) {\n          if (hasOwnProperty(customBorder, 'top')) {\n            add += 1;\n            border.top = customBorder.top;\n          }\n        }\n\n        // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n        if (rowIndex === range.to.row) {\n          if (hasOwnProperty(customBorder, 'bottom')) {\n            add += 1;\n            border.bottom = customBorder.bottom;\n          }\n        }\n        if (colIndex === range.from.col) {\n          if (hasOwnProperty(customBorder, 'start')) {\n            add += 1;\n            border.start = customBorder.start;\n          }\n        }\n\n        // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n        if (colIndex === range.to.col) {\n          if (hasOwnProperty(customBorder, 'end')) {\n            add += 1;\n            border.end = customBorder.end;\n          }\n        }\n        if (add > 0) {\n          this.hot.setCellMeta(rowIndex, colIndex, 'borders', denormalizeBorder(border));\n          this.insertBorderIntoSettings(border);\n        } else {\n          // TODO sometimes it enters here. Why?\n        }\n      });\n    });\n  }\n\n  /**\n   * Remove border (triggered from context menu).\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   */\n  removeAllBorders(row, column) {\n    const borderId = createId(row, column);\n    this.spliceBorder(borderId);\n    this.clearBordersFromSelectionSettings(borderId);\n    this.clearNullCellRange();\n    this.hot.removeCellMeta(row, column, 'borders');\n  }\n\n  /**\n   * Set borders for each cell re. To border position.\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n   * @param {boolean} remove True when remove borders, and false when add borders.\n   */\n  setBorder(row, column, place, remove) {\n    let bordersMeta = this.hot.getCellMeta(row, column).borders;\n    if (!bordersMeta || bordersMeta.border === undefined) {\n      bordersMeta = createEmptyBorders(row, column);\n    } else {\n      bordersMeta = normalizeBorder(bordersMeta);\n    }\n    if (remove) {\n      bordersMeta[place] = createSingleEmptyBorder();\n      const hideCount = this.countHide(bordersMeta);\n      if (hideCount === 4) {\n        this.removeAllBorders(row, column);\n      } else {\n        const customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n        if (!customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n        this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n      }\n    } else {\n      bordersMeta[place] = createDefaultCustomBorder();\n      const customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n      if (!customSelectionsChecker) {\n        this.insertBorderIntoSettings(bordersMeta);\n      }\n      this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n    }\n  }\n\n  /**\n   * Prepare borders based on cell and border position.\n   *\n   * @private\n   * @param {CellRange[]} selected An array of CellRange objects.\n   * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n   * @param {boolean} remove True when remove borders, and false when add borders.\n   */\n  prepareBorder(selected, place, remove) {\n    arrayEach(selected, _ref => {\n      let {\n        start,\n        end\n      } = _ref;\n      if (start.row === end.row && start.col === end.col) {\n        if (place === 'noBorders') {\n          this.removeAllBorders(start.row, start.col);\n        } else {\n          this.setBorder(start.row, start.col, place, remove);\n        }\n      } else {\n        switch (place) {\n          case 'noBorders':\n            rangeEach(start.col, end.col, colIndex => {\n              rangeEach(start.row, end.row, rowIndex => {\n                this.removeAllBorders(rowIndex, colIndex);\n              });\n            });\n            break;\n          case 'top':\n            rangeEach(start.col, end.col, topCol => {\n              this.setBorder(start.row, topCol, place, remove);\n            });\n            break;\n          case 'bottom':\n            rangeEach(start.col, end.col, bottomCol => {\n              this.setBorder(end.row, bottomCol, place, remove);\n            });\n            break;\n          case 'start':\n            rangeEach(start.row, end.row, rowStart => {\n              this.setBorder(rowStart, start.col, place, remove);\n            });\n            break;\n          case 'end':\n            rangeEach(start.row, end.row, rowEnd => {\n              this.setBorder(rowEnd, end.col, place, remove);\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }\n\n  /**\n   * Create borders from settings.\n   *\n   * @private\n   * @param {Array} customBorders Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n   */\n  createCustomBorders(customBorders) {\n    arrayEach(customBorders, customBorder => {\n      const normCustomBorder = normalizeBorder(customBorder);\n      if (customBorder.range) {\n        this.prepareBorderFromCustomAddedRange(customBorder.range, normCustomBorder);\n      } else {\n        this.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, normCustomBorder);\n      }\n    });\n  }\n\n  /**\n   * Count hide property in border object.\n   *\n   * @private\n   * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n   *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n   * @returns {number}\n   */\n  countHide(border) {\n    const {\n      top,\n      bottom,\n      start,\n      end\n    } = border;\n    const values = [top, bottom, start, end];\n    return arrayReduce(values, (accumulator, value) => {\n      let result = accumulator;\n      if (value && value.hide) {\n        result += 1;\n      }\n      return result;\n    }, 0);\n  }\n\n  /**\n   * Clear borders settings from custom selections.\n   *\n   * @private\n   * @param {string} borderId Border id name as string.\n   */\n  clearBordersFromSelectionSettings(borderId) {\n    const index = arrayMap(this.hot.selection.highlight.customSelections, customSelection => customSelection.settings.id).indexOf(borderId);\n    if (index > -1) {\n      this.hot.selection.highlight.customSelections[index].clear();\n    }\n  }\n\n  /**\n   * Clear cellRange with null value.\n   *\n   * @private\n   */\n  clearNullCellRange() {\n    arrayEach(this.hot.selection.highlight.customSelections, (customSelection, index) => {\n      if (customSelection.cellRange === null) {\n        this.hot.selection.highlight.customSelections[index].destroy();\n        this.hot.selection.highlight.customSelections.splice(index, 1);\n        return false; // breaks forAll\n      }\n    });\n  }\n\n  /**\n   * Hide custom borders.\n   *\n   * @private\n   */\n  hideBorders() {\n    arrayEach(this.savedBorders, border => {\n      this.clearBordersFromSelectionSettings(border.id);\n      this.clearNullCellRange();\n    });\n  }\n\n  /**\n   * Splice border from savedBorders.\n   *\n   * @private\n   * @param {string} borderId Border id name as string.\n   */\n  spliceBorder(borderId) {\n    const index = arrayMap(this.savedBorders, border => border.id).indexOf(borderId);\n    if (index > -1) {\n      this.savedBorders.splice(index, 1);\n    }\n  }\n\n  /**\n   * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n   *\n   * @private\n   * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n   *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n   *\n   * @returns {boolean}\n   */\n  checkSavedBorders(border) {\n    let check = false;\n    const hideCount = this.countHide(border);\n    if (hideCount === 4) {\n      this.spliceBorder(border.id);\n      check = true;\n    } else {\n      arrayEach(this.savedBorders, (savedBorder, index) => {\n        if (border.id === savedBorder.id) {\n          this.savedBorders[index] = border;\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n    }\n\n    return check;\n  }\n\n  /**\n   * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n   *\n   * @private\n   * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n   *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n   * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n   * @param {boolean} remove True when remove borders, and false when add borders.\n   *\n   * @returns {boolean}\n   */\n  checkCustomSelectionsFromContextMenu(border, place, remove) {\n    let check = false;\n    arrayEach(this.hot.selection.highlight.customSelections, customSelection => {\n      if (border.id === customSelection.settings.id) {\n        const borders = this.hot.view._wt.selectionManager.getBorderInstances(customSelection);\n        arrayEach(borders, borderObject => {\n          borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n        });\n\n        check = true;\n        return false; // breaks forAll\n      }\n    });\n\n    return check;\n  }\n\n  /**\n   * Check if an border already exists in the customSelections, and if true reset cellRange.\n   *\n   * @private\n   * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n   *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n   * @param {CellRange} cellRange The selection range to check.\n   * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n   * @returns {boolean}\n   */\n  checkCustomSelections(border, cellRange, place) {\n    const hideCount = this.countHide(border);\n    let check = false;\n    if (hideCount === 4) {\n      this.removeAllBorders(border.row, border.col);\n      check = true;\n    } else {\n      arrayEach(this.hot.selection.highlight.customSelections, customSelection => {\n        if (border.id === customSelection.settings.id) {\n          customSelection.visualCellRange = cellRange;\n          customSelection.commit();\n          if (place) {\n            const borders = this.hot.view._wt.selectionManager.getBorderInstances(customSelection);\n            arrayEach(borders, borderObject => {\n              borderObject.changeBorderStyle(place, border);\n            });\n          }\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n    }\n\n    return check;\n  }\n\n  /**\n   * Change borders from settings.\n   *\n   * @private\n   */\n  changeBorderSettings() {\n    const customBorders = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(customBorders)) {\n      const bordersClone = deepClone(customBorders);\n      this.checkSettingsCohesion(bordersClone);\n      if (!bordersClone.length) {\n        this.savedBorders = bordersClone;\n      }\n      this.createCustomBorders(bordersClone);\n    } else if (customBorders !== undefined) {\n      this.createCustomBorders(this.savedBorders);\n    }\n  }\n\n  /**\n   * Checks the settings cohesion. The properties such like \"left\"/\"right\" are supported only\n   * in the LTR mode and the \"left\"/\"right\" options can not be used together with \"start\"/\"end\" properties.\n   *\n   * @private\n   * @param {object[]} customBorders The user defined custom border objects array.\n   */\n  checkSettingsCohesion(customBorders) {\n    const hasLeftOrRight = hasLeftRightTypeOptions(customBorders);\n    const hasStartOrEnd = hasStartEndTypeOptions(customBorders);\n    if (hasLeftOrRight && hasStartOrEnd) {\n      throw new Error('The \"left\"/\"right\" and \"start\"/\"end\" options should not be used together. ' + 'Please use only the option \"start\"/\"end\".');\n    }\n    if (this.hot.isRtl() && hasLeftOrRight) {\n      throw new Error('The \"left\"/\"right\" properties are not supported for RTL. Please use option \"start\"/\"end\".');\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onAfterContextMenuDefaultOptions2(defaultOptions) {\n  if (!this.hot.getSettings()[PLUGIN_KEY]) {\n    return;\n  }\n  defaultOptions.items.push({\n    name: '---------'\n  }, {\n    key: 'borders',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader()) {\n        return true;\n      }\n      return this.selection.isSelectedByCorner();\n    },\n    submenu: {\n      items: [menuItemTop(this), menuItemRight(this), menuItemBottom(this), menuItemLeft(this), menuItemNoBorders(this)]\n    }\n  });\n}\nfunction _onAfterInit2() {\n  this.changeBorderSettings();\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { isRightClick } from \"../../helpers/dom/event.mjs\";\nimport { getParentWindow } from \"../../helpers/dom/element.mjs\";\nexport const PLUGIN_KEY = 'dragToScroll';\nexport const PLUGIN_PRIORITY = 100;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @description\n * Plugin used to scroll Handsontable by selecting a cell and dragging outside of the visible viewport.\n *\n *\n * @class DragToScroll\n * @plugin DragToScroll\n */\nvar _setupListening = /*#__PURE__*/new WeakSet();\nexport class DragToScroll extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On after on cell/cellCorner mouse down listener.\n     *\n     * @param {MouseEvent} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _setupListening);\n    /**\n     * Size of an element and its position relative to the viewport,\n     * e.g. {bottom: 449, height: 441, left: 8, right: 814, top: 8, width: 806, x: 8, y:8}.\n     *\n     * @type {DOMRect}\n     */\n    _defineProperty(this, \"boundaries\", null);\n    /**\n     * Callback function.\n     *\n     * @private\n     * @type {Function}\n     */\n    _defineProperty(this, \"callback\", null);\n    /**\n     * Flag indicates mouseDown/mouseUp.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _defineProperty(this, \"listening\", false);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DragToScroll#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('afterOnCellMouseDown', event => _classPrivateMethodGet(this, _setupListening, _setupListening2).call(this, event));\n    this.addHook('afterOnCellCornerMouseDown', event => _classPrivateMethodGet(this, _setupListening, _setupListening2).call(this, event));\n    this.registerEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dragToScroll`](@/api/options.md#dragtoscroll)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.unregisterEvents();\n    super.disablePlugin();\n  }\n\n  /**\n   * Sets the value of the visible element.\n   *\n   * @param {DOMRect} boundaries An object with coordinates compatible with DOMRect.\n   */\n  setBoundaries(boundaries) {\n    this.boundaries = boundaries;\n  }\n\n  /**\n   * Changes callback function.\n   *\n   * @param {Function} callback The callback function.\n   */\n  setCallback(callback) {\n    this.callback = callback;\n  }\n\n  /**\n   * Checks if the mouse position (X, Y) is outside of the viewport and fires a callback with calculated X an Y diffs\n   * between passed boundaries.\n   *\n   * @param {number} x Mouse X coordinate to check.\n   * @param {number} y Mouse Y coordinate to check.\n   */\n  check(x, y) {\n    let diffX = 0;\n    let diffY = 0;\n    if (y < this.boundaries.top) {\n      // y is less than top\n      diffY = y - this.boundaries.top;\n    } else if (y > this.boundaries.bottom) {\n      // y is more than bottom\n      diffY = y - this.boundaries.bottom;\n    }\n    if (x < this.boundaries.left) {\n      // x is less than left\n      diffX = x - this.boundaries.left;\n    } else if (x > this.boundaries.right) {\n      // x is more than right\n      diffX = x - this.boundaries.right;\n    }\n    this.callback(diffX, diffY);\n  }\n\n  /**\n   * Enables listening on `mousemove` event.\n   *\n   * @private\n   */\n  listen() {\n    this.listening = true;\n  }\n\n  /**\n   * Disables listening on `mousemove` event.\n   *\n   * @private\n   */\n  unlisten() {\n    this.listening = false;\n  }\n\n  /**\n   * Returns current state of listening.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  isListening() {\n    return this.listening;\n  }\n\n  /**\n   * Registers dom listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      rootWindow\n    } = this.hot;\n    let frame = rootWindow;\n    while (frame) {\n      this.eventManager.addEventListener(frame.document, 'contextmenu', () => this.unlisten());\n      this.eventManager.addEventListener(frame.document, 'mouseup', () => this.unlisten());\n      this.eventManager.addEventListener(frame.document, 'mousemove', event => this.onMouseMove(event));\n      frame = getParentWindow(frame);\n    }\n  }\n\n  /**\n   * Unbinds the events used by the plugin.\n   *\n   * @private\n   */\n  unregisterEvents() {\n    this.eventManager.clear();\n  }\n  /**\n   * 'mouseMove' event callback.\n   *\n   * @private\n   * @param {MouseEvent} event `mousemove` event properties.\n   */\n  onMouseMove(event) {\n    if (!this.isListening()) {\n      return;\n    }\n    this.check(event.clientX, event.clientY);\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _setupListening2(event) {\n  if (isRightClick(event)) {\n    return;\n  }\n  const scrollHandler = this.hot.view._wt.wtTable.holder; // native scroll\n\n  if (scrollHandler === this.hot.rootWindow) {\n    // not much we can do currently\n    return;\n  }\n  this.setBoundaries(scrollHandler.getBoundingClientRect());\n  this.setCallback((scrollX, scrollY) => {\n    if (scrollX < 0) {\n      scrollHandler.scrollLeft -= 50;\n    } else if (scrollX > 0) {\n      scrollHandler.scrollLeft += 50;\n    }\n    if (scrollY < 0) {\n      scrollHandler.scrollTop -= 20;\n    } else if (scrollY > 0) {\n      scrollHandler.scrollTop += 20;\n    }\n  });\n  this.listen();\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"../contextMenu/commandExecutor.mjs\";\nimport { getDocumentOffsetByElement } from \"../contextMenu/utils.mjs\";\nimport { hasClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { ItemsFactory } from \"../contextMenu/itemsFactory.mjs\";\nimport { Menu } from \"../contextMenu/menu/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { COLUMN_LEFT, COLUMN_RIGHT, REMOVE_COLUMN, CLEAR_COLUMN, READ_ONLY, ALIGNMENT, SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { A11Y_HASPOPUP, A11Y_HIDDEN, A11Y_LABEL } from \"../../helpers/a11y.mjs\";\nHooks.getSingleton().register('afterDropdownMenuDefaultOptions');\nHooks.getSingleton().register('beforeDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuHide');\nHooks.getSingleton().register('afterDropdownMenuExecute');\nexport const PLUGIN_KEY = 'dropdownMenu';\nexport const PLUGIN_PRIORITY = 230;\nconst BUTTON_CLASS_NAME = 'changeType';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin DropdownMenu\n * @class DropdownMenu\n *\n * @description\n * This plugin creates the Handsontable Dropdown Menu. It allows to create a new row or column at any place in the grid\n * among [other features](@/guides/accessories-and-menus/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or array of any available strings:\n * * `[\"row_above\", \"row_below\", \"col_left\", \"col_right\",\n * \"remove_row\", \"remove_col\", \"---------\", \"undo\", \"redo\"]`.\n *\n * See [the dropdown menu demo](@/guides/columns/column-menu.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable dropdown menu\n *   dropdownMenu: true\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable and configure dropdown menu\n *   dropdownMenu: ['remove_col', '---------', 'make_read_only', 'alignment']\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={data}\n *   comments={true}\n *   // enable and configure dropdown menu\n *   dropdownMenu={['remove_col', '---------', 'make_read_only', 'alignment']}\n * />\n * ```\n * :::\n */\nvar _addCustomShortcuts = /*#__PURE__*/new WeakSet();\nvar _onTableClick = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onMenuBeforeOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onSubMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterClose = /*#__PURE__*/new WeakSet();\nexport class DropdownMenu extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Default menu items order when `dropdownMenu` is enabled by setting the config item to `true`.\n   *\n   * @returns {Array}\n   */\n  static get DEFAULT_ITEMS() {\n    return [COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_COLUMN, SEPARATOR, CLEAR_COLUMN, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n\n  /**\n   * Instance of {@link CommandExecutor}.\n   *\n   * @private\n   * @type {CommandExecutor}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n\n    // One listener for enable/disable functionality\n    /**\n     * On menu after close listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuHide\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterClose);\n    /**\n     * Listener for the `afterSubmenuOpen` hook.\n     *\n     * @private\n     * @param {Menu} subMenuInstance The opened sub menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _onSubMenuAfterOpen);\n    /**\n     * On menu after open listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterOpen);\n    /**\n     * On menu before open listener.\n     *\n     * @private\n     * @fires Hooks#beforeDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuBeforeOpen);\n    /**\n     * On after get column header listener.\n     *\n     * @private\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Table click listener.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onTableClick);\n    /**\n     * Add custom shortcuts to the provided menu instance.\n     *\n     * @param {Menu} menuInstance The menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _addCustomShortcuts);\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DropdownMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   *\n   * @fires Hooks#afterDropdownMenuDefaultOptions\n   * @fires Hooks#beforeDropdownMenuSetItems\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.itemsFactory = new ItemsFactory(this.hot, DropdownMenu.DEFAULT_ITEMS);\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.registerEvents();\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n    this.callOnPluginsReady(() => {\n      this.hot.runHooks('afterDropdownMenuDefaultOptions', predefinedItems);\n      this.itemsFactory.setPredefinedItems(predefinedItems.items);\n      const menuItems = this.itemsFactory.getItems(settings);\n      if (this.menu) {\n        this.menu.destroy();\n      }\n      this.menu = new Menu(this.hot, {\n        className: 'htDropdownMenu',\n        keepInViewport: true,\n        container: settings.uiContainer || this.hot.rootDocument.body\n      });\n      this.hot.runHooks('beforeDropdownMenuSetItems', menuItems);\n      this.menu.setMenuItems(menuItems);\n      this.menu.addLocalHook('beforeOpen', () => _classPrivateMethodGet(this, _onMenuBeforeOpen, _onMenuBeforeOpen2).call(this));\n      this.menu.addLocalHook('afterOpen', () => _classPrivateMethodGet(this, _onMenuAfterOpen, _onMenuAfterOpen2).call(this));\n      this.menu.addLocalHook('afterSubmenuOpen', subMenuInstance => _classPrivateMethodGet(this, _onSubMenuAfterOpen, _onSubMenuAfterOpen2).call(this, subMenuInstance));\n      this.menu.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onMenuAfterClose, _onMenuAfterClose2).call(this));\n      this.menu.addLocalHook('executeCommand', function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n        return _this.executeCommand.call(_this, ...params);\n      });\n\n      // Register all commands. Predefined and added by user or by plugins\n      arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n    });\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dropdownMenu`](@/api/options.md#dropdownmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const gridContext = this.hot.getShortcutManager().getContext('grid');\n    const callback = () => {\n      const {\n        highlight\n      } = this.hot.getSelectedRangeLast();\n      if ((highlight.isHeader() && highlight.row === -1 || highlight.isCell()) && highlight.col >= 0) {\n        this.hot.selectColumns(highlight.col, highlight.col, -1);\n        const {\n          from\n        } = this.hot.getSelectedRangeLast();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        const target = this.hot.getCell(-1, from.col, true);\n        const rect = target.getBoundingClientRect();\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + target.offsetHeight + offset.top\n        }, {\n          left: rect.width\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      }\n    };\n    gridContext.addShortcuts([{\n      keys: [['Shift', 'Alt', 'ArrowDown'], ['Control/Meta', 'Enter']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader() && !this.menu.isOpened();\n      },\n      captureCtrl: true,\n      group: SHORTCUTS_GROUP\n    }, {\n      keys: [['Shift', 'Alt', 'ArrowDown']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        const highlight = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isCell() && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    }]);\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers the DOM listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.eventManager.addEventListener(this.hot.rootElement, 'click', event => _classPrivateMethodGet(this, _onTableClick, _onTableClick2).call(this, event));\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeDropdownMenuShow\n   * @fires Hooks#afterDropdownMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes dropdown menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n  }\n\n  /**\n   * Executes context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'row_above'` - Insert row above\n   *  * `'row_below'` - Insert row below\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_row'` - Remove row\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName Command name to execute.\n   * @param {*} params Additional parameters passed to the command executor.\n   */\n  executeCommand(commandName) {\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Turns on / off listening on dropdown menu.\n   *\n   * @private\n   * @param {boolean} listen Turn on listening when value is set to true, otherwise turn it off.\n   */\n  setListening() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.menu.isOpened()) {\n      if (listen) {\n        this.menu.hotMenu.listen();\n      } else {\n        this.menu.hotMenu.unlisten();\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _addCustomShortcuts2(menuInstance) {\n  menuInstance.getKeyboardShortcutsCtrl().addCustomShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => false\n  }]);\n}\nfunction _onTableClick2(event) {\n  event.stopPropagation();\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n    const rect = event.target.getBoundingClientRect();\n    this.open({\n      left: rect.left + offset.left,\n      top: rect.top + event.target.offsetHeight + 3 + offset.top\n    }, {\n      left: rect.width\n    });\n  }\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  // Corner or a higher-level header\n  const headerRow = TH.parentNode;\n  if (!headerRow) {\n    return;\n  }\n  const headerRowList = headerRow.parentNode.childNodes;\n  const level = Array.prototype.indexOf.call(headerRowList, headerRow);\n  if (col < 0 || level !== headerRowList.length - 1) {\n    return;\n  }\n  const existingButton = TH.querySelector(`.${BUTTON_CLASS_NAME}`);\n\n  // Plugin enabled and buttons already exists, return.\n  if (this.enabled && existingButton) {\n    return;\n  }\n  // Plugin disabled and buttons still exists, so remove them.\n  if (!this.enabled) {\n    if (existingButton) {\n      existingButton.parentNode.removeChild(existingButton);\n    }\n    return;\n  }\n  const button = this.hot.rootDocument.createElement('button');\n  button.className = BUTTON_CLASS_NAME;\n  button.type = 'button';\n  button.tabIndex = -1;\n  if (this.hot.getSettings().ariaTags) {\n    setAttribute(button, [A11Y_HIDDEN(), A11Y_LABEL(' ')]);\n    setAttribute(TH, [A11Y_HASPOPUP('menu')]);\n  }\n\n  // prevent page reload on button click\n  button.onclick = function () {\n    return false;\n  };\n  TH.firstChild.insertBefore(button, TH.firstChild.firstChild);\n}\nfunction _onMenuBeforeOpen2() {\n  this.hot.runHooks('beforeDropdownMenuShow', this);\n}\nfunction _onMenuAfterOpen2() {\n  this.hot.runHooks('afterDropdownMenuShow', this);\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, this.menu);\n}\nfunction _onSubMenuAfterOpen2(subMenuInstance) {\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, subMenuInstance);\n}\nfunction _onMenuAfterClose2() {\n  this.hot.listen();\n  this.hot.runHooks('afterDropdownMenuHide', this);\n}\nDropdownMenu.SEPARATOR = {\n  name: SEPARATOR\n};", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * @private\n */\nclass DataProvider {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", {});\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Set options for data provider.\n   *\n   * @param {object} options Object with specified options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n\n  /**\n   * Get table data based on provided settings to the class constructor.\n   *\n   * @returns {Array}\n   */\n  getData() {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = this._getDataRange();\n    const options = this.options;\n    const data = [];\n    rangeEach(startRow, endRow, rowIndex => {\n      const row = [];\n      if (!options.exportHiddenRows && this._isHiddenRow(rowIndex)) {\n        return;\n      }\n      rangeEach(startCol, endCol, colIndex => {\n        if (!options.exportHiddenColumns && this._isHiddenColumn(colIndex)) {\n          return;\n        }\n        row.push(this.hot.getDataAtCell(rowIndex, colIndex));\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  /**\n   * Gets list of row headers.\n   *\n   * @returns {Array}\n   */\n  getRowHeaders() {\n    const headers = [];\n    if (this.options.rowHeaders) {\n      const {\n        startRow,\n        endRow\n      } = this._getDataRange();\n      const rowHeaders = this.hot.getRowHeader();\n      rangeEach(startRow, endRow, row => {\n        if (!this.options.exportHiddenRows && this._isHiddenRow(row)) {\n          return;\n        }\n        headers.push(rowHeaders[row]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Gets list of columns headers.\n   *\n   * @returns {Array}\n   */\n  getColumnHeaders() {\n    const headers = [];\n    if (this.options.columnHeaders) {\n      const {\n        startCol,\n        endCol\n      } = this._getDataRange();\n      const colHeaders = this.hot.getColHeader();\n      rangeEach(startCol, endCol, column => {\n        if (!this.options.exportHiddenColumns && this._isHiddenColumn(column)) {\n          return;\n        }\n        headers.push(colHeaders[column]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Get data range object based on settings provided in the class constructor.\n   *\n   * @private\n   * @returns {object} Returns object with keys `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  _getDataRange() {\n    const cols = this.hot.countCols() - 1;\n    const rows = this.hot.countRows() - 1;\n    let [startRow = 0, startCol = 0, endRow = rows, endCol = cols] = this.options.range;\n    startRow = Math.max(startRow, 0);\n    startCol = Math.max(startCol, 0);\n    endRow = Math.min(endRow, rows);\n    endCol = Math.min(endCol, cols);\n    return {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    };\n  }\n\n  /**\n   * Check if row at specified row index is hidden.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  _isHiddenRow(row) {\n    return this.hot.rowIndexMapper.isHidden(this.hot.toPhysicalRow(row));\n  }\n\n  /**\n   * Check if column at specified column index is hidden.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  _isHiddenColumn(column) {\n    return this.hot.columnIndexMapper.isHidden(this.hot.toPhysicalColumn(column));\n  }\n}\nexport default DataProvider;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { extend, clone } from \"../../../helpers/object.mjs\";\nimport { substitute } from \"../../../helpers/string.mjs\";\n/**\n * @private\n */\nclass BaseType {\n  /**\n   * Default options.\n   *\n   * @returns {object}\n   */\n  static get DEFAULT_OPTIONS() {\n    return {\n      mimeType: 'text/plain',\n      fileExtension: 'txt',\n      filename: 'Handsontable [YYYY]-[MM]-[DD]',\n      encoding: 'utf-8',\n      bom: false,\n      columnHeaders: false,\n      rowHeaders: false,\n      exportHiddenColumns: false,\n      exportHiddenRows: false,\n      range: []\n    };\n  }\n\n  /**\n   * Data provider.\n   *\n   * @type {DataProvider}\n   */\n\n  constructor(dataProvider, options) {\n    _defineProperty(this, \"dataProvider\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", void 0);\n    this.dataProvider = dataProvider;\n    this.options = this._mergeOptions(options);\n    this.dataProvider.setOptions(this.options);\n  }\n\n  /**\n   * Merge options provided by users with defaults.\n   *\n   * @param {object} options An object with options to merge with.\n   * @returns {object} Returns new options object.\n   */\n  _mergeOptions(options) {\n    let _options = clone(this.constructor.DEFAULT_OPTIONS);\n    const date = new Date();\n    _options = extend(clone(BaseType.DEFAULT_OPTIONS), _options);\n    _options = extend(_options, options);\n    _options.filename = substitute(_options.filename, {\n      YYYY: date.getFullYear(),\n      MM: `${date.getMonth() + 1}`.padStart(2, '0'),\n      DD: `${date.getDate()}`.padStart(2, '0')\n    });\n    return _options;\n  }\n}\nexport default BaseType;", "import { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport BaseType from \"./_base.mjs\";\nconst CHAR_CARRIAGE_RETURN = String.fromCharCode(13);\nconst CHAR_DOUBLE_QUOTES = String.fromCharCode(34);\nconst CHAR_LINE_FEED = String.fromCharCode(10);\n\n/**\n * @private\n */\nclass Csv extends BaseType {\n  /**\n   * Default options for exporting CSV format.\n   *\n   * @returns {object}\n   */\n  static get DEFAULT_OPTIONS() {\n    return {\n      mimeType: 'text/csv',\n      fileExtension: 'csv',\n      bom: true,\n      columnDelimiter: ',',\n      rowDelimiter: '\\r\\n'\n    };\n  }\n\n  /**\n   * Create string body in desired format.\n   *\n   * @returns {string}\n   */\n  export() {\n    const options = this.options;\n    const data = this.dataProvider.getData();\n    let columnHeaders = this.dataProvider.getColumnHeaders();\n    const hasColumnHeaders = columnHeaders.length > 0;\n    const rowHeaders = this.dataProvider.getRowHeaders();\n    const hasRowHeaders = rowHeaders.length > 0;\n    let result = options.bom ? String.fromCharCode(0xFEFF) : '';\n    if (hasColumnHeaders) {\n      columnHeaders = arrayMap(columnHeaders, value => this._escapeCell(value, true));\n      if (hasRowHeaders) {\n        result += options.columnDelimiter;\n      }\n      result += columnHeaders.join(options.columnDelimiter);\n      result += options.rowDelimiter;\n    }\n    arrayEach(data, (value, index) => {\n      if (index > 0) {\n        result += options.rowDelimiter;\n      }\n      if (hasRowHeaders) {\n        result += this._escapeCell(rowHeaders[index]) + options.columnDelimiter;\n      }\n      result += value.map(cellValue => this._escapeCell(cellValue)).join(options.columnDelimiter);\n    });\n    return result;\n  }\n\n  /**\n   * Escape cell value.\n   *\n   * @param {*} value Cell value.\n   * @param {boolean} [force=false] Indicates if cell value will be escaped forcefully.\n   * @returns {string}\n   */\n  _escapeCell(value) {\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let escapedValue = stringify(value);\n    if (escapedValue !== '' && (force || escapedValue.indexOf(CHAR_CARRIAGE_RETURN) >= 0 || escapedValue.indexOf(CHAR_DOUBLE_QUOTES) >= 0 || escapedValue.indexOf(CHAR_LINE_FEED) >= 0 || escapedValue.indexOf(this.options.columnDelimiter) >= 0)) {\n      escapedValue = escapedValue.replace(new RegExp('\"', 'g'), '\"\"');\n      escapedValue = `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n}\nexport default Csv;", "import Csv from \"./types/csv.mjs\";\nexport const TYPE_CSV = 'csv';\nexport const TYPE_EXCEL = 'excel'; // TODO\nexport const TYPE_PDF = 'pdf'; // TODO\n\nexport const EXPORT_TYPES = {\n  [TYPE_CSV]: Csv\n};\n\n/**\n * @private\n * @param {string} type The exporter type.\n * @param {DataProvider} dataProvider The data provider.\n * @param {object} options Constructor options for exporter class.\n * @returns {BaseType|null}\n */\nexport default function typeFactory(type, dataProvider, options) {\n  if (typeof EXPORT_TYPES[type] === 'function') {\n    return new EXPORT_TYPES[type](dataProvider, options);\n  }\n  return null;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport DataProvider from \"./dataProvider.mjs\";\nimport typeFactory, { EXPORT_TYPES } from \"./typeFactory.mjs\";\nexport const PLUGIN_KEY = 'exportFile';\nexport const PLUGIN_PRIORITY = 240;\n\n/**\n * @plugin ExportFile\n * @class ExportFile\n *\n * @description\n * The `ExportFile` plugin lets you export table data as a string, blob, or downloadable CSV file.\n *\n * See [the export file demo](@/guides/accessories-and-menus/export-to-csv.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData()\n * });\n *\n * // access to exportFile plugin instance\n * const exportPlugin = hot.getPlugin('exportFile');\n *\n * // export as a string\n * exportPlugin.exportAsString('csv');\n *\n * // export as a blob object\n * exportPlugin.exportAsBlob('csv');\n *\n * // export to downloadable file (named: MyFile.csv)\n * exportPlugin.downloadFile('csv', {filename: 'MyFile'});\n *\n * // export as a string (with specified data range):\n * exportPlugin.exportAsString('csv', {\n *   exportHiddenRows: true,     // default false\n *   exportHiddenColumns: true,  // default false\n *   columnHeaders: true,        // default false\n *   rowHeaders: true,           // default false\n *   columnDelimiter: ';',       // default ','\n *   range: [1, 1, 6, 6]         // [startRow, endRow, startColumn, endColumn]\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n * />\n *\n * const hot = hotRef.current.hotInstance;\n * // access to exportFile plugin instance\n * const exportPlugin = hot.getPlugin('exportFile');\n *\n * // export as a string\n * exportPlugin.exportAsString('csv');\n *\n * // export as a blob object\n * exportPlugin.exportAsBlob('csv');\n *\n * // export to downloadable file (named: MyFile.csv)\n * exportPlugin.downloadFile('csv', {filename: 'MyFile'});\n *\n * // export as a string (with specified data range):\n * exportPlugin.exportAsString('csv', {\n *   exportHiddenRows: true,     // default false\n *   exportHiddenColumns: true,  // default false\n *   columnHeaders: true,        // default false\n *   rowHeaders: true,           // default false\n *   columnDelimiter: ';',       // default ','\n *   range: [1, 1, 6, 6]         // [startRow, endRow, startColumn, endColumn]\n * });\n * ```\n * :::\n */\nexport class ExportFile extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ExportFile#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return true;\n  }\n\n  /**\n   * @typedef ExportOptions\n   * @memberof ExportFile\n   * @type {object}\n   * @property {boolean} [exportHiddenRows=false] Include hidden rows in the exported file.\n   * @property {boolean} [exportHiddenColumns=false] Include hidden columns in the exported file.\n   * @property {boolean} [columnHeaders=false] Include column headers in the exported file.\n   * @property {boolean} [rowHeaders=false] Include row headers in the exported file.\n   * @property {string} [columnDelimiter=','] Column delimiter.\n   * @property {string} [range=[]] Cell range that will be exported to file.\n   */\n\n  /**\n   * Exports table data as a string.\n   *\n   * @param {string} format Export format type eq. `'csv'`.\n   * @param {ExportOptions} options Export options.\n   * @returns {string}\n   */\n  exportAsString(format) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._createTypeFormatter(format, options).export();\n  }\n\n  /**\n   * Exports table data as a blob object.\n   *\n   * @param {string} format Export format type eq. `'csv'`.\n   * @param {ExportOptions} options Export options.\n   * @returns {Blob}\n   */\n  exportAsBlob(format) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._createBlob(this._createTypeFormatter(format, options));\n  }\n\n  /**\n   * Exports table data as a downloadable file.\n   *\n   * @param {string} format Export format type eq. `'csv'`.\n   * @param {ExportOptions} options Export options.\n   */\n  downloadFile(format) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      rootDocument,\n      rootWindow\n    } = this.hot;\n    const formatter = this._createTypeFormatter(format, options);\n    const blob = this._createBlob(formatter);\n    const URL = rootWindow.URL || rootWindow.webkitURL;\n    const a = rootDocument.createElement('a');\n    const name = `${formatter.options.filename}.${formatter.options.fileExtension}`;\n    if (a.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      a.style.display = 'none';\n      a.setAttribute('href', url);\n      a.setAttribute('download', name);\n      rootDocument.body.appendChild(a);\n      a.dispatchEvent(new MouseEvent('click'));\n      rootDocument.body.removeChild(a);\n      setTimeout(() => {\n        URL.revokeObjectURL(url);\n      }, 100);\n    } else if (navigator.msSaveOrOpenBlob) {\n      // IE10+\n      navigator.msSaveOrOpenBlob(blob, name);\n    }\n  }\n\n  /**\n   * Creates and returns class formatter for specified export type.\n   *\n   * @private\n   * @param {string} format Export format type eq. `'csv'`.\n   * @param {ExportOptions} options Export options.\n   * @returns {BaseType}\n   */\n  _createTypeFormatter(format) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!EXPORT_TYPES[format]) {\n      throw new Error(`Export format type \"${format}\" is not supported.`);\n    }\n    return typeFactory(format, new DataProvider(this.hot), options);\n  }\n\n  /**\n   * Creates blob object based on provided type formatter class.\n   *\n   * @private\n   * @param {BaseType} typeFormatter The instance of the specyfic formatter/exporter.\n   * @returns {Blob}\n   */\n  _createBlob(typeFormatter) {\n    let formatter = null;\n    if (typeof Blob !== 'undefined') {\n      formatter = new Blob([typeFormatter.export()], {\n        type: `${typeFormatter.options.mimeType};charset=${typeFormatter.options.encoding}`\n      });\n    }\n    return formatter;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @private\n * @class BaseComponent\n */\nexport class BaseComponent {\n  constructor(hotInstance, _ref) {\n    let {\n      id,\n      stateless = true\n    } = _ref;\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"elements\", []);\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"hidden\", false);\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"stateId\", '');\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n    _defineProperty(this, \"state\", void 0);\n    this.hot = hotInstance;\n    this.id = id;\n    this.stateId = `Filters.component.${this.id}`;\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n\n  /**\n   * Gets the list of elements from which the component is built.\n   *\n   * @returns {BaseUI[]}\n   */\n  getElements() {\n    return this.elements;\n  }\n\n  /**\n   * Reset elements to its initial state.\n   */\n  reset() {\n    arrayEach(this.elements, ui => ui.reset());\n  }\n\n  /**\n   * Hide component.\n   */\n  hide() {\n    this.hidden = true;\n  }\n\n  /**\n   * Show component.\n   */\n  show() {\n    this.hidden = false;\n  }\n\n  /**\n   * Check if component is hidden.\n   *\n   * @returns {boolean}\n   */\n  isHidden() {\n    return this.hot === null || this.hidden;\n  }\n\n  /**\n   * Restores the component state from the given physical column index. The method\n   * internally calls the `setState` method. The state then is individually processed\n   * by each component.\n   *\n   * @param {number} physicalColumn The physical column index.\n   */\n  restoreState(physicalColumn) {\n    if (this.state) {\n      this.setState(this.state.getValueAtIndex(physicalColumn));\n    }\n  }\n\n  /**\n   * The custom logic for component state restoring.\n   */\n  setState() {\n    throw new Error('The state setting logic is not implemented');\n  }\n\n  /**\n   * Saves the component state to the given physical column index. The method\n   * internally calls the `getState` method, which returns the current state of\n   * the component.\n   *\n   * @param {number} physicalColumn The physical column index.\n   */\n  saveState(physicalColumn) {\n    if (this.state) {\n      this.state.setValueAtIndex(physicalColumn, this.getState());\n    }\n  }\n\n  /**\n   * The custom logic for component state gathering (for stateful components).\n   */\n  getState() {\n    throw new Error('The state gathering logic is not implemented');\n  }\n\n  /**\n   * Destroy element.\n   */\n  destroy() {\n    this.hot.columnIndexMapper.unregisterMap(this.stateId);\n    this.clearLocalHooks();\n    arrayEach(this.elements, ui => ui.destroy());\n    this.state = null;\n    this.elements = null;\n    this.hot = null;\n  }\n}\nmixin(BaseComponent, localHooks);", "import \"core-js/modules/es.error.cause.js\";\nexport const conditions = {};\n\n/**\n * Get condition closure with pre-bound arguments.\n *\n * @param {string} name Condition name.\n * @param {Array} args Condition arguments.\n * @returns {Function}\n */\nexport function getCondition(name, args) {\n  if (!conditions[name]) {\n    throw Error(`Filter condition \"${name}\" does not exist.`);\n  }\n  const {\n    condition,\n    descriptor\n  } = conditions[name];\n  let conditionArguments = args;\n  if (descriptor.inputValuesDecorator) {\n    conditionArguments = descriptor.inputValuesDecorator(conditionArguments);\n  }\n  return function (dataRow) {\n    return condition.apply(dataRow.meta.instance, [].concat([dataRow], [conditionArguments]));\n  };\n}\n\n/**\n * Get condition object descriptor which defines some additional informations about this condition.\n *\n * @param {string} name Condition name.\n * @returns {object}\n */\nexport function getConditionDescriptor(name) {\n  if (!conditions[name]) {\n    throw Error(`Filter condition \"${name}\" does not exist.`);\n  }\n  return conditions[name].descriptor;\n}\n\n/**\n * Condition registerer.\n *\n * @param {string} name Condition name.\n * @param {Function} condition Condition function.\n * @param {object} descriptor Condition descriptor.\n */\nexport function registerCondition(name, condition, descriptor) {\n  descriptor.key = name;\n  conditions[name] = {\n    condition,\n    descriptor\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'none';\n\n/**\n * @returns {boolean}\n */\nexport function condition() {\n  return true;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NONE,\n  inputsCount: 0,\n  showOperators: false\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nimport { isEmpty } from \"../../../helpers/mixed.mjs\";\nexport const CONDITION_NAME = 'empty';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\nexport function condition(dataRow) {\n  return isEmpty(dataRow.value);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_EMPTY,\n  inputsCount: 0,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_EMPTY } from \"./empty.mjs\";\nexport const CONDITION_NAME = 'not_empty';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @returns {boolean}\n */\nexport function condition(dataRow, inputValues) {\n  return !getCondition(CONDITION_EMPTY, inputValues)(dataRow);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NOT_EMPTY,\n  inputsCount: 0,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'eq';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {Array} inputValues.\"0\" Value to check if it same as row's data.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  return stringify(dataRow.value).toLocaleLowerCase(dataRow.meta.locale) === stringify(value);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_EQUAL,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_EQUAL } from \"./equal.mjs\";\nexport const CONDITION_NAME = 'neq';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @returns {boolean}\n */\nexport function condition(dataRow, inputValues) {\n  return !getCondition(CONDITION_EQUAL, inputValues)(dataRow);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NOT_EQUAL,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'gt';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {any} inputValues.\"0\" Condition value to compare numbers.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  let conditionValue = value;\n  if (dataRow.meta.type === 'numeric') {\n    conditionValue = parseFloat(conditionValue, 10);\n  }\n  return dataRow.value > conditionValue;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_GREATER_THAN,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'gte';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Condition value to compare numbers.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  let conditionValue = value;\n  if (dataRow.meta.type === 'numeric') {\n    conditionValue = parseFloat(conditionValue, 10);\n  }\n  return dataRow.value >= conditionValue;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_GREATER_THAN_OR_EQUAL,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'lt';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Condition value to compare numbers.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  let conditionValue = value;\n  if (dataRow.meta.type === 'numeric') {\n    conditionValue = parseFloat(conditionValue, 10);\n  }\n  return dataRow.value < conditionValue;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_LESS_THAN,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'lte';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Condition value to compare numbers.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  let conditionValue = value;\n  if (dataRow.meta.type === 'numeric') {\n    conditionValue = parseFloat(conditionValue, 10);\n  }\n  return dataRow.value <= conditionValue;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_LESS_THAN_OR_EQUAL,\n  inputsCount: 1,\n  showOperators: true\n});", "import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_after';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Minimum date of a range.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  const inputDate = moment(value, dataRow.meta.dateFormat);\n  if (!date.isValid() || !inputDate.isValid()) {\n    return false;\n  }\n  return date.diff(inputDate) >= 0;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_AFTER,\n  inputsCount: 1,\n  showOperators: true\n});", "import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_before';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Maximum date of a range.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  const inputDate = moment(value, dataRow.meta.dateFormat);\n  if (!date.isValid() || !inputDate.isValid()) {\n    return false;\n  }\n  return date.diff(inputDate) <= 0;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_BEFORE,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_DATE_AFTER } from \"./date/after.mjs\";\nimport { CONDITION_NAME as CONDITION_DATE_BEFORE } from \"./date/before.mjs\";\nexport const CONDITION_NAME = 'between';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {number} inputValues.\"0\" The minimum value of the range.\n * @param {number} inputValues.\"1\" The maximum value of the range.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [from, to] = _ref;\n  let fromValue = from;\n  let toValue = to;\n  if (dataRow.meta.type === 'numeric') {\n    const _from = parseFloat(fromValue, 10);\n    const _to = parseFloat(toValue, 10);\n    fromValue = Math.min(_from, _to);\n    toValue = Math.max(_from, _to);\n  } else if (dataRow.meta.type === 'date') {\n    const dateBefore = getCondition(CONDITION_DATE_BEFORE, [toValue]);\n    const dateAfter = getCondition(CONDITION_DATE_AFTER, [fromValue]);\n    return dateBefore(dataRow) && dateAfter(dataRow);\n  }\n  return dataRow.value >= fromValue && dataRow.value <= toValue;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_BETWEEN,\n  inputsCount: 2,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_BETWEEN } from \"./between.mjs\";\nexport const CONDITION_NAME = 'not_between';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @returns {boolean}\n */\nexport function condition(dataRow, inputValues) {\n  return !getCondition(CONDITION_BETWEEN, inputValues)(dataRow);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NOT_BETWEEN,\n  inputsCount: 2,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'begins_with';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Value to check if it occurs at the beginning.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  return stringify(dataRow.value).toLocaleLowerCase(dataRow.meta.locale).startsWith(stringify(value));\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_BEGINS_WITH,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'ends_with';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Value to check if it occurs at the end.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  return stringify(dataRow.value).toLocaleLowerCase(dataRow.meta.locale).endsWith(stringify(value));\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_ENDS_WITH,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'contains';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" A value to check if it occurs in the row's data.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  return stringify(dataRow.value).toLocaleLowerCase(dataRow.meta.locale).indexOf(stringify(value)) >= 0;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_CONTAINS,\n  inputsCount: 1,\n  showOperators: true\n});", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_CONTAINS } from \"./contains.mjs\";\nexport const CONDITION_NAME = 'not_contains';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @returns {boolean}\n */\nexport function condition(dataRow, inputValues) {\n  return !getCondition(CONDITION_CONTAINS, inputValues)(dataRow);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NOT_CONTAIN,\n  inputsCount: 1,\n  showOperators: true\n});", "import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_tomorrow';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\nexport function condition(dataRow) {\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  if (!date.isValid()) {\n    return false;\n  }\n  return date.isSame(moment().subtract(-1, 'days').startOf('day'), 'd');\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_TOMORROW,\n  inputsCount: 0\n});", "import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_today';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\nexport function condition(dataRow) {\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  if (!date.isValid()) {\n    return false;\n  }\n  return date.isSame(moment().startOf('day'), 'd');\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_TODAY,\n  inputsCount: 0\n});", "import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_yesterday';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\nexport function condition(dataRow) {\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  if (!date.isValid()) {\n    return false;\n  }\n  return date.isSame(moment().subtract(1, 'days').startOf('day'), 'd');\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_YESTERDAY,\n  inputsCount: 0\n});", "import \"core-js/modules/es.array.push.js\";\nimport { getComparisonFunction } from \"../../helpers/feature.mjs\";\nimport { arrayUnique, arrayEach } from \"../../helpers/array.mjs\";\nconst sortCompare = getComparisonFunction();\n\n/**\n * Comparison function for sorting purposes.\n *\n * @param {*} a The first value to compare.\n * @param {*} b The second value to compare.\n * @returns {number} Returns number from -1 to 1.\n */\nexport function sortComparison(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a - b;\n  }\n  return sortCompare(a, b);\n}\n\n/**\n * Convert raw value into visual value.\n *\n * @param {*} value The value to convert.\n * @param {string} defaultEmptyValue Default value for empty cells.\n * @returns {*}\n */\nexport function toVisualValue(value, defaultEmptyValue) {\n  let visualValue = value;\n  if (visualValue === '') {\n    visualValue = `(${defaultEmptyValue})`;\n  }\n  return visualValue;\n}\nconst SUPPORT_SET_CONSTRUCTOR = new Set([1]).has(1);\nconst SUPPORT_FAST_DEDUPE = SUPPORT_SET_CONSTRUCTOR && typeof Array.from === 'function';\n\n/**\n * Create an array assertion to compare if an element exists in that array (in a more efficient way than .indexOf).\n *\n * @param {Array} initialData Values to compare.\n * @returns {Function}\n */\nexport function createArrayAssertion(initialData) {\n  let dataset = initialData;\n  if (SUPPORT_SET_CONSTRUCTOR) {\n    dataset = new Set(dataset);\n  }\n  return function (value) {\n    let result;\n    if (SUPPORT_SET_CONSTRUCTOR) {\n      result = dataset.has(value);\n    } else {\n      /* eslint-disable no-bitwise */\n      result = !!~dataset.indexOf(value);\n    }\n    return result;\n  };\n}\n\n/**\n * Convert empty-ish values like null and undefined to an empty string.\n *\n * @param {*} value Value to check.\n * @returns {string}\n */\nexport function toEmptyString(value) {\n  return value === null || value === undefined ? '' : value;\n}\n\n/**\n * Unify column values (replace `null` and `undefined` values into empty string, unique values and sort them).\n *\n * @param {Array} values An array of values.\n * @returns {Array}\n */\nexport function unifyColumnValues(values) {\n  let unifiedValues = values;\n  if (SUPPORT_FAST_DEDUPE) {\n    unifiedValues = Array.from(new Set(unifiedValues));\n  } else {\n    unifiedValues = arrayUnique(unifiedValues);\n  }\n  unifiedValues = unifiedValues.sort((a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a - b;\n    }\n    if (a === b) {\n      return 0;\n    }\n    return a > b ? 1 : -1;\n  });\n  return unifiedValues;\n}\n\n/**\n * Intersect 'base' values with 'selected' values and return an array of object.\n *\n * @param {Array} base An array of base values.\n * @param {Array} selected An array of selected values.\n * @param {string} defaultEmptyValue Default value for empty cells.\n * @param {Function} [callback] A callback function which is invoked for every item in an array.\n * @returns {Array}\n */\nexport function intersectValues(base, selected, defaultEmptyValue, callback) {\n  const result = [];\n  const same = base === selected;\n  let selectedItemsAssertion;\n  if (!same) {\n    selectedItemsAssertion = createArrayAssertion(selected);\n  }\n  arrayEach(base, value => {\n    let checked = false;\n    if (same || selectedItemsAssertion(value)) {\n      checked = true;\n    }\n    const item = {\n      checked,\n      value,\n      visualValue: toVisualValue(value, defaultEmptyValue)\n    };\n    if (callback) {\n      callback(item);\n    }\n    result.push(item);\n  });\n  return result;\n}", "import { registerCondition } from \"../conditionRegisterer.mjs\";\nimport { createArrayAssertion } from \"../utils.mjs\";\nexport const CONDITION_NAME = 'by_value';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {Function} inputValues.\"0\" A function to compare row's data.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  return value(dataRow.value);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: 'By value',\n  inputsCount: 0,\n  inputValuesDecorator(_ref2) {\n    let [data] = _ref2;\n    return [createArrayAssertion(data)];\n  },\n  showOperators: false\n});", "import { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'true';\n\n/**\n * @returns {boolean}\n */\nexport function condition() {\n  return true;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: 'True'\n});", "import { registerCondition } from \"../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'false';\n\n/**\n * @returns {boolean}\n */\nexport function condition() {\n  return false;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: 'False'\n});", "import \"core-js/modules/es.error.cause.js\";\nexport const operations = {};\n\n/**\n * Get operation closure with pre-bound arguments.\n *\n * @param {string} id Operator `id`.\n * @returns {Function}\n */\nexport function getOperationFunc(id) {\n  if (!operations[id]) {\n    throw Error(`Operation with id \"${id}\" does not exist.`);\n  }\n  const func = operations[id].func;\n  return function (conditions, value) {\n    return func(conditions, value);\n  };\n}\n\n/**\n * Return name of operation which is displayed inside UI component, basing on it's `id`.\n *\n * @param {string} id `Id` of operation.\n * @returns {string}\n */\nexport function getOperationName(id) {\n  return operations[id].name;\n}\n\n/**\n * Operator registerer.\n *\n * @param {string} id Operation `id`.\n * @param {string} name Operation name which is displayed inside UI component.\n * @param {Function} func Operation function.\n */\nexport function registerOperation(id, name, func) {\n  operations[id] = {\n    name,\n    func\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerOperation } from \"../logicalOperationRegisterer.mjs\";\nexport const OPERATION_ID = 'conjunction';\nexport const SHORT_NAME_FOR_COMPONENT = C.FILTERS_LABELS_CONJUNCTION;\n// p AND q AND w AND x AND... === TRUE?\n\n/**\n * @param {Array} conditions An array with values to check.\n * @param {*} value The comparable value.\n * @returns {boolean}\n */\nexport function operationResult(conditions, value) {\n  return conditions.every(condition => condition.func(value));\n}\nregisterOperation(OPERATION_ID, SHORT_NAME_FOR_COMPONENT, operationResult);", "import * as C from \"../../../i18n/constants.mjs\";\nimport { registerOperation } from \"../logicalOperationRegisterer.mjs\";\nexport const OPERATION_ID = 'disjunction';\nexport const SHORT_NAME_FOR_COMPONENT = C.FILTERS_LABELS_DISJUNCTION;\n// (p OR q OR w OR x OR...) === TRUE?\n\n/**\n * @param {Array} conditions An array with values to check.\n * @param {*} value The comparable value.\n * @returns {boolean}\n */\nexport function operationResult(conditions, value) {\n  return conditions.some(condition => condition.func(value));\n}\nregisterOperation(OPERATION_ID, SHORT_NAME_FOR_COMPONENT, operationResult);", "import \"core-js/modules/es.error.cause.js\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { registerOperation } from \"../logicalOperationRegisterer.mjs\";\nexport const OPERATION_ID = 'disjunctionWithExtraCondition';\nexport const SHORT_NAME_FOR_COMPONENT = C.FILTERS_LABELS_DISJUNCTION;\n// ((p OR q OR w OR x OR...) AND z) === TRUE?\n\n/**\n * @param {Array} conditions An array with values to check.\n * @param {*} value The comparable value.\n * @returns {boolean}\n */\nexport function operationResult(conditions, value) {\n  if (conditions.length < 3) {\n    throw Error('Operation doesn\\'t work on less then three conditions.');\n  }\n  return conditions.slice(0, conditions.length - 1).some(condition => condition.func(value)) && conditions[conditions.length - 1].func(value);\n}\nregisterOperation(OPERATION_ID, SHORT_NAME_FOR_COMPONENT, operationResult);", "import \"core-js/modules/es.array.push.js\";\nimport { clone } from \"../../helpers/object.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { getConditionDescriptor } from \"./conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_NONE } from \"./condition/none.mjs\";\nimport { CONDITION_NAME as CONDITION_EMPTY } from \"./condition/empty.mjs\";\nimport { CONDITION_NAME as CONDITION_NOT_EMPTY } from \"./condition/notEmpty.mjs\";\nimport { CONDITION_NAME as CONDITION_EQUAL } from \"./condition/equal.mjs\";\nimport { CONDITION_NAME as CONDITION_NOT_EQUAL } from \"./condition/notEqual.mjs\";\nimport { CONDITION_NAME as CONDITION_GREATER_THAN } from \"./condition/greaterThan.mjs\";\nimport { CONDITION_NAME as CONDITION_GREATER_THAN_OR_EQUAL } from \"./condition/greaterThanOrEqual.mjs\";\nimport { CONDITION_NAME as CONDITION_LESS_THAN } from \"./condition/lessThan.mjs\";\nimport { CONDITION_NAME as CONDITION_LESS_THAN_OR_EQUAL } from \"./condition/lessThanOrEqual.mjs\";\nimport { CONDITION_NAME as CONDITION_BETWEEN } from \"./condition/between.mjs\";\nimport { CONDITION_NAME as CONDITION_NOT_BETWEEN } from \"./condition/notBetween.mjs\";\nimport { CONDITION_NAME as CONDITION_BEGINS_WITH } from \"./condition/beginsWith.mjs\";\nimport { CONDITION_NAME as CONDITION_ENDS_WITH } from \"./condition/endsWith.mjs\";\nimport { CONDITION_NAME as CONDITION_CONTAINS } from \"./condition/contains.mjs\";\nimport { CONDITION_NAME as CONDITION_NOT_CONTAINS } from \"./condition/notContains.mjs\";\nimport { CONDITION_NAME as CONDITION_DATE_BEFORE } from \"./condition/date/before.mjs\";\nimport { CONDITION_NAME as CONDITION_DATE_AFTER } from \"./condition/date/after.mjs\";\nimport { CONDITION_NAME as CONDITION_TOMORROW } from \"./condition/date/tomorrow.mjs\";\nimport { CONDITION_NAME as CONDITION_TODAY } from \"./condition/date/today.mjs\";\nimport { CONDITION_NAME as CONDITION_YESTERDAY } from \"./condition/date/yesterday.mjs\";\nimport { CONDITION_NAME as CONDITION_BY_VALUE } from \"./condition/byValue.mjs\";\nimport { CONDITION_NAME as CONDITION_TRUE } from \"./condition/true.mjs\";\nimport { CONDITION_NAME as CONDITION_FALSE } from \"./condition/false.mjs\";\nimport { OPERATION_ID as OPERATION_AND } from \"./logicalOperations/conjunction.mjs\";\nimport { OPERATION_ID as OPERATION_OR } from \"./logicalOperations/disjunction.mjs\";\nimport { OPERATION_ID as OPERATION_OR_THEN_VARIABLE } from \"./logicalOperations/disjunctionWithExtraCondition.mjs\";\nexport { CONDITION_NONE, CONDITION_EMPTY, CONDITION_NOT_EMPTY, CONDITION_EQUAL, CONDITION_NOT_EQUAL, CONDITION_GREATER_THAN, CONDITION_GREATER_THAN_OR_EQUAL, CONDITION_LESS_THAN, CONDITION_LESS_THAN_OR_EQUAL, CONDITION_BETWEEN, CONDITION_NOT_BETWEEN, CONDITION_BEGINS_WITH, CONDITION_ENDS_WITH, CONDITION_CONTAINS, CONDITION_NOT_CONTAINS, CONDITION_DATE_BEFORE, CONDITION_DATE_AFTER, CONDITION_TOMORROW, CONDITION_TODAY, CONDITION_YESTERDAY, CONDITION_BY_VALUE, CONDITION_TRUE, CONDITION_FALSE, OPERATION_AND, OPERATION_OR, OPERATION_OR_THEN_VARIABLE };\nexport const TYPE_NUMERIC = 'numeric';\nexport const TYPE_TEXT = 'text';\nexport const TYPE_DATE = 'date';\n/**\n * Default types and order for filter conditions.\n *\n * @type {object}\n */\nexport const TYPES = {\n  [TYPE_NUMERIC]: [CONDITION_NONE, SEPARATOR, CONDITION_EMPTY, CONDITION_NOT_EMPTY, SEPARATOR, CONDITION_EQUAL, CONDITION_NOT_EQUAL, SEPARATOR, CONDITION_GREATER_THAN, CONDITION_GREATER_THAN_OR_EQUAL, CONDITION_LESS_THAN, CONDITION_LESS_THAN_OR_EQUAL, CONDITION_BETWEEN, CONDITION_NOT_BETWEEN],\n  [TYPE_TEXT]: [CONDITION_NONE, SEPARATOR, CONDITION_EMPTY, CONDITION_NOT_EMPTY, SEPARATOR, CONDITION_EQUAL, CONDITION_NOT_EQUAL, SEPARATOR, CONDITION_BEGINS_WITH, CONDITION_ENDS_WITH, SEPARATOR, CONDITION_CONTAINS, CONDITION_NOT_CONTAINS],\n  [TYPE_DATE]: [CONDITION_NONE, SEPARATOR, CONDITION_EMPTY, CONDITION_NOT_EMPTY, SEPARATOR, CONDITION_EQUAL, CONDITION_NOT_EQUAL, SEPARATOR, CONDITION_DATE_BEFORE, CONDITION_DATE_AFTER, CONDITION_BETWEEN, SEPARATOR, CONDITION_TOMORROW, CONDITION_TODAY, CONDITION_YESTERDAY]\n};\n\n/**\n * Get options list for conditional filter by data type (e.q: `'text'`, `'numeric'`, `'date'`).\n *\n * @private\n * @param {string} type The data type.\n * @returns {object}\n */\nexport default function getOptionsList(type) {\n  const items = [];\n  let typeName = type;\n  if (!TYPES[typeName]) {\n    typeName = TYPE_TEXT;\n  }\n  arrayEach(TYPES[typeName], typeValue => {\n    let option;\n    if (typeValue === SEPARATOR) {\n      option = {\n        name: SEPARATOR\n      };\n    } else {\n      option = clone(getConditionDescriptor(typeValue));\n    }\n    items.push(option);\n  });\n  return items;\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { clone, extend, mixin, objectEach } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport EventManager from \"../../../eventManager.mjs\";\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nconst STATE_BUILT = 'built';\nconst STATE_BUILDING = 'building';\nconst EVENTS_TO_REGISTER = ['click', 'input', 'keydown', 'keypress', 'keyup', 'focus', 'blur', 'change'];\n\n/**\n * @private\n */\nexport class BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      className: '',\n      value: '',\n      tagName: 'div',\n      children: [],\n      wrapIt: true\n    });\n  }\n\n  /**\n   * Instance of Handsontable.\n   *\n   * @type {Core}\n   */\n\n  constructor(hotInstance, options) {\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Instance of EventManager.\n     *\n     * @type {EventManager}\n     */\n    _defineProperty(this, \"eventManager\", new EventManager(this));\n    /**\n     * List of element options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", void 0);\n    /**\n     * Build root DOM element.\n     *\n     * @type {Element}\n     * @private\n     */\n    _defineProperty(this, \"_element\", void 0);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"buildState\", void 0);\n    this.hot = hotInstance;\n    this.options = extend(BaseUI.DEFAULTS, options);\n    this._element = this.hot.rootDocument.createElement(this.options.wrapIt ? 'div' : this.options.tagName);\n  }\n\n  /**\n   * Set the element value.\n   *\n   * @param {*} value Set the component value.\n   */\n  setValue(value) {\n    this.options.value = value;\n    this.update();\n  }\n\n  /**\n   * Get the element value.\n   *\n   * @returns {*}\n   */\n  getValue() {\n    return this.options.value;\n  }\n\n  /**\n   * Get element as a DOM object.\n   *\n   * @returns {Element}\n   */\n  get element() {\n    if (this.buildState === STATE_BUILDING) {\n      return this._element;\n    }\n    if (this.buildState === STATE_BUILT) {\n      this.update();\n      return this._element;\n    }\n    this.buildState = STATE_BUILDING;\n    this.build();\n    this.buildState = STATE_BUILT;\n    return this._element;\n  }\n\n  /**\n   * Check if element was built (built whole DOM structure).\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.buildState === STATE_BUILT;\n  }\n\n  /**\n   * Translate value if it is possible. It's checked if value belongs to namespace of translated phrases.\n   *\n   * @param {*} value Value which will may be translated.\n   * @returns {*} Translated value if translation was possible, original value otherwise.\n   */\n  translateIfPossible(value) {\n    if (typeof value === 'string' && value.startsWith(C.FILTERS_NAMESPACE)) {\n      return this.hot.getTranslatedPhrase(value);\n    }\n    return value;\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    const registerEvent = (element, eventName) => {\n      this.eventManager.addEventListener(element, eventName, event => this.runLocalHooks(eventName, event, this));\n    };\n    if (!this.buildState) {\n      this.buildState = STATE_BUILDING;\n    }\n\n    // prevents \"hot.unlisten()\" call when clicked\n    // (https://github.com/handsontable/handsontable/blob/master/handsontable/src/tableView.js#L317-L321)\n    this._element.setAttribute('data-hot-input', true);\n    if (this.options.tabIndex !== undefined) {\n      this._element.setAttribute('tabindex', this.options.tabIndex);\n    }\n    if (this.options.role !== undefined) {\n      this._element.setAttribute('role', this.options.role);\n    }\n    if (this.options.className) {\n      addClass(this._element, this.options.className);\n    }\n    if (this.options.children.length) {\n      arrayEach(this.options.children, element => this._element.appendChild(element.element));\n    } else if (this.options.wrapIt) {\n      const element = this.hot.rootDocument.createElement(this.options.tagName);\n\n      // prevents \"hot.unlisten()\" call when clicked\n      // (https://github.com/handsontable/handsontable/blob/master/handsontable/src/tableView.js#L317-L321)\n      element.setAttribute('data-hot-input', true);\n      objectEach(this.options, (value, key) => {\n        if (element[key] !== undefined && key !== 'className' && key !== 'tagName' && key !== 'children') {\n          element[key] = this.translateIfPossible(value);\n        }\n      });\n      this._element.appendChild(element);\n      arrayEach(EVENTS_TO_REGISTER, eventName => registerEvent(element, eventName));\n    } else {\n      arrayEach(EVENTS_TO_REGISTER, eventName => registerEvent(this._element, eventName));\n    }\n  }\n\n  /**\n   * Update DOM structure.\n   */\n  update() {}\n\n  /**\n   * Reset to initial state.\n   */\n  reset() {\n    this.options.value = '';\n    this.update();\n  }\n\n  /**\n   * Show element.\n   */\n  show() {\n    this.element.style.display = '';\n  }\n\n  /**\n   * Hide element.\n   */\n  hide() {\n    this.element.style.display = 'none';\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {}\n  destroy() {\n    this.eventManager.destroy();\n    this.eventManager = null;\n    this.hot = null;\n    if (this._element.parentNode) {\n      this._element.parentNode.removeChild(this._element);\n    }\n    this._element = null;\n  }\n}\nmixin(BaseUI, localHooks);", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { clone, extend } from \"../../../helpers/object.mjs\";\nimport { BaseUI } from \"./_base.mjs\";\n/**\n * @private\n * @class InputUI\n */\nvar _input = /*#__PURE__*/new WeakMap();\nvar _onKeyup = /*#__PURE__*/new WeakSet();\nexport class InputUI extends BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      placeholder: '',\n      type: 'text',\n      tagName: 'input',\n      tabIndex: -1\n    });\n  }\n\n  /**\n   * The reference to the input element.\n   *\n   * @type {HTMLInputElement}\n   */\n\n  constructor(hotInstance, options) {\n    super(hotInstance, extend(InputUI.DEFAULTS, options));\n    /**\n     * OnKeyup listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onKeyup);\n    _classPrivateFieldInitSpec(this, _input, {\n      writable: true,\n      value: void 0\n    });\n    this.registerHooks();\n  }\n\n  /**\n   * Register all necessary hooks.\n   */\n  registerHooks() {\n    this.addLocalHook('keyup', event => _classPrivateMethodGet(this, _onKeyup, _onKeyup2).call(this, event));\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    super.build();\n    const icon = this.hot.rootDocument.createElement('div');\n    _classPrivateFieldSet(this, _input, this._element.firstChild);\n    addClass(this._element, 'htUIInput');\n    addClass(icon, 'htUIInputIcon');\n    this._element.appendChild(icon);\n    this.update();\n  }\n\n  /**\n   * Update element.\n   */\n  update() {\n    if (!this.isBuilt()) {\n      return;\n    }\n    _classPrivateFieldGet(this, _input).type = this.options.type;\n    _classPrivateFieldGet(this, _input).placeholder = this.translateIfPossible(this.options.placeholder);\n    _classPrivateFieldGet(this, _input).value = this.translateIfPossible(this.options.value);\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {\n    if (this.isBuilt()) {\n      _classPrivateFieldGet(this, _input).focus();\n    }\n  }\n}\nfunction _onKeyup2(event) {\n  this.options.value = event.target.value;\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { Menu } from \"../../../plugins/contextMenu/menu/index.mjs\";\nimport { clone, extend } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { setAttribute } from \"../../../helpers/dom/element.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { SEPARATOR } from \"../../../plugins/contextMenu/predefinedItems/index.mjs\";\nimport { BaseUI } from \"./_base.mjs\";\nimport { A11Y_HIDDEN, A11Y_LISTBOX } from \"../../../helpers/a11y.mjs\";\n/**\n * @private\n * @class SelectUI\n */\nvar _menu = /*#__PURE__*/new WeakMap();\nvar _items = /*#__PURE__*/new WeakMap();\nvar _caption = /*#__PURE__*/new WeakMap();\nvar _captionElement = /*#__PURE__*/new WeakMap();\nvar _dropdown = /*#__PURE__*/new WeakMap();\nvar _onMenuSelect = /*#__PURE__*/new WeakSet();\nvar _onMenuClosed = /*#__PURE__*/new WeakSet();\nvar _onClick = /*#__PURE__*/new WeakSet();\nexport class SelectUI extends BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      className: 'htUISelect',\n      wrapIt: false,\n      tabIndex: -1\n    });\n  }\n\n  /**\n   * Instance of {@link Menu}.\n   *\n   * @type {Menu}\n   */\n\n  constructor(hotInstance, options) {\n    super(hotInstance, extend(SelectUI.DEFAULTS, options));\n    /**\n     * On element click listener.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onClick);\n    /**\n     * On menu closed listener.\n     */\n    _classPrivateMethodInitSpec(this, _onMenuClosed);\n    /**\n     * On menu selected listener.\n     *\n     * @param {object} command Selected item.\n     */\n    _classPrivateMethodInitSpec(this, _onMenuSelect);\n    _classPrivateFieldInitSpec(this, _menu, {\n      writable: true,\n      value: null\n    });\n    /**\n     * List of available select options.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _items, {\n      writable: true,\n      value: []\n    });\n    /**\n     * The reference to the BaseUI instance of the caption.\n     *\n     * @type {BaseUI}\n     */\n    _classPrivateFieldInitSpec(this, _caption, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * The reference to the table caption element.\n     *\n     * @type {HTMLTableCaptionElement}\n     */\n    _classPrivateFieldInitSpec(this, _captionElement, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * The reference to the BaseUI instance of the dropdown.\n     *\n     * @type {BaseUI}\n     */\n    _classPrivateFieldInitSpec(this, _dropdown, {\n      writable: true,\n      value: void 0\n    });\n    this.registerHooks();\n  }\n\n  /**\n   * Gets the instance of the Menu.\n   *\n   * @returns {Menu}\n   */\n  getMenu() {\n    return _classPrivateFieldGet(this, _menu);\n  }\n\n  /**\n   * Register all necessary hooks.\n   */\n  registerHooks() {\n    this.addLocalHook('click', () => _classPrivateMethodGet(this, _onClick, _onClick2).call(this));\n  }\n\n  /**\n   * Set options which can be selected in the list.\n   *\n   * @param {Array} items Array of objects with required keys `key` and `name`.\n   */\n  setItems(items) {\n    _classPrivateFieldSet(this, _items, this.translateNames(items));\n    if (_classPrivateFieldGet(this, _menu)) {\n      _classPrivateFieldGet(this, _menu).setMenuItems(_classPrivateFieldGet(this, _items));\n    }\n  }\n\n  /**\n   * Translate names of menu items.\n   *\n   * @param {Array} items Array of objects with required keys `key` and `name`.\n   * @returns {Array} Items with translated `name` keys.\n   */\n  translateNames(items) {\n    arrayEach(items, item => {\n      item.name = this.translateIfPossible(item.name);\n    });\n    return items;\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    super.build();\n    _classPrivateFieldSet(this, _menu, new Menu(this.hot, {\n      className: 'htSelectUI htFiltersConditionsMenu',\n      keepInViewport: false,\n      standalone: true,\n      container: this.options.menuContainer\n    }));\n    _classPrivateFieldGet(this, _menu).setMenuItems(_classPrivateFieldGet(this, _items));\n    const caption = new BaseUI(this.hot, {\n      className: 'htUISelectCaption'\n    });\n    const dropdown = new BaseUI(this.hot, {\n      className: 'htUISelectDropdown'\n    });\n    _classPrivateFieldSet(this, _caption, caption);\n    _classPrivateFieldSet(this, _captionElement, caption.element);\n    _classPrivateFieldSet(this, _dropdown, dropdown);\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(dropdown.element, [A11Y_HIDDEN()]);\n      setAttribute(this._element, [A11Y_LISTBOX()]);\n    }\n    arrayEach([caption, dropdown], element => this._element.appendChild(element.element));\n    _classPrivateFieldGet(this, _menu).addLocalHook('select', command => _classPrivateMethodGet(this, _onMenuSelect, _onMenuSelect2).call(this, command));\n    _classPrivateFieldGet(this, _menu).addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onMenuClosed, _onMenuClosed2).call(this));\n    this.update();\n  }\n\n  /**\n   * Update DOM structure.\n   */\n  update() {\n    if (!this.isBuilt()) {\n      return;\n    }\n    let conditionName;\n    if (this.options.value) {\n      conditionName = this.options.value.name;\n    } else {\n      conditionName = _classPrivateFieldGet(this, _menu).hot.getTranslatedPhrase(C.FILTERS_CONDITIONS_NONE);\n    }\n    _classPrivateFieldGet(this, _captionElement).textContent = conditionName;\n    super.update();\n  }\n\n  /**\n   * Open select dropdown menu with available options.\n   */\n  openOptions() {\n    const rect = this.element.getBoundingClientRect();\n    if (_classPrivateFieldGet(this, _menu)) {\n      _classPrivateFieldGet(this, _menu).open();\n      _classPrivateFieldGet(this, _menu).setPosition({\n        left: this.hot.isLtr() ? rect.left - 5 : rect.left - 31,\n        top: rect.top - 1,\n        width: rect.width,\n        height: rect.height\n      });\n      _classPrivateFieldGet(this, _menu).getNavigator().toFirstItem();\n      _classPrivateFieldGet(this, _menu).getKeyboardShortcutsCtrl().addCustomShortcuts([{\n        keys: [['Tab'], ['Shift', 'Tab']],\n        callback: event => {\n          this.closeOptions();\n          this.runLocalHooks('tabKeydown', event);\n        }\n      }, {\n        keys: [['Control/Meta', 'A']],\n        callback: () => false\n      }]);\n    }\n  }\n\n  /**\n   * Close select dropdown menu.\n   */\n  closeOptions() {\n    if (_classPrivateFieldGet(this, _menu)) {\n      _classPrivateFieldGet(this, _menu).close();\n    }\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {\n    if (this.isBuilt()) {\n      this.element.focus();\n    }\n  }\n  /**\n   * Destroy instance.\n   */\n  destroy() {\n    if (_classPrivateFieldGet(this, _menu)) {\n      _classPrivateFieldGet(this, _menu).destroy();\n      _classPrivateFieldSet(this, _menu, null);\n    }\n    if (_classPrivateFieldGet(this, _caption)) {\n      _classPrivateFieldGet(this, _caption).destroy();\n    }\n    if (_classPrivateFieldGet(this, _dropdown)) {\n      _classPrivateFieldGet(this, _dropdown).destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _onMenuSelect2(command) {\n  if (command.name !== SEPARATOR) {\n    this.options.value = command;\n    this.update();\n    this.runLocalHooks('select', this.options.value);\n  }\n}\nfunction _onMenuClosed2() {\n  this.runLocalHooks('afterClose');\n}\nfunction _onClick2() {\n  this.openOptions();\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { clone } from \"../../../helpers/object.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { BaseComponent } from \"./_base.mjs\";\nimport getOptionsList, { CONDITION_NONE } from \"../constants.mjs\";\nimport { InputUI } from \"../ui/input.mjs\";\nimport { SelectUI } from \"../ui/select.mjs\";\nimport { getConditionDescriptor } from \"../conditionRegisterer.mjs\";\n/**\n * @private\n * @class ConditionComponent\n */\nvar _onConditionSelect = /*#__PURE__*/new WeakSet();\nvar _onInputKeyDown = /*#__PURE__*/new WeakSet();\nexport class ConditionComponent extends BaseComponent {\n  constructor(hotInstance, options) {\n    super(hotInstance, {\n      id: options.id,\n      stateless: false\n    });\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The DOM event object.\n     */\n    _classPrivateMethodInitSpec(this, _onInputKeyDown);\n    /**\n     * On condition select listener.\n     *\n     * @param {object} command Menu item object (command).\n     */\n    _classPrivateMethodInitSpec(this, _onConditionSelect);\n    /**\n     * The name of the component.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"name\", '');\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"addSeparator\", false);\n    this.name = options.name;\n    this.addSeparator = options.addSeparator;\n    this.elements.push(new SelectUI(this.hot, {\n      menuContainer: options.menuContainer\n    }));\n    this.elements.push(new InputUI(this.hot, {\n      placeholder: C.FILTERS_BUTTONS_PLACEHOLDER_VALUE\n    }));\n    this.elements.push(new InputUI(this.hot, {\n      placeholder: C.FILTERS_BUTTONS_PLACEHOLDER_SECOND_VALUE\n    }));\n    this.registerHooks();\n  }\n\n  /**\n   * Register all necessary hooks.\n   *\n   * @private\n   */\n  registerHooks() {\n    this.getSelectElement().addLocalHook('select', command => _classPrivateMethodGet(this, _onConditionSelect, _onConditionSelect2).call(this, command)).addLocalHook('afterClose', () => this.runLocalHooks('afterClose')).addLocalHook('tabKeydown', event => this.runLocalHooks('selectTabKeydown', event));\n    arrayEach(this.getInputElements(), input => {\n      input.addLocalHook('keydown', event => _classPrivateMethodGet(this, _onInputKeyDown, _onInputKeyDown2).call(this, event));\n    });\n  }\n\n  /**\n   * Set state of the component.\n   *\n   * @param {object} value State to restore.\n   */\n  setState(value) {\n    this.reset();\n    if (!value) {\n      return;\n    }\n    const copyOfCommand = clone(value.command);\n    if (copyOfCommand.name.startsWith(C.FILTERS_CONDITIONS_NAMESPACE)) {\n      copyOfCommand.name = this.hot.getTranslatedPhrase(copyOfCommand.name);\n    }\n    this.getSelectElement().setValue(copyOfCommand);\n    arrayEach(value.args, (arg, index) => {\n      if (index > copyOfCommand.inputsCount - 1) {\n        return false;\n      }\n      const element = this.getInputElement(index);\n      element.setValue(arg);\n      element[copyOfCommand.inputsCount > index ? 'show' : 'hide']();\n      if (!index) {\n        this.hot._registerTimeout(() => element.focus(), 10);\n      }\n    });\n  }\n\n  /**\n   * Export state of the component (get selected filter and filter arguments).\n   *\n   * @returns {object} Returns object where `command` key keeps used condition filter and `args` key its arguments.\n   */\n  getState() {\n    const command = this.getSelectElement().getValue() || getConditionDescriptor(CONDITION_NONE);\n    const args = [];\n    arrayEach(this.getInputElements(), (element, index) => {\n      if (command.inputsCount > index) {\n        args.push(element.getValue());\n      }\n    });\n    return {\n      command,\n      args\n    };\n  }\n\n  /**\n   * Update state of component.\n   *\n   * @param {object} condition The condition object.\n   * @param {object} condition.command The command object with condition name as `key` property.\n   * @param {Array} condition.args An array of values to compare.\n   * @param {number} column Physical column index.\n   */\n  updateState(condition, column) {\n    const command = condition ? getConditionDescriptor(condition.name) : getConditionDescriptor(CONDITION_NONE);\n    this.state.setValueAtIndex(column, {\n      command,\n      args: condition ? condition.args : []\n    });\n    if (!condition) {\n      arrayEach(this.getInputElements(), element => element.setValue(null));\n    }\n  }\n\n  /**\n   * Get select element.\n   *\n   * @returns {SelectUI}\n   */\n  getSelectElement() {\n    return this.elements.filter(element => element instanceof SelectUI)[0];\n  }\n\n  /**\n   * Get input element.\n   *\n   * @param {number} index Index an array of elements.\n   * @returns {InputUI}\n   */\n  getInputElement() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return this.getInputElements()[index];\n  }\n\n  /**\n   * Get input elements.\n   *\n   * @returns {Array}\n   */\n  getInputElements() {\n    return this.elements.filter(element => element instanceof InputUI);\n  }\n\n  /**\n   * Get menu object descriptor.\n   *\n   * @returns {object}\n   */\n  getMenuItemDescriptor() {\n    return {\n      key: this.id,\n      name: this.name,\n      isCommand: false,\n      disableSelection: true,\n      hidden: () => this.isHidden(),\n      renderer: (hot, wrapper, row, col, prop, value) => {\n        addClass(wrapper.parentNode, 'htFiltersMenuCondition');\n        if (this.addSeparator) {\n          addClass(wrapper.parentNode, 'border');\n        }\n        const label = this.hot.rootDocument.createElement('div');\n        addClass(label, 'htFiltersMenuLabel');\n        label.textContent = value;\n        wrapper.appendChild(label);\n        arrayEach(this.elements, ui => wrapper.appendChild(ui.element));\n        return wrapper;\n      }\n    };\n  }\n\n  /**\n   * Reset elements to their initial state.\n   */\n  reset() {\n    const selectedColumn = this.hot.getPlugin('filters').getSelectedColumn();\n    let items = [getConditionDescriptor(CONDITION_NONE)];\n    if (selectedColumn !== null) {\n      const {\n        visualIndex\n      } = selectedColumn;\n      items = getOptionsList(this.hot.getDataType(0, visualIndex, this.hot.countRows(), visualIndex));\n    }\n    arrayEach(this.getInputElements(), element => element.hide());\n    this.getSelectElement().setItems(items);\n    super.reset();\n    // Select element as default 'None'\n    this.getSelectElement().setValue(items[0]);\n  }\n}\nfunction _onConditionSelect2(command) {\n  arrayEach(this.getInputElements(), (element, index) => {\n    element[command.inputsCount > index ? 'show' : 'hide']();\n    if (index === 0) {\n      this.hot._registerTimeout(() => element.focus(), 10);\n    }\n  });\n  this.runLocalHooks('change', command);\n}\nfunction _onInputKeyDown2(event) {\n  if (isKey(event.keyCode, 'ESCAPE')) {\n    this.runLocalHooks('cancel');\n    stopImmediatePropagation(event);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { clone, extend } from \"../../../helpers/object.mjs\";\nimport { BaseUI } from \"./_base.mjs\";\n/**\n * @private\n * @class RadioInputUI\n */\nvar _input = /*#__PURE__*/new WeakMap();\nvar _label = /*#__PURE__*/new WeakMap();\nexport class RadioInputUI extends BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      type: 'radio',\n      tagName: 'input',\n      className: 'htUIRadio',\n      label: {}\n    });\n  }\n\n  /**\n   * The reference to the input element.\n   *\n   * @type {HTMLInputElement}\n   */\n\n  constructor(hotInstance, options) {\n    super(hotInstance, extend(RadioInputUI.DEFAULTS, options));\n    _classPrivateFieldInitSpec(this, _input, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * The reference to the label element.\n     *\n     * @type {HTMLLabelElement}\n     */\n    _classPrivateFieldInitSpec(this, _label, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    super.build();\n    const label = this.hot.rootDocument.createElement('label');\n    label.textContent = this.translateIfPossible(this.options.label.textContent);\n    label.htmlFor = this.translateIfPossible(this.options.label.htmlFor);\n    _classPrivateFieldSet(this, _label, label);\n    _classPrivateFieldSet(this, _input, this._element.firstChild);\n    _classPrivateFieldGet(this, _input).checked = this.options.checked;\n    this._element.appendChild(label);\n    this.update();\n  }\n\n  /**\n   * Update element.\n   */\n  update() {\n    if (!this.isBuilt()) {\n      return;\n    }\n    _classPrivateFieldGet(this, _label).textContent = this.translateIfPossible(this.options.label.textContent);\n  }\n\n  /**\n   * Check if radio button is checked.\n   *\n   * @returns {boolean}\n   */\n  isChecked() {\n    return _classPrivateFieldGet(this, _input).checked;\n  }\n\n  /**\n   * Set input checked attribute.\n   *\n   * @param {boolean} value Set the component state.\n   */\n  setChecked() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.isBuilt()) {\n      _classPrivateFieldGet(this, _input).checked = value;\n    }\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {\n    if (this.isBuilt()) {\n      _classPrivateFieldGet(this, _input).focus();\n    }\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { toSingleLine } from \"../../../helpers/templateLiteralTag.mjs\";\nimport { BaseComponent } from \"./_base.mjs\";\nimport { getOperationName } from \"../logicalOperationRegisterer.mjs\";\nimport { OPERATION_ID as OPERATION_AND } from \"../logicalOperations/conjunction.mjs\";\nimport { OPERATION_ID as OPERATION_OR } from \"../logicalOperations/disjunction.mjs\";\nimport { OPERATION_ID as OPERATION_OR_THEN_VARIABLE } from \"../logicalOperations/disjunctionWithExtraCondition.mjs\";\nimport { RadioInputUI } from \"../ui/radioInput.mjs\";\nconst SELECTED_AT_START_ELEMENT_INDEX = 0;\n\n/**\n * @private\n * @class OperatorsComponent\n */\nvar _onRadioInputChange = /*#__PURE__*/new WeakSet();\nexport class OperatorsComponent extends BaseComponent {\n  constructor(hotInstance, options) {\n    super(hotInstance, {\n      id: options.id,\n      stateless: false\n    });\n    /**\n     * OnChange listener.\n     *\n     * @param {Event} event The DOM event object.\n     */\n    _classPrivateMethodInitSpec(this, _onRadioInputChange);\n    /**\n     * The name of the component.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"name\", '');\n    this.name = options.name;\n    this.buildOperatorsElement();\n  }\n\n  /**\n   * Get menu object descriptor.\n   *\n   * @returns {object}\n   */\n  getMenuItemDescriptor() {\n    return {\n      key: this.id,\n      name: this.name,\n      isCommand: false,\n      disableSelection: true,\n      hidden: () => this.isHidden(),\n      renderer: (hot, wrapper) => {\n        addClass(wrapper.parentNode, 'htFiltersMenuOperators');\n        arrayEach(this.elements, ui => wrapper.appendChild(ui.element));\n        return wrapper;\n      }\n    };\n  }\n\n  /**\n   * Add RadioInputUI elements to component.\n   *\n   * @private\n   */\n  buildOperatorsElement() {\n    const operationKeys = [OPERATION_AND, OPERATION_OR];\n    arrayEach(operationKeys, operation => {\n      const radioInput = new RadioInputUI(this.hot, {\n        name: 'operator',\n        label: {\n          htmlFor: operation,\n          textContent: getOperationName(operation)\n        },\n        value: operation,\n        checked: operation === operationKeys[SELECTED_AT_START_ELEMENT_INDEX],\n        id: operation\n      });\n      radioInput.addLocalHook('change', event => _classPrivateMethodGet(this, _onRadioInputChange, _onRadioInputChange2).call(this, event));\n      this.elements.push(radioInput);\n    });\n  }\n\n  /**\n   * Set state of operators component to check radio input at specific `index`.\n   *\n   * @param {number} searchedIndex Index of radio input to check.\n   */\n  setChecked(searchedIndex) {\n    if (this.elements.length < searchedIndex) {\n      throw Error(toSingleLine`Radio button with index ${searchedIndex} doesn't exist.`);\n    }\n    arrayEach(this.elements, (element, index) => {\n      element.setChecked(index === searchedIndex);\n    });\n  }\n\n  /**\n   * Get `id` of active operator.\n   *\n   * @returns {string}\n   */\n  getActiveOperationId() {\n    const operationElement = this.elements.find(element => element instanceof RadioInputUI && element.isChecked());\n    if (operationElement) {\n      return operationElement.getValue();\n    }\n    return OPERATION_AND;\n  }\n\n  /**\n   * Export state of the component (get selected operator).\n   *\n   * @returns {string} Returns `id` of selected operator.\n   */\n  getState() {\n    return this.getActiveOperationId();\n  }\n\n  /**\n   * Set state of the component.\n   *\n   * @param {object} value State to restore.\n   */\n  setState(value) {\n    this.reset();\n    if (value && this.getActiveOperationId() !== value) {\n      arrayEach(this.elements, element => {\n        element.setChecked(element.getValue() === value);\n      });\n    }\n  }\n\n  /**\n   * Update state of component.\n   *\n   * @param {string} [operationId='conjunction'] Id of selected operation.\n   * @param {number} column Physical column index.\n   */\n  updateState() {\n    let operationId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : OPERATION_AND;\n    let column = arguments.length > 1 ? arguments[1] : undefined;\n    let selectedOperationId = operationId;\n    if (selectedOperationId === OPERATION_OR_THEN_VARIABLE) {\n      selectedOperationId = OPERATION_OR;\n    }\n    this.state.setValueAtIndex(column, selectedOperationId);\n  }\n\n  /**\n   * Reset elements to their initial state.\n   */\n  reset() {\n    this.setChecked(SELECTED_AT_START_ELEMENT_INDEX);\n  }\n}\nfunction _onRadioInputChange2(event) {\n  this.setState(event.target.value);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { clone, extend } from \"../../../helpers/object.mjs\";\nimport { BaseUI } from \"./_base.mjs\";\n/**\n * @private\n * @class LinkUI\n */\nvar _link = /*#__PURE__*/new WeakMap();\nexport class LinkUI extends BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      href: '#',\n      tagName: 'a',\n      tabIndex: -1,\n      role: 'button'\n    });\n  }\n\n  /**\n   * The reference to the link element.\n   *\n   * @type {HTMLLinkElement}\n   */\n\n  constructor(hotInstance, options) {\n    super(hotInstance, extend(LinkUI.DEFAULTS, options));\n    _classPrivateFieldInitSpec(this, _link, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    super.build();\n    _classPrivateFieldSet(this, _link, this._element.firstChild);\n  }\n\n  /**\n   * Update element.\n   */\n  update() {\n    if (!this.isBuilt()) {\n      return;\n    }\n    _classPrivateFieldGet(this, _link).textContent = this.translateIfPossible(this.options.textContent);\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {\n    if (this.isBuilt()) {\n      _classPrivateFieldGet(this, _link).focus();\n    }\n  }\n\n  /**\n   * Activate the element.\n   */\n  activate() {\n    _classPrivateFieldGet(this, _link).click();\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { addClass, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { clone, extend } from \"../../../helpers/object.mjs\";\nimport { arrayFilter, arrayMap, arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { dataRowToChangesArray } from \"../../../helpers/data.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { BaseUI } from \"./_base.mjs\";\nimport { InputUI } from \"./input.mjs\";\nimport { LinkUI } from \"./link.mjs\";\nimport { createArrayAssertion } from \"../utils.mjs\";\nconst SHORTCUTS_GROUP = 'multipleSelect.itemBox';\n\n/**\n * @private\n * @class MultipleSelectUI\n */\nvar _items = /*#__PURE__*/new WeakMap();\nvar _itemsBox = /*#__PURE__*/new WeakMap();\nvar _locale = /*#__PURE__*/new WeakMap();\nvar _searchInput = /*#__PURE__*/new WeakMap();\nvar _selectAllUI = /*#__PURE__*/new WeakMap();\nvar _clearAllUI = /*#__PURE__*/new WeakMap();\nvar _onInput = /*#__PURE__*/new WeakSet();\nvar _onInputKeyDown = /*#__PURE__*/new WeakSet();\nvar _onSelectAllClick = /*#__PURE__*/new WeakSet();\nvar _onClearAllClick = /*#__PURE__*/new WeakSet();\nexport class MultipleSelectUI extends BaseUI {\n  static get DEFAULTS() {\n    return clone({\n      className: 'htUIMultipleSelect',\n      value: []\n    });\n  }\n\n  /**\n   * List of available select options.\n   *\n   * @type {Array}\n   */\n\n  constructor(hotInstance, options) {\n    super(hotInstance, extend(MultipleSelectUI.DEFAULTS, options));\n    /**\n     * On click listener for \"Clear\" link.\n     *\n     * @param {DOMEvent} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onClearAllClick);\n    /**\n     * On click listener for \"Select all\" link.\n     *\n     * @param {DOMEvent} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onSelectAllClick);\n    /**\n     * 'keydown' event listener for input element.\n     *\n     * @param {Event} event DOM event.\n     */\n    _classPrivateMethodInitSpec(this, _onInputKeyDown);\n    /**\n     * 'input' event listener for input element.\n     *\n     * @param {Event} event DOM event.\n     */\n    _classPrivateMethodInitSpec(this, _onInput);\n    _classPrivateFieldInitSpec(this, _items, {\n      writable: true,\n      value: []\n    });\n    /**\n     * Handsontable instance used as items list element.\n     *\n     * @type {Handsontable}\n     */\n    _classPrivateFieldInitSpec(this, _itemsBox, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * A locale for the component used to compare filtered values.\n     *\n     * @type {string}\n     */\n    _classPrivateFieldInitSpec(this, _locale, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Input element.\n     *\n     * @type {InputUI}\n     */\n    _classPrivateFieldInitSpec(this, _searchInput, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * \"Select all\" UI element.\n     *\n     * @type {LinkUI}\n     */\n    _classPrivateFieldInitSpec(this, _selectAllUI, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * \"Clear\" UI element.\n     *\n     * @type {LinkUI}\n     */\n    _classPrivateFieldInitSpec(this, _clearAllUI, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _searchInput, new InputUI(this.hot, {\n      placeholder: C.FILTERS_BUTTONS_PLACEHOLDER_SEARCH,\n      className: 'htUIMultipleSelectSearch'\n    }));\n    _classPrivateFieldSet(this, _selectAllUI, new LinkUI(this.hot, {\n      textContent: C.FILTERS_BUTTONS_SELECT_ALL,\n      className: 'htUISelectAll'\n    }));\n    _classPrivateFieldSet(this, _clearAllUI, new LinkUI(this.hot, {\n      textContent: C.FILTERS_BUTTONS_CLEAR,\n      className: 'htUIClearAll'\n    }));\n    this.registerHooks();\n  }\n\n  /**\n   * Gets the instance of the internal Handsontable that acts here as a listbox component.\n   *\n   * @returns {Handsontable}\n   */\n  getItemsBox() {\n    return _classPrivateFieldGet(this, _itemsBox);\n  }\n\n  /**\n   * Register all necessary hooks.\n   */\n  registerHooks() {\n    _classPrivateFieldGet(this, _searchInput).addLocalHook('keydown', event => _classPrivateMethodGet(this, _onInputKeyDown, _onInputKeyDown2).call(this, event));\n    _classPrivateFieldGet(this, _searchInput).addLocalHook('input', event => _classPrivateMethodGet(this, _onInput, _onInput2).call(this, event));\n    _classPrivateFieldGet(this, _selectAllUI).addLocalHook('click', event => _classPrivateMethodGet(this, _onSelectAllClick, _onSelectAllClick2).call(this, event));\n    _classPrivateFieldGet(this, _clearAllUI).addLocalHook('click', event => _classPrivateMethodGet(this, _onClearAllClick, _onClearAllClick2).call(this, event));\n  }\n\n  /**\n   * Set available options.\n   *\n   * @param {Array} items Array of objects with `checked` and `label` property.\n   */\n  setItems(items) {\n    _classPrivateFieldSet(this, _items, items);\n    if (_classPrivateFieldGet(this, _itemsBox)) {\n      _classPrivateFieldGet(this, _itemsBox).loadData(_classPrivateFieldGet(this, _items));\n    }\n  }\n\n  /**\n   * Set a locale for the component.\n   *\n   * @param {string} locale Locale used for filter actions performed on data, ie. `en-US`.\n   */\n  setLocale(locale) {\n    _classPrivateFieldSet(this, _locale, locale);\n  }\n\n  /**\n   * Get a locale for the component.\n   *\n   * @returns {string}\n   */\n  getLocale() {\n    return _classPrivateFieldGet(this, _locale);\n  }\n\n  /**\n   * Get all available options.\n   *\n   * @returns {Array}\n   */\n  getItems() {\n    return [..._classPrivateFieldGet(this, _items)];\n  }\n\n  /**\n   * Get element value.\n   *\n   * @returns {Array} Array of selected values.\n   */\n  getValue() {\n    return itemsToValue(_classPrivateFieldGet(this, _items));\n  }\n\n  /**\n   * Gets the instance of the search input element.\n   *\n   * @returns {InputUI}\n   */\n  getSearchInputElement() {\n    return _classPrivateFieldGet(this, _searchInput);\n  }\n\n  /**\n   * Gets the instance of the \"select all\" link element.\n   *\n   * @returns {LinkUI}\n   */\n  getSelectAllElement() {\n    return _classPrivateFieldGet(this, _selectAllUI);\n  }\n\n  /**\n   * Gets the instance of the \"clear\" link element.\n   *\n   * @returns {LinkUI}\n   */\n  getClearAllElement() {\n    return _classPrivateFieldGet(this, _clearAllUI);\n  }\n\n  /**\n   * Check if all values listed in element are selected.\n   *\n   * @returns {boolean}\n   */\n  isSelectedAllValues() {\n    return _classPrivateFieldGet(this, _items).length === this.getValue().length;\n  }\n\n  /**\n   * Build DOM structure.\n   */\n  build() {\n    super.build();\n    const {\n      rootDocument\n    } = this.hot;\n    const itemsBoxWrapper = rootDocument.createElement('div');\n    const selectionControl = new BaseUI(this.hot, {\n      className: 'htUISelectionControls',\n      children: [_classPrivateFieldGet(this, _selectAllUI), _classPrivateFieldGet(this, _clearAllUI)]\n    });\n    this._element.appendChild(_classPrivateFieldGet(this, _searchInput).element);\n    this._element.appendChild(selectionControl.element);\n    this._element.appendChild(itemsBoxWrapper);\n    const hotInitializer = wrapper => {\n      if (!this._element) {\n        return;\n      }\n      if (_classPrivateFieldGet(this, _itemsBox)) {\n        _classPrivateFieldGet(this, _itemsBox).destroy();\n      }\n      addClass(wrapper, 'htUIMultipleSelectHot');\n      // Constructs and initializes a new Handsontable instance\n      _classPrivateFieldSet(this, _itemsBox, new this.hot.constructor(wrapper, {\n        data: _classPrivateFieldGet(this, _items),\n        columns: [{\n          data: 'checked',\n          type: 'checkbox',\n          label: {\n            property: 'visualValue',\n            position: 'after'\n          }\n        }],\n        beforeRenderer: (TD, row, col, prop, value, cellProperties) => {\n          TD.title = cellProperties.instance.getDataAtRowProp(row, cellProperties.label.property);\n        },\n        afterListen: () => {\n          this.runLocalHooks('focus', this);\n        },\n        beforeOnCellMouseUp: () => {\n          _classPrivateFieldGet(this, _itemsBox).listen();\n        },\n        maxCols: 1,\n        autoWrapCol: true,\n        height: 110,\n        // Workaround for #151.\n        colWidths: () => _classPrivateFieldGet(this, _itemsBox).container.scrollWidth - getScrollbarWidth(rootDocument),\n        copyPaste: false,\n        disableVisualSelection: 'area',\n        fillHandle: false,\n        fragmentSelection: 'cell',\n        tabMoves: {\n          row: 1,\n          col: 0\n        },\n        layoutDirection: this.hot.isRtl() ? 'rtl' : 'ltr'\n      }));\n      _classPrivateFieldGet(this, _itemsBox).init();\n      const shortcutManager = _classPrivateFieldGet(this, _itemsBox).getShortcutManager();\n      const gridContext = shortcutManager.getContext('grid');\n      gridContext.removeShortcutsByKeys(['Tab']);\n      gridContext.removeShortcutsByKeys(['Shift', 'Tab']);\n      gridContext.addShortcut({\n        keys: [['Escape']],\n        callback: event => {\n          this.runLocalHooks('keydown', event, this);\n        },\n        group: SHORTCUTS_GROUP\n      });\n      gridContext.addShortcut({\n        keys: [['Tab'], ['Shift', 'Tab']],\n        callback: event => {\n          _classPrivateFieldGet(this, _itemsBox).deselectCell();\n          this.runLocalHooks('keydown', event, this);\n          this.runLocalHooks('listTabKeydown', event, this);\n        },\n        group: SHORTCUTS_GROUP\n      });\n    };\n    hotInitializer(itemsBoxWrapper);\n    this.hot._registerTimeout(() => hotInitializer(itemsBoxWrapper), 100);\n  }\n\n  /**\n   * Focus element.\n   */\n  focus() {\n    if (this.isBuilt()) {\n      _classPrivateFieldGet(this, _itemsBox).listen();\n    }\n  }\n\n  /**\n   * Reset DOM structure.\n   */\n  reset() {\n    _classPrivateFieldGet(this, _searchInput).reset();\n    _classPrivateFieldGet(this, _selectAllUI).reset();\n    _classPrivateFieldGet(this, _clearAllUI).reset();\n  }\n\n  /**\n   * Update DOM structure.\n   */\n  update() {\n    if (!this.isBuilt()) {\n      return;\n    }\n    _classPrivateFieldGet(this, _itemsBox).loadData(valueToItems(_classPrivateFieldGet(this, _items), this.options.value));\n    super.update();\n  }\n\n  /**\n   * Destroy instance.\n   */\n  destroy() {\n    if (_classPrivateFieldGet(this, _itemsBox)) {\n      _classPrivateFieldGet(this, _itemsBox).destroy();\n    }\n    _classPrivateFieldGet(this, _searchInput).destroy();\n    _classPrivateFieldGet(this, _clearAllUI).destroy();\n    _classPrivateFieldGet(this, _selectAllUI).destroy();\n    _classPrivateFieldSet(this, _searchInput, null);\n    _classPrivateFieldSet(this, _clearAllUI, null);\n    _classPrivateFieldSet(this, _selectAllUI, null);\n    _classPrivateFieldSet(this, _itemsBox, null);\n    _classPrivateFieldSet(this, _items, null);\n    super.destroy();\n  }\n}\nfunction _onInput2(event) {\n  const value = event.target.value.toLocaleLowerCase(this.getLocale());\n  let filteredItems;\n  if (value === '') {\n    filteredItems = [..._classPrivateFieldGet(this, _items)];\n  } else {\n    filteredItems = arrayFilter(_classPrivateFieldGet(this, _items), item => `${item.value}`.toLocaleLowerCase(this.getLocale()).indexOf(value) >= 0);\n  }\n  _classPrivateFieldGet(this, _itemsBox).loadData(filteredItems);\n}\nfunction _onInputKeyDown2(event) {\n  this.runLocalHooks('keydown', event, this);\n  const isKeyCode = partial(isKey, event.keyCode);\n  if (isKeyCode('ARROW_DOWN')) {\n    event.preventDefault();\n    stopImmediatePropagation(event);\n    _classPrivateFieldGet(this, _itemsBox).listen();\n    _classPrivateFieldGet(this, _itemsBox).selectCell(0, 0);\n  }\n}\nfunction _onSelectAllClick2(event) {\n  const changes = [];\n  event.preventDefault();\n  arrayEach(_classPrivateFieldGet(this, _itemsBox).getSourceData(), (row, rowIndex) => {\n    row.checked = true;\n    changes.push(dataRowToChangesArray(row, rowIndex)[0]);\n  });\n  _classPrivateFieldGet(this, _itemsBox).setSourceDataAtCell(changes);\n}\nfunction _onClearAllClick2(event) {\n  const changes = [];\n  event.preventDefault();\n  arrayEach(_classPrivateFieldGet(this, _itemsBox).getSourceData(), (row, rowIndex) => {\n    row.checked = false;\n    changes.push(dataRowToChangesArray(row, rowIndex)[0]);\n  });\n  _classPrivateFieldGet(this, _itemsBox).setSourceDataAtCell(changes);\n}\nexport default MultipleSelectUI;\n\n/**\n * Pick up object items based on selected values.\n *\n * @param {Array} availableItems Base collection to compare values.\n * @param {Array} selectedValue Flat array with selected values.\n * @returns {Array}\n */\nfunction valueToItems(availableItems, selectedValue) {\n  const arrayAssertion = createArrayAssertion(selectedValue);\n  return arrayMap(availableItems, item => {\n    item.checked = arrayAssertion(item.value);\n    return item;\n  });\n}\n\n/**\n * Convert all checked items into flat array.\n *\n * @param {Array} availableItems Base collection.\n * @returns {Array}\n */\nfunction itemsToValue(availableItems) {\n  const items = [];\n  arrayEach(availableItems, item => {\n    if (item.checked) {\n      items.push(item.value);\n    }\n  });\n  return items;\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { arrayEach, arrayFilter, arrayMap } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { unifyColumnValues, intersectValues, toEmptyString } from \"../utils.mjs\";\nimport { BaseComponent } from \"./_base.mjs\";\nimport { MultipleSelectUI } from \"../ui/multipleSelect.mjs\";\nimport { CONDITION_BY_VALUE, CONDITION_NONE } from \"../constants.mjs\";\nimport { getConditionDescriptor } from \"../conditionRegisterer.mjs\";\n/**\n * @private\n * @class ValueComponent\n */\nvar _onInputKeyDown = /*#__PURE__*/new WeakSet();\nexport class ValueComponent extends BaseComponent {\n  constructor(hotInstance, options) {\n    super(hotInstance, {\n      id: options.id,\n      stateless: false\n    });\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The DOM event object.\n     */\n    _classPrivateMethodInitSpec(this, _onInputKeyDown);\n    /**\n     * The name of the component.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"name\", '');\n    this.name = options.name;\n    this.elements.push(new MultipleSelectUI(this.hot));\n    this.registerHooks();\n  }\n\n  /**\n   * Register all necessary hooks.\n   *\n   * @private\n   */\n  registerHooks() {\n    this.getMultipleSelectElement().addLocalHook('keydown', event => _classPrivateMethodGet(this, _onInputKeyDown, _onInputKeyDown2).call(this, event)).addLocalHook('listTabKeydown', event => this.runLocalHooks('listTabKeydown', event));\n  }\n\n  /**\n   * Gets the list of elements from which the component is built.\n   *\n   * @returns {BaseUI[]}\n   */\n  getElements() {\n    const selectElement = this.getMultipleSelectElement();\n    return [selectElement.getSearchInputElement(), selectElement.getSelectAllElement(), selectElement.getClearAllElement(), this.getMultipleSelectElement()];\n  }\n\n  /**\n   * Set state of the component.\n   *\n   * @param {object} value The component value.\n   */\n  setState(value) {\n    this.reset();\n    if (value && value.command.key === CONDITION_BY_VALUE) {\n      const select = this.getMultipleSelectElement();\n      select.setItems(value.itemsSnapshot);\n      select.setValue(value.args[0]);\n      select.setLocale(value.locale);\n    }\n  }\n\n  /**\n   * Export state of the component (get selected filter and filter arguments).\n   *\n   * @returns {object} Returns object where `command` key keeps used condition filter and `args` key its arguments.\n   */\n  getState() {\n    const select = this.getMultipleSelectElement();\n    const availableItems = select.getItems();\n    return {\n      command: {\n        key: select.isSelectedAllValues() || !availableItems.length ? CONDITION_NONE : CONDITION_BY_VALUE\n      },\n      args: [select.getValue()],\n      itemsSnapshot: availableItems\n    };\n  }\n\n  /**\n   * Update state of component.\n   *\n   * @param {object} stateInfo Information about state containing stack of edited column,\n   * stack of dependent conditions, data factory and optional condition arguments change. It's described by object containing keys:\n   * `editedConditionStack`, `dependentConditionStacks`, `visibleDataFactory` and `conditionArgsChange`.\n   */\n  updateState(stateInfo) {\n    const updateColumnState = (physicalColumn, conditions, conditionArgsChange, filteredRowsFactory, conditionsStack) => {\n      const [firstByValueCondition] = arrayFilter(conditions, condition => condition.name === CONDITION_BY_VALUE);\n      const state = {};\n      const defaultBlankCellValue = this.hot.getTranslatedPhrase(C.FILTERS_VALUES_BLANK_CELLS);\n      if (firstByValueCondition) {\n        const rowValues = unifyColumnValues(arrayMap(filteredRowsFactory(physicalColumn, conditionsStack), row => row.value));\n        if (conditionArgsChange) {\n          firstByValueCondition.args[0] = conditionArgsChange;\n        }\n        const selectedValues = [];\n        const itemsSnapshot = intersectValues(rowValues, firstByValueCondition.args[0], defaultBlankCellValue, item => {\n          if (item.checked) {\n            selectedValues.push(item.value);\n          }\n        });\n        const column = stateInfo.editedConditionStack.column;\n        state.locale = this.hot.getCellMeta(0, column).locale;\n        state.args = [selectedValues];\n        state.command = getConditionDescriptor(CONDITION_BY_VALUE);\n        state.itemsSnapshot = itemsSnapshot;\n      } else {\n        state.args = [];\n        state.command = getConditionDescriptor(CONDITION_NONE);\n      }\n      this.state.setValueAtIndex(physicalColumn, state);\n    };\n    updateColumnState(stateInfo.editedConditionStack.column, stateInfo.editedConditionStack.conditions, stateInfo.conditionArgsChange, stateInfo.filteredRowsFactory);\n\n    // Update the next \"by_value\" component (filter column conditions added after this condition).\n    // Its list of values has to be updated. As the new values by default are unchecked,\n    // the further component update is unnecessary.\n    if (stateInfo.dependentConditionStacks.length) {\n      updateColumnState(stateInfo.dependentConditionStacks[0].column, stateInfo.dependentConditionStacks[0].conditions, stateInfo.conditionArgsChange, stateInfo.filteredRowsFactory, stateInfo.editedConditionStack);\n    }\n  }\n\n  /**\n   * Get multiple select element.\n   *\n   * @returns {MultipleSelectUI}\n   */\n  getMultipleSelectElement() {\n    return this.elements.filter(element => element instanceof MultipleSelectUI)[0];\n  }\n\n  /**\n   * Get object descriptor for menu item entry.\n   *\n   * @returns {object}\n   */\n  getMenuItemDescriptor() {\n    return {\n      key: this.id,\n      name: this.name,\n      isCommand: false,\n      disableSelection: true,\n      hidden: () => this.isHidden(),\n      renderer: (hot, wrapper, row, col, prop, value) => {\n        addClass(wrapper.parentNode, 'htFiltersMenuValue');\n        const label = this.hot.rootDocument.createElement('div');\n        addClass(label, 'htFiltersMenuLabel');\n        label.textContent = value;\n        wrapper.appendChild(label);\n        arrayEach(this.elements, ui => wrapper.appendChild(ui.element));\n        return wrapper;\n      }\n    };\n  }\n\n  /**\n   * Reset elements to their initial state.\n   */\n  reset() {\n    const defaultBlankCellValue = this.hot.getTranslatedPhrase(C.FILTERS_VALUES_BLANK_CELLS);\n    const values = unifyColumnValues(this._getColumnVisibleValues());\n    const items = intersectValues(values, values, defaultBlankCellValue);\n    this.getMultipleSelectElement().setItems(items);\n    super.reset();\n    this.getMultipleSelectElement().setValue(values);\n    const selectedColumn = this.hot.getPlugin('filters').getSelectedColumn();\n    if (selectedColumn !== null) {\n      this.getMultipleSelectElement().setLocale(this.hot.getCellMeta(0, selectedColumn.visualIndex).locale);\n    }\n  }\n  /**\n   * Get data for currently selected column.\n   *\n   * @returns {Array}\n   * @private\n   */\n  _getColumnVisibleValues() {\n    const selectedColumn = this.hot.getPlugin('filters').getSelectedColumn();\n    if (selectedColumn === null) {\n      return [];\n    }\n    return arrayMap(this.hot.getDataAtCol(selectedColumn.visualIndex), v => toEmptyString(v));\n  }\n}\nfunction _onInputKeyDown2(event) {\n  if (isKey(event.keyCode, 'ESCAPE')) {\n    this.runLocalHooks('cancel');\n    stopImmediatePropagation(event);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nvar _class;\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { BaseComponent } from \"./_base.mjs\";\nimport { InputUI } from \"../ui/input.mjs\";\n/**\n * @private\n * @class ActionBarComponent\n */\nvar _onButtonClick = /*#__PURE__*/new WeakSet();\nexport class ActionBarComponent extends BaseComponent {\n  static get BUTTON_OK() {\n    return 'ok';\n  }\n  static get BUTTON_CANCEL() {\n    return 'cancel';\n  }\n  constructor(hotInstance, options) {\n    super(hotInstance, {\n      id: options.id,\n      stateless: true\n    });\n    /**\n     * On button click listener.\n     *\n     * @param {Event} event DOM event.\n     * @param {InputUI} button InputUI object.\n     */\n    _classPrivateMethodInitSpec(this, _onButtonClick);\n    /**\n     * The name of the component.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"name\", '');\n    this.name = options.name;\n    this.elements.push(new InputUI(this.hot, {\n      type: 'button',\n      value: C.FILTERS_BUTTONS_OK,\n      className: 'htUIButton htUIButtonOK',\n      identifier: ActionBarComponent.BUTTON_OK\n    }));\n    this.elements.push(new InputUI(this.hot, {\n      type: 'button',\n      value: C.FILTERS_BUTTONS_CANCEL,\n      className: 'htUIButton htUIButtonCancel',\n      identifier: ActionBarComponent.BUTTON_CANCEL\n    }));\n    this.registerHooks();\n  }\n\n  /**\n   * Register all necessary hooks.\n   *\n   * @private\n   */\n  registerHooks() {\n    arrayEach(this.elements, element => {\n      element.addLocalHook('click', (event, button) => _classPrivateMethodGet(this, _onButtonClick, _onButtonClick2).call(this, event, button));\n    });\n  }\n\n  /**\n   * Get menu object descriptor.\n   *\n   * @returns {object}\n   */\n  getMenuItemDescriptor() {\n    return {\n      key: this.id,\n      name: this.name,\n      isCommand: false,\n      disableSelection: true,\n      hidden: () => this.isHidden(),\n      renderer: (hot, wrapper) => {\n        addClass(wrapper.parentNode, 'htFiltersMenuActionBar');\n        arrayEach(this.elements, ui => wrapper.appendChild(ui.element));\n        return wrapper;\n      }\n    };\n  }\n\n  /**\n   * Fire accept event.\n   */\n  accept() {\n    this.runLocalHooks('accept');\n  }\n\n  /**\n   * Fire cancel event.\n   */\n  cancel() {\n    this.runLocalHooks('cancel');\n  }\n}\n_class = ActionBarComponent;\nfunction _onButtonClick2(event, button) {\n  if (button.options.identifier === _class.BUTTON_OK) {\n    this.accept();\n  } else {\n    this.cancel();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\nimport { getCondition } from \"./conditionRegisterer.mjs\";\nimport { OPERATION_ID as OPERATION_AND } from \"./logicalOperations/conjunction.mjs\";\nimport { operations, getOperationFunc } from \"./logicalOperationRegisterer.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nconst MAP_NAME = 'ConditionCollection.filteringStates';\n\n/**\n * @private\n * @class ConditionCollection\n */\nclass ConditionCollection {\n  constructor(hot) {\n    let isMapRegistrable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Indicates whether the internal IndexMap should be registered or not. Generally,\n     * registered Maps responds to the index changes. Within that collection, sometimes\n     * this is not necessary.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"isMapRegistrable\", void 0);\n    /**\n     * Index map storing filtering states for every column. ConditionCollection write and read to/from element.\n     *\n     * @type {LinkedPhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"filteringStates\", new IndexToValueMap());\n    this.hot = hot;\n    this.isMapRegistrable = isMapRegistrable;\n    if (this.isMapRegistrable === true) {\n      this.hot.columnIndexMapper.registerMap(MAP_NAME, this.filteringStates);\n    } else {\n      this.filteringStates.init(this.hot.columnIndexMapper.getNumberOfIndexes());\n    }\n  }\n\n  /**\n   * Check if condition collection is empty (so no needed to filter data).\n   *\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this.getFilteredColumns().length === 0;\n  }\n\n  /**\n   * Check if value is matched to the criteria of conditions chain.\n   *\n   * @param {object} value Object with `value` and `meta` keys.\n   * @param {number} column The physical column index.\n   * @returns {boolean}\n   */\n  isMatch(value, column) {\n    var _stateForColumn$condi;\n    const stateForColumn = this.filteringStates.getValueAtIndex(column);\n    const conditions = (_stateForColumn$condi = stateForColumn === null || stateForColumn === void 0 ? void 0 : stateForColumn.conditions) !== null && _stateForColumn$condi !== void 0 ? _stateForColumn$condi : [];\n    const operation = stateForColumn === null || stateForColumn === void 0 ? void 0 : stateForColumn.operation;\n    return this.isMatchInConditions(conditions, value, operation);\n  }\n\n  /**\n   * Check if the value is matches the conditions.\n   *\n   * @param {Array} conditions List of conditions.\n   * @param {object} value Object with `value` and `meta` keys.\n   * @param {string} [operationType='conjunction'] Type of conditions operation.\n   * @returns {boolean}\n   */\n  isMatchInConditions(conditions, value) {\n    let operationType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : OPERATION_AND;\n    if (conditions.length) {\n      return getOperationFunc(operationType)(conditions, value);\n    }\n    return true;\n  }\n\n  /**\n   * Add condition to the collection.\n   *\n   * @param {number} column The physical column index.\n   * @param {object} conditionDefinition Object with keys:\n   *  * `command` Object, Command object with condition name as `key` property.\n   *  * `args` Array, Condition arguments.\n   * @param {string} [operation='conjunction'] Type of conditions operation.\n   * @param {number} [position] Position to which condition will be added. When argument is undefined\n   * the condition will be processed as the last condition.\n   * @fires ConditionCollection#beforeAdd\n   * @fires ConditionCollection#afterAdd\n   */\n  addCondition(column, conditionDefinition) {\n    let operation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : OPERATION_AND;\n    let position = arguments.length > 3 ? arguments[3] : undefined;\n    const localeForColumn = this.hot.getCellMeta(0, column).locale;\n    const args = arrayMap(conditionDefinition.args, v => typeof v === 'string' ? v.toLocaleLowerCase(localeForColumn) : v);\n    const name = conditionDefinition.name || conditionDefinition.command.key;\n    this.runLocalHooks('beforeAdd', column);\n    const columnType = this.getOperation(column);\n    if (columnType) {\n      if (columnType !== operation) {\n        throw Error(toSingleLine`The column of index ${column} has been already applied with a \\`${columnType}\\`\\x20\n        filter operation. Use \\`removeConditions\\` to clear the current conditions and then add new ones.\\x20\n        Mind that you cannot mix different types of operations (for instance, if you use \\`conjunction\\`,\\x20\n        use it consequently for a particular column).`);\n      }\n    } else if (isUndefined(operations[operation])) {\n      throw new Error(toSingleLine`Unexpected operation named \\`${operation}\\`. Possible ones are\\x20\n        \\`disjunction\\` and \\`conjunction\\`.`);\n    }\n    const conditionsForColumn = this.getConditions(column);\n    if (conditionsForColumn.length === 0) {\n      // Create first condition for particular column.\n      this.filteringStates.setValueAtIndex(column, {\n        operation,\n        conditions: [{\n          name,\n          args,\n          func: getCondition(name, args)\n        }]\n      }, position);\n    } else {\n      // Add next condition for particular column (by reference).\n      conditionsForColumn.push({\n        name,\n        args,\n        func: getCondition(name, args)\n      });\n    }\n    this.runLocalHooks('afterAdd', column);\n  }\n\n  /**\n   * Get all added conditions from the collection at specified column index.\n   *\n   * @param {number} column The physical column index.\n   * @returns {Array} Returns conditions collection as an array.\n   */\n  getConditions(column) {\n    var _this$filteringStates, _this$filteringStates2;\n    return (_this$filteringStates = (_this$filteringStates2 = this.filteringStates.getValueAtIndex(column)) === null || _this$filteringStates2 === void 0 ? void 0 : _this$filteringStates2.conditions) !== null && _this$filteringStates !== void 0 ? _this$filteringStates : [];\n  }\n\n  /**\n   * Get operation for particular column.\n   *\n   * @param {number} column The physical column index.\n   * @returns {string|undefined}\n   */\n  getOperation(column) {\n    var _this$filteringStates3;\n    return (_this$filteringStates3 = this.filteringStates.getValueAtIndex(column)) === null || _this$filteringStates3 === void 0 ? void 0 : _this$filteringStates3.operation;\n  }\n\n  /**\n   * Get all filtered physical columns in the order in which actions are performed.\n   *\n   * @returns {Array}\n   */\n  getFilteredColumns() {\n    return this.filteringStates.getEntries().map(_ref => {\n      let [physicalColumn] = _ref;\n      return physicalColumn;\n    });\n  }\n\n  /**\n   * Gets position in the filtering states stack for the specific column.\n   *\n   * @param {number} column The physical column index.\n   * @returns {number} Returns -1 when the column doesn't exist in the stack.\n   */\n  getColumnStackPosition(column) {\n    return this.getFilteredColumns().indexOf(column);\n  }\n\n  /**\n   * Export all previously added conditions.\n   *\n   * @returns {Array}\n   */\n  exportAllConditions() {\n    return arrayReduce(this.filteringStates.getEntries(), (allConditions, _ref2) => {\n      let [column, {\n        operation,\n        conditions\n      }] = _ref2;\n      allConditions.push({\n        column,\n        operation,\n        conditions: arrayMap(conditions, _ref3 => {\n          let {\n            name,\n            args\n          } = _ref3;\n          return {\n            name,\n            args\n          };\n        })\n      });\n      return allConditions;\n    }, []);\n  }\n\n  /**\n   * Import conditions to the collection.\n   *\n   * @param {Array} conditions The collection of the conditions.\n   */\n  importAllConditions(conditions) {\n    this.clean();\n    arrayEach(conditions, stack => {\n      arrayEach(stack.conditions, condition => this.addCondition(stack.column, condition));\n    });\n  }\n\n  /**\n   * Remove conditions at given column index.\n   *\n   * @param {number} column The physical column index.\n   * @fires ConditionCollection#beforeRemove\n   * @fires ConditionCollection#afterRemove\n   */\n  removeConditions(column) {\n    this.runLocalHooks('beforeRemove', column);\n    this.filteringStates.clearValue(column);\n    this.runLocalHooks('afterRemove', column);\n  }\n\n  /**\n   * Clean all conditions collection and reset order stack.\n   *\n   * @fires ConditionCollection#beforeClean\n   * @fires ConditionCollection#afterClean\n   */\n  clean() {\n    this.runLocalHooks('beforeClean');\n    this.filteringStates.clear();\n    this.runLocalHooks('afterClean');\n  }\n\n  /**\n   * Check if at least one condition was added at specified column index. And if second parameter is passed then additionally\n   * check if condition exists under its name.\n   *\n   * @param {number} column The physical column index.\n   * @param {string} [name] Condition name.\n   * @returns {boolean}\n   */\n  hasConditions(column, name) {\n    const conditions = this.getConditions(column);\n    if (name) {\n      return conditions.some(condition => condition.name === name);\n    }\n    return conditions.length > 0;\n  }\n\n  /**\n   * Destroy object.\n   */\n  destroy() {\n    if (this.isMapRegistrable) {\n      this.hot.columnIndexMapper.unregisterMap(MAP_NAME);\n    }\n    this.filteringStates = null;\n    this.clearLocalHooks();\n  }\n}\nmixin(ConditionCollection, localHooks);\nexport default ConditionCollection;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { arrayEach } from \"../../helpers/array.mjs\";\n/**\n * @private\n * @class DataFilter\n */\nclass DataFilter {\n  constructor(conditionCollection) {\n    let columnDataFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => [];\n    /**\n     * Reference to the instance of {ConditionCollection}.\n     *\n     * @type {ConditionCollection}\n     */\n    _defineProperty(this, \"conditionCollection\", void 0);\n    /**\n     * Function which provide source data factory for specified column.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"columnDataFactory\", void 0);\n    this.conditionCollection = conditionCollection;\n    this.columnDataFactory = columnDataFactory;\n  }\n\n  /**\n   * Filter data based on the conditions collection.\n   *\n   * @returns {Array}\n   */\n  filter() {\n    let filteredData = [];\n    arrayEach(this.conditionCollection.getFilteredColumns(), (physicalColumn, index) => {\n      let columnData = this.columnDataFactory(physicalColumn);\n      if (index) {\n        columnData = this._getIntersectData(columnData, filteredData);\n      }\n      filteredData = this.filterByColumn(physicalColumn, columnData);\n    });\n    return filteredData;\n  }\n\n  /**\n   * Filter data based on specified physical column index.\n   *\n   * @param {number} column The physical column index.\n   * @param {Array} [dataSource] Data source as array of objects with `value` and `meta` keys (e.g. `{value: 'foo', meta: {}}`).\n   * @returns {Array} Returns filtered data.\n   */\n  filterByColumn(column) {\n    let dataSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    const filteredData = [];\n    arrayEach(dataSource, dataRow => {\n      if (dataRow !== undefined && this.conditionCollection.isMatch(dataRow, column)) {\n        filteredData.push(dataRow);\n      }\n    });\n    return filteredData;\n  }\n\n  /**\n   * Intersect data.\n   *\n   * @private\n   * @param {Array} data The data to intersect.\n   * @param {Array} needles The collection intersected rows with the data.\n   * @returns {Array}\n   */\n  _getIntersectData(data, needles) {\n    const result = [];\n    arrayEach(needles, needleRow => {\n      const row = needleRow.meta.visualRow;\n      if (data[row] !== undefined) {\n        result[row] = data[row];\n      }\n    });\n    return result;\n  }\n}\nexport default DataFilter;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { arrayEach, arrayMap, arrayFilter } from \"../../helpers/array.mjs\";\nimport { mixin, objectEach } from \"../../helpers/object.mjs\";\nimport { curry } from \"../../helpers/function.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\nimport ConditionCollection from \"./conditionCollection.mjs\";\nimport DataFilter from \"./dataFilter.mjs\";\nimport { createArrayAssertion } from \"./utils.mjs\";\n/**\n * Class which is designed for observing changes in condition collection. When condition is changed by user at specified\n * column it's necessary to update all conditions defined after this edited one.\n *\n * Object fires `update` hook for every column conditions change.\n *\n * @private\n * @class ConditionUpdateObserver\n */\nvar _onConditionBeforeModify = /*#__PURE__*/new WeakSet();\nvar _onConditionBeforeClean = /*#__PURE__*/new WeakSet();\nvar _onConditionAfterClean = /*#__PURE__*/new WeakSet();\nclass ConditionUpdateObserver {\n  constructor(hot, conditionCollection) {\n    let columnDataFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => [];\n    /**\n     * On after conditions clean listener.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onConditionAfterClean);\n    /**\n     * On before conditions clean listener.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onConditionBeforeClean);\n    /**\n     * On before modify condition (add or remove from collection),.\n     *\n     * @param {number} column Column index.\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onConditionBeforeModify);\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Reference to the instance of {@link ConditionCollection}.\n     *\n     * @type {ConditionCollection}\n     */\n    _defineProperty(this, \"conditionCollection\", void 0);\n    /**\n     * Function which provide source data factory for specified column.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"columnDataFactory\", void 0);\n    /**\n     * Collected changes when grouping is enabled.\n     *\n     * @type {Array}\n     * @default []\n     */\n    _defineProperty(this, \"changes\", []);\n    /**\n     * Flag which determines if grouping events is enabled.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"grouping\", false);\n    /**\n     * The latest known position of edited conditions at specified column index.\n     *\n     * @type {number}\n     * @default -1\n     */\n    _defineProperty(this, \"latestEditedColumnPosition\", -1);\n    /**\n     * The latest known order of conditions stack.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"latestOrderStack\", []);\n    this.hot = hot;\n    this.conditionCollection = conditionCollection;\n    this.columnDataFactory = columnDataFactory;\n    this.conditionCollection.addLocalHook('beforeRemove', column => _classPrivateMethodGet(this, _onConditionBeforeModify, _onConditionBeforeModify2).call(this, column));\n    this.conditionCollection.addLocalHook('afterRemove', column => this.updateStatesAtColumn(column));\n    this.conditionCollection.addLocalHook('afterAdd', column => this.updateStatesAtColumn(column));\n    this.conditionCollection.addLocalHook('beforeClean', () => _classPrivateMethodGet(this, _onConditionBeforeClean, _onConditionBeforeClean2).call(this));\n    this.conditionCollection.addLocalHook('afterClean', () => _classPrivateMethodGet(this, _onConditionAfterClean, _onConditionAfterClean2).call(this));\n  }\n\n  /**\n   * Enable grouping changes. Grouping is helpful in situations when a lot of conditions is added in one moment. Instead of\n   * trigger `update` hook for every condition by adding/removing you can group this changes and call `flush` method to trigger\n   * it once.\n   */\n  groupChanges() {\n    this.grouping = true;\n  }\n\n  /**\n   * Flush all collected changes. This trigger `update` hook for every previously collected change from condition collection.\n   */\n  flush() {\n    this.grouping = false;\n    arrayEach(this.changes, column => {\n      this.updateStatesAtColumn(column);\n    });\n    this.changes.length = 0;\n  }\n  /**\n   * Update all related states which should be changed after invoking changes applied to current column.\n   *\n   * @param {number} column The column index.\n   * @param {object} conditionArgsChange Object describing condition changes which can be handled by filters on `update` hook.\n   * It contains keys `conditionKey` and `conditionValue` which refers to change specified key of condition to specified value\n   * based on referred keys.\n   */\n  updateStatesAtColumn(column, conditionArgsChange) {\n    var _this = this;\n    if (this.grouping) {\n      if (this.changes.indexOf(column) === -1) {\n        this.changes.push(column);\n      }\n      return;\n    }\n    const allConditions = this.conditionCollection.exportAllConditions();\n    let editedColumnPosition = this.conditionCollection.getColumnStackPosition(column);\n    if (editedColumnPosition === -1) {\n      editedColumnPosition = this.latestEditedColumnPosition;\n    }\n\n    // Collection of all conditions defined before currently edited `column` (without edited one)\n    const conditionsBefore = allConditions.slice(0, editedColumnPosition);\n    // Collection of all conditions defined after currently edited `column` (with edited one)\n    const conditionsAfter = allConditions.slice(editedColumnPosition);\n\n    // Make sure that conditionAfter doesn't contain edited column conditions\n    if (conditionsAfter.length && conditionsAfter[0].column === column) {\n      conditionsAfter.shift();\n    }\n    const visibleDataFactory = curry(function (curriedConditionsBefore, curriedColumn) {\n      let conditionsStack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      const splitConditionCollection = new ConditionCollection(_this.hot, false);\n      const curriedConditionsBeforeArray = [].concat(curriedConditionsBefore, conditionsStack);\n\n      // Create new condition collection to determine what rows should be visible in \"filter by value\" box\n      // in the next conditions in the chain\n      splitConditionCollection.importAllConditions(curriedConditionsBeforeArray);\n      const allRows = _this.columnDataFactory(curriedColumn);\n      let visibleRows;\n      if (splitConditionCollection.isEmpty()) {\n        visibleRows = allRows;\n      } else {\n        visibleRows = new DataFilter(splitConditionCollection, columnData => _this.columnDataFactory(columnData)).filter();\n      }\n      visibleRows = arrayMap(visibleRows, rowData => rowData.meta.visualRow);\n      const visibleRowsAssertion = createArrayAssertion(visibleRows);\n      splitConditionCollection.destroy();\n      return arrayFilter(allRows, rowData => visibleRowsAssertion(rowData.meta.visualRow));\n    })(conditionsBefore);\n    const editedConditions = [].concat(this.conditionCollection.getConditions(column));\n    this.runLocalHooks('update', {\n      editedConditionStack: {\n        column,\n        conditions: editedConditions\n      },\n      dependentConditionStacks: conditionsAfter,\n      filteredRowsFactory: visibleDataFactory,\n      conditionArgsChange\n    });\n  }\n  /**\n   * Destroy instance.\n   */\n  destroy() {\n    this.clearLocalHooks();\n    objectEach(this, (value, property) => {\n      this[property] = null;\n    });\n  }\n}\nfunction _onConditionBeforeModify2(column) {\n  this.latestEditedColumnPosition = this.conditionCollection.getColumnStackPosition(column);\n}\nfunction _onConditionBeforeClean2() {\n  this.latestOrderStack = this.conditionCollection.getFilteredColumns();\n}\nfunction _onConditionAfterClean2() {\n  arrayEach(this.latestOrderStack, column => {\n    this.updateStatesAtColumn(column);\n  });\n}\nmixin(ConditionUpdateObserver, localHooks);\nexport default ConditionUpdateObserver;", "import { createPaginator } from \"../../../utils/paginator.mjs\";\nimport { isVisible } from \"../../../helpers/dom/element.mjs\";\nimport { MultipleSelectUI } from \"../ui/multipleSelect.mjs\";\n/**\n * Creates navigator for switching the focus of the filter's elements.\n *\n * @param {BaseUI[]} elements The elements to paginate to.\n * @returns {Paginator}\n */\nexport function createFocusNavigator(elements) {\n  const navigator = createPaginator({\n    initialPage: 0,\n    size: () => elements.length,\n    onItemSelect: (currentIndex, directItemChange) => {\n      const element = elements[currentIndex];\n      if (element instanceof MultipleSelectUI) {\n        return directItemChange;\n      }\n      if (element.element && !isVisible(element.element)) {\n        return false;\n      }\n      element.focus();\n    }\n  });\n  return navigator;\n}", "import { createFocusNavigator } from \"./focusNavigator.mjs\";\nimport { SelectUI } from \"../ui/select.mjs\";\nimport { BaseUI } from \"../ui/_base.mjs\";\nimport { LinkUI } from \"../ui/link.mjs\";\nconst SHORTCUTS_MENU_CONTEXT = 'filters';\n\n/**\n * @typedef MenuFocusNavigator\n * @property {function(number): void} setCurrentPage Sets the current index of the selected focus.\n * @property {function(): number} getCurrentPage Gets the index of currently focus element.\n * @property {function(): void} toFirstItem Move the focus index to the first element in the list.\n * @property {function(): void} toLastItem Move the focus index to the last element in the list.\n * @property {function(): void} toNextItem Move the focus index to the next element in the list.\n * @property {function(): void} toPreviousItem Move the focus index to the previous element in the list.\n * @property {function(): void} clear Clear the internal state of the navigator.\n * @property {function(): void} listen Activate the navigator by listening the keyboard shortcuts.\n */\n/**\n * Creates navigator controller for filter subcomponents in the menu.\n *\n * @param {Menu} mainMenu The main Menu instance.\n * @param {BaseUI[]} menuItems The list of the component's elements to paginate to.\n * @returns {Paginator}\n */\nexport function createMenuFocusController(mainMenu, menuItems) {\n  /**\n   * @type {number} The last selected menu item (before clearing the the menu state after going\n   * into the focus mode triggered by the TAB or SHIFT+TAB keys).\n   */\n  let lastSelectedMenuItem = -1;\n  const focusNavigator = createFocusNavigator(menuItems);\n  const updateNavigatorPosition = element => () => {\n    if (mainMenu.isOpened()) {\n      mainMenu.getKeyboardShortcutsCtrl().listen(SHORTCUTS_MENU_CONTEXT);\n    }\n    focusNavigator.setCurrentPage(menuItems.indexOf(element));\n  };\n\n  // update navigator position (internal state) to element that was recently clicked or focused\n  menuItems.forEach(element => {\n    if (element instanceof BaseUI) {\n      element.addLocalHook('click', updateNavigatorPosition(element));\n      element.addLocalHook('focus', updateNavigatorPosition(element));\n      element.addLocalHook('afterClose', updateNavigatorPosition(element));\n    }\n  });\n  mainMenu.addLocalHook('afterSelectionChange', selectedItem => {\n    if (!selectedItem.key.startsWith('filter_')) {\n      focusNavigator.clear();\n    }\n  });\n\n  /**\n   * Extends the menu and submenus with new keyboard shortcuts.\n   *\n   * @param {*} menu The menu (as main menu or submenu) instance.\n   */\n  function addKeyboardShortcuts(menu) {\n    const mainMenuShortcutsCtrl = mainMenu.getKeyboardShortcutsCtrl();\n    const currentMenuShortcutsCtrl = menu.getKeyboardShortcutsCtrl();\n    focusNavigator.clear();\n    currentMenuShortcutsCtrl.addCustomShortcuts([{\n      keys: [['Tab'], ['Shift', 'Tab']],\n      forwardToContext: mainMenuShortcutsCtrl.getContext(SHORTCUTS_MENU_CONTEXT),\n      callback: () => {\n        if (menu.isSubMenu()) {\n          menu.close();\n        }\n        mainMenuShortcutsCtrl.listen(SHORTCUTS_MENU_CONTEXT);\n      }\n    }]);\n    if (menu.isSubMenu()) {\n      return;\n    }\n    mainMenuShortcutsCtrl.addCustomShortcuts([{\n      keys: [['Tab'], ['Shift', 'Tab']],\n      callback: event => {\n        const menuNavigator = mainMenu.getNavigator();\n        if (menuNavigator.getCurrentPage() > -1) {\n          lastSelectedMenuItem = menuNavigator.getCurrentPage();\n        }\n        menuNavigator.clear();\n        if (event.shiftKey) {\n          focusNavigator.toPreviousItem();\n        } else {\n          focusNavigator.toNextItem();\n        }\n      }\n    }, {\n      keys: [['Escape']],\n      callback: () => {\n        mainMenu.close();\n      }\n    }, {\n      keys: [['Enter'], ['Space']],\n      preventDefault: false,\n      callback: event => {\n        const element = menuItems[focusNavigator.getCurrentPage()];\n        if (element instanceof SelectUI) {\n          element.openOptions();\n          event.preventDefault();\n        }\n        if (element instanceof LinkUI) {\n          element.activate();\n          event.preventDefault();\n        }\n        if (!(element instanceof BaseUI)) {\n          event.preventDefault();\n        }\n      }\n    }], SHORTCUTS_MENU_CONTEXT);\n  }\n  mainMenu.addLocalHook('afterSubmenuOpen', addKeyboardShortcuts);\n  mainMenu.addLocalHook('afterOpen', addKeyboardShortcuts);\n\n  /**\n   * Focuses the menu and switches its shortcut context to that one which controls\n   * the focus navigation.\n   */\n  function listen() {\n    mainMenu.focus();\n    mainMenu.getKeyboardShortcutsCtrl().listen(SHORTCUTS_MENU_CONTEXT);\n  }\n\n  /**\n   * Retrieves the last selected menu item (before clearing the state after going into the focus mode).\n   *\n   * @returns {number} The last selected menu item.\n   */\n  function getLastMenuPage() {\n    return lastSelectedMenuItem;\n  }\n  return {\n    ...focusNavigator,\n    listen,\n    getLastMenuPage\n  };\n}", "import \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isKey } from \"../../helpers/unicode.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport * as constants from \"../../i18n/constants.mjs\";\nimport { ConditionComponent } from \"./component/condition.mjs\";\nimport { OperatorsComponent } from \"./component/operators.mjs\";\nimport { ValueComponent } from \"./component/value.mjs\";\nimport { ActionBarComponent } from \"./component/actionBar.mjs\";\nimport ConditionCollection from \"./conditionCollection.mjs\";\nimport DataFilter from \"./dataFilter.mjs\";\nimport ConditionUpdateObserver from \"./conditionUpdateObserver.mjs\";\nimport { createArrayAssertion, toEmptyString, unifyColumnValues } from \"./utils.mjs\";\nimport { createMenuFocusController } from \"./menu/focusController.mjs\";\nimport { CONDITION_NONE, CONDITION_BY_VALUE, OPERATION_AND, OPERATION_OR, OPERATION_OR_THEN_VARIABLE } from \"./constants.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nexport const PLUGIN_KEY = 'filters';\nexport const PLUGIN_PRIORITY = 250;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/**\n * @plugin Filters\n * @class Filters\n *\n * @description\n * The plugin allows filtering the table data either by the built-in component or with the API.\n *\n * See [the filtering demo](@/guides/columns/column-filter.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   dropdownMenu: true,\n *   filters: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   dropdownMenu={true}\n *   filters={true}\n * />\n * ```\n * :::\n */\nvar _menuFocusNavigator = /*#__PURE__*/new WeakMap();\nvar _onAfterChange = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuShow = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuHide = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onActionBarSubmit = /*#__PURE__*/new WeakSet();\nvar _onComponentChange = /*#__PURE__*/new WeakSet();\nvar _onSelectUIClosed = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _updateComponents = /*#__PURE__*/new WeakSet();\nexport class Filters extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:DropdownMenu', 'plugin:HiddenRows', 'cell-type:checkbox'];\n  }\n\n  /**\n   * Instance of {@link DropdownMenu}.\n   *\n   * @private\n   * @type {DropdownMenu}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    // One listener for the enable/disable functionality\n    /**\n     * It updates the components state. The state is triggered by ConditionUpdateObserver, which\n     * reacts to any condition added to the condition collection. It may be added through the UI\n     * components or by API call.\n     *\n     * @param {object} conditionsState An object with the state generated by UI components.\n     */\n    _classPrivateMethodInitSpec(this, _updateComponents);\n    /**\n     * On after get column header listener.\n     *\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * On component SelectUI closed listener.\n     */\n    _classPrivateMethodInitSpec(this, _onSelectUIClosed);\n    /**\n     * On component change listener.\n     *\n     * @param {BaseComponent} component Component inheriting BaseComponent.\n     * @param {object} command Menu item object (command).\n     */\n    _classPrivateMethodInitSpec(this, _onComponentChange);\n    /**\n     * On action bar submit listener.\n     *\n     * @private\n     * @param {string} submitType The submit type.\n     */\n    _classPrivateMethodInitSpec(this, _onActionBarSubmit);\n    /**\n     * After dropdown menu default options listener.\n     *\n     * @param {object} defaultOptions ContextMenu default item options.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuDefaultOptions);\n    /**\n     * After dropdown menu hide listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuHide);\n    /**\n     * After dropdown menu show listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuShow);\n    /**\n     * `afterChange` listener.\n     *\n     * @param {Array} changes Array of changes.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterChange);\n    _defineProperty(this, \"dropdownMenuPlugin\", null);\n    /**\n     * Instance of {@link ConditionCollection}.\n     *\n     * @private\n     * @type {ConditionCollection}\n     */\n    _defineProperty(this, \"conditionCollection\", null);\n    /**\n     * Instance of {@link ConditionUpdateObserver}.\n     *\n     * @private\n     * @type {ConditionUpdateObserver}\n     */\n    _defineProperty(this, \"conditionUpdateObserver\", null);\n    /**\n     * Map, where key is component identifier and value represent `BaseComponent` element or it derivatives.\n     *\n     * @private\n     * @type {Map}\n     */\n    _defineProperty(this, \"components\", new Map([['filter_by_condition', null], ['filter_operators', null], ['filter_by_condition2', null], ['filter_by_value', null], ['filter_action_bar', null]]));\n    /**\n     * Map of skipped rows by plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n    _defineProperty(this, \"filtersRowsMap\", null);\n    /**\n     * Menu focus navigator allows switching the focus position through Tab and Shift Tab keys.\n     *\n     * @type {MenuFocusNavigator|undefined}\n     */\n    _classPrivateFieldInitSpec(this, _menuFocusNavigator, {\n      writable: true,\n      value: void 0\n    });\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Filters#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    /* eslint-disable no-unneeded-ternary */\n    return this.hot.getSettings()[PLUGIN_KEY] ? true : false;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.filtersRowsMap = this.hot.rowIndexMapper.registerMap(this.pluginName, new TrimmingMap());\n    this.dropdownMenuPlugin = this.hot.getPlugin('dropdownMenu');\n    const dropdownSettings = this.hot.getSettings().dropdownMenu;\n    const menuContainer = dropdownSettings && dropdownSettings.uiContainer || this.hot.rootDocument.body;\n    const addConfirmationHooks = component => {\n      component.addLocalHook('accept', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'accept'));\n      component.addLocalHook('cancel', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'cancel'));\n      component.addLocalHook('change', command => _classPrivateMethodGet(this, _onComponentChange, _onComponentChange2).call(this, component, command));\n      return component;\n    };\n    const filterByConditionLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_CONDITION)}:`;\n    const filterValueLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_VALUE)}:`;\n    if (!this.components.get('filter_by_condition')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition',\n        name: filterByConditionLabel,\n        addSeparator: false,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_operators')) {\n      this.components.set('filter_operators', new OperatorsComponent(this.hot, {\n        id: 'filter_operators',\n        name: 'Operators'\n      }));\n    }\n    if (!this.components.get('filter_by_condition2')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition2',\n        name: '',\n        addSeparator: true,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition2', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_by_value')) {\n      this.components.set('filter_by_value', addConfirmationHooks(new ValueComponent(this.hot, {\n        id: 'filter_by_value',\n        name: filterValueLabel\n      })));\n    }\n    if (!this.components.get('filter_action_bar')) {\n      this.components.set('filter_action_bar', addConfirmationHooks(new ActionBarComponent(this.hot, {\n        id: 'filter_action_bar',\n        name: 'Action bar'\n      })));\n    }\n    if (!this.conditionCollection) {\n      this.conditionCollection = new ConditionCollection(this.hot);\n    }\n    if (!this.conditionUpdateObserver) {\n      this.conditionUpdateObserver = new ConditionUpdateObserver(this.hot, this.conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n      this.conditionUpdateObserver.addLocalHook('update', conditionState => _classPrivateMethodGet(this, _updateComponents, _updateComponents2).call(this, conditionState));\n    }\n    this.components.forEach(component => component.show());\n    this.addHook('afterDropdownMenuDefaultOptions', defaultOptions => _classPrivateMethodGet(this, _onAfterDropdownMenuDefaultOptions, _onAfterDropdownMenuDefaultOptions2).call(this, defaultOptions));\n    this.addHook('afterDropdownMenuShow', () => _classPrivateMethodGet(this, _onAfterDropdownMenuShow, _onAfterDropdownMenuShow2).call(this));\n    this.addHook('afterDropdownMenuHide', () => _classPrivateMethodGet(this, _onAfterDropdownMenuHide, _onAfterDropdownMenuHide2).call(this));\n    this.addHook('afterChange', changes => _classPrivateMethodGet(this, _onAfterChange, _onAfterChange2).call(this, changes));\n\n    // Temp. solution (extending menu items bug in contextMenu/dropdownMenu)\n    if (this.hot.getSettings().dropdownMenu && this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.disablePlugin();\n      this.dropdownMenuPlugin.enablePlugin();\n    }\n    if (!_classPrivateFieldGet(this, _menuFocusNavigator) && this.dropdownMenuPlugin.enabled) {\n      const mainMenu = this.dropdownMenuPlugin.menu;\n      const focusableItems = [\n      // A fake menu item that once focused allows escaping from the focus navigation (using Tab keys)\n      // to the menu navigation using arrow keys.\n      {\n        focus: () => {\n          const menuNavigator = mainMenu.getNavigator();\n          const lastSelectedMenuItem = _classPrivateFieldGet(this, _menuFocusNavigator).getLastMenuPage();\n          mainMenu.focus();\n          if (lastSelectedMenuItem > 0) {\n            menuNavigator.setCurrentPage(lastSelectedMenuItem);\n          } else {\n            menuNavigator.toFirstItem();\n          }\n        }\n      }, ...Array.from(this.components).map(_ref => {\n        let [, component] = _ref;\n        return component.getElements();\n      }).flat()];\n      _classPrivateFieldSet(this, _menuFocusNavigator, createMenuFocusController(mainMenu, focusableItems));\n      const forwardToFocusNavigation = event => {\n        _classPrivateFieldGet(this, _menuFocusNavigator).listen();\n        event.preventDefault();\n        if (isKey(event.keyCode, 'TAB')) {\n          if (event.shiftKey) {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toPreviousItem();\n          } else {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toNextItem();\n          }\n        }\n      };\n      this.components.get('filter_by_value').addLocalHook('listTabKeydown', forwardToFocusNavigation);\n      this.components.get('filter_by_condition').addLocalHook('selectTabKeydown', forwardToFocusNavigation);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    if (this.enabled) {\n      var _this$dropdownMenuPlu;\n      if ((_this$dropdownMenuPlu = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu !== void 0 && _this$dropdownMenuPlu.enabled) {\n        this.dropdownMenuPlugin.menu.clearLocalHooks();\n      }\n      this.components.forEach((component, key) => {\n        component.destroy();\n        this.components.set(key, null);\n      });\n      this.conditionCollection.destroy();\n      this.conditionCollection = null;\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Alt', 'A']],\n      stopPropagation: true,\n      callback: () => {\n        const selection = this.hot.getSelected();\n        this.clearConditions();\n        this.filter();\n        if (selection) {\n          this.hot.selectCells(selection);\n        }\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof Filters#\n   * @function addCondition\n   * @description\n   * Adds condition to the conditions collection at specified column index.\n   *\n   * Possible predefined conditions:\n   *  * `begins_with` - Begins with\n   *  * `between` - Between\n   *  * `by_value` - By value\n   *  * `contains` - Contains\n   *  * `date_after` - After a date\n   *  * `date_before` - Before a date\n   *  * `date_today` - Today\n   *  * `date_tomorrow` - Tomorrow\n   *  * `date_yesterday` - Yesterday\n   *  * `empty` - Empty\n   *  * `ends_with` - Ends with\n   *  * `eq` - Equal\n   *  * `gt` - Greater than\n   *  * `gte` - Greater than or equal\n   *  * `lt` - Less than\n   *  * `lte` - Less than or equal\n   *  * `none` - None (no filter)\n   *  * `not_between` - Not between\n   *  * `not_contains` - Not contains\n   *  * `not_empty` - Not empty\n   *  * `neq` - Not equal.\n   *\n   * Possible operations on collection of conditions:\n   *  * `conjunction` - [**Conjunction**](https://en.wikipedia.org/wiki/Logical_conjunction) on conditions collection (by default), i.e. for such operation: <br/> c1 AND c2 AND c3 AND c4 ... AND cn === TRUE, where c1 ... cn are conditions.\n   *  * `disjunction` - [**Disjunction**](https://en.wikipedia.org/wiki/Logical_disjunction) on conditions collection, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *  * `disjunctionWithExtraCondition` - **Disjunction** on first `n - 1`\\* conditions from collection with an extra requirement computed from the last condition, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn-1 AND cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *\n   * \\* when `n` is collection size; it's used i.e. for one operation introduced from UI (when choosing from filter's drop-down menu two conditions with OR operator between them, mixed with choosing values from the multiple choice select)\n   *\n   * **Note**: Mind that you cannot mix different types of operations (for instance, if you use `conjunction`, use it consequently for a particular column).\n   *\n   * @example\n   * ::: only-for javascript\n   * ```js\n   * const container = document.getElementById('example');\n   * const hot = new Handsontable(container, {\n   *   data: getData(),\n   *   filters: true\n   * });\n   *\n   * // access to filters plugin instance\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * ::: only-for react\n   * ```jsx\n   * const hotRef = useRef(null);\n   *\n   * ...\n   *\n   * <HotTable\n   *   ref={hotRef}\n   *   data={getData()}\n   *   filters={true}\n   * />\n   *\n   * // access to filters plugin instance\n   * const hot = hotRef.current.hotInstance;\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * @param {number} column Visual column index.\n   * @param {string} name Condition short name.\n   * @param {Array} args Condition arguments.\n   * @param {string} [operationId=conjunction] `id` of operation which is performed on the column.\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  addCondition(column, name, args) {\n    let operationId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : OPERATION_AND;\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.addCondition(physicalColumn, {\n      command: {\n        key: name\n      },\n      args\n    }, operationId);\n  }\n\n  /**\n   * Removes conditions at specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  removeConditions(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.removeConditions(physicalColumn);\n  }\n\n  /**\n   * Clears all conditions previously added to the collection for the specified column index or, if the column index\n   * was not passed, clear the conditions for all columns.\n   *\n   * @param {number} [column] Visual column index.\n   */\n  clearConditions(column) {\n    if (column === undefined) {\n      this.conditionCollection.clean();\n    } else {\n      const physicalColumn = this.hot.toPhysicalColumn(column);\n      this.conditionCollection.removeConditions(physicalColumn);\n    }\n  }\n\n  /**\n   * Filters data based on added filter conditions.\n   *\n   * @fires Hooks#beforeFilter\n   * @fires Hooks#afterFilter\n   */\n  filter() {\n    const {\n      navigableHeaders\n    } = this.hot.getSettings();\n    const dataFilter = this._createDataFilter();\n    const needToFilter = !this.conditionCollection.isEmpty();\n    let visibleVisualRows = [];\n    const conditions = this.conditionCollection.exportAllConditions();\n    const allowFiltering = this.hot.runHooks('beforeFilter', conditions);\n    if (allowFiltering !== false) {\n      if (needToFilter) {\n        const trimmedRows = [];\n        this.hot.batchExecution(() => {\n          this.filtersRowsMap.clear();\n          visibleVisualRows = arrayMap(dataFilter.filter(), rowData => rowData.meta.visualRow);\n          const visibleVisualRowsAssertion = createArrayAssertion(visibleVisualRows);\n          rangeEach(this.hot.countSourceRows() - 1, row => {\n            if (!visibleVisualRowsAssertion(row)) {\n              trimmedRows.push(row);\n            }\n          });\n          arrayEach(trimmedRows, physicalRow => {\n            this.filtersRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n        if (!navigableHeaders && !visibleVisualRows.length) {\n          this.hot.deselectCell();\n        }\n      } else {\n        this.filtersRowsMap.clear();\n      }\n    }\n    this.hot.runHooks('afterFilter', conditions);\n    this.hot.view.adjustElementsSize(true);\n    this.hot.render();\n    if (this.hot.selection.isSelected()) {\n      this.hot.selectCell(navigableHeaders ? -1 : 0, this.hot.getSelectedRangeLast().highlight.col);\n    }\n  }\n\n  /**\n   * Gets last selected column index.\n   *\n   * @returns {{visualIndex: number, physicalIndex: number} | null} Returns `null` when a column is\n   * not selected. Otherwise, returns an object with `visualIndex` and `physicalIndex` properties containing\n   * the index of the column.\n   */\n  getSelectedColumn() {\n    var _this$hot$getSelected;\n    const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n    if (!highlight) {\n      return null;\n    }\n    return {\n      visualIndex: highlight.col,\n      physicalIndex: this.hot.toPhysicalColumn(highlight.col)\n    };\n  }\n\n  /**\n   * Returns handsontable source data with cell meta based on current selection.\n   *\n   * @param {number} [column] The physical column index. By default column index accept the value of the selected column.\n   * @returns {Array} Returns array of objects where keys as row index.\n   */\n  getDataMapAtColumn(column) {\n    const visualColumn = this.hot.toVisualColumn(column);\n    const data = [];\n    arrayEach(this.hot.getSourceDataAtCol(visualColumn), (value, rowIndex) => {\n      var _this$hot$getDataAtCe;\n      const {\n        row,\n        col,\n        visualCol,\n        visualRow,\n        type,\n        instance,\n        dateFormat,\n        locale\n      } = this.hot.getCellMeta(rowIndex, visualColumn);\n      const dataValue = (_this$hot$getDataAtCe = this.hot.getDataAtCell(this.hot.toVisualRow(rowIndex), visualColumn)) !== null && _this$hot$getDataAtCe !== void 0 ? _this$hot$getDataAtCe : value;\n      data.push({\n        meta: {\n          row,\n          col,\n          visualCol,\n          visualRow,\n          type,\n          instance,\n          dateFormat,\n          locale\n        },\n        value: toEmptyString(dataValue)\n      });\n    });\n    return data;\n  }\n  /**\n   * Update the condition of ValueComponent, based on the handled changes.\n   *\n   * @private\n   * @param {number} columnIndex Column index of handled ValueComponent condition.\n   */\n  updateValueComponentCondition(columnIndex) {\n    const dataAtCol = this.hot.getDataAtCol(columnIndex);\n    const selectedValues = unifyColumnValues(dataAtCol);\n    this.conditionUpdateObserver.updateStatesAtColumn(columnIndex, selectedValues);\n  }\n\n  /**\n   * Restores components to its saved state.\n   *\n   * @private\n   * @param {Array} components List of components.\n   */\n  restoreComponents(components) {\n    var _this$getSelectedColu;\n    const physicalIndex = (_this$getSelectedColu = this.getSelectedColumn()) === null || _this$getSelectedColu === void 0 ? void 0 : _this$getSelectedColu.physicalIndex;\n    components.forEach(component => {\n      if (component.isHidden()) {\n        return;\n      }\n      component.restoreState(physicalIndex);\n    });\n    this.updateDependentComponentsVisibility();\n  }\n  /**\n   * Get an operation, based on the number and types of arguments (where arguments are states of components).\n   *\n   * @param {string} suggestedOperation Operation which was chosen by user from UI.\n   * @param {object} byConditionState1 State of first condition component.\n   * @param {object} byConditionState2 State of second condition component.\n   * @param {object} byValueState State of value component.\n   * @private\n   * @returns {string}\n   */\n  getOperationBasedOnArguments(suggestedOperation, byConditionState1, byConditionState2, byValueState) {\n    let operation = suggestedOperation;\n    if (operation === OPERATION_OR && byConditionState1.command.key !== CONDITION_NONE && byConditionState2.command.key !== CONDITION_NONE && byValueState.command.key !== CONDITION_NONE) {\n      operation = OPERATION_OR_THEN_VARIABLE;\n    } else if (byValueState.command.key !== CONDITION_NONE) {\n      if (byConditionState1.command.key === CONDITION_NONE || byConditionState2.command.key === CONDITION_NONE) {\n        operation = OPERATION_AND;\n      }\n    }\n    return operation;\n  }\n  /**\n   * Listen to the keyboard input on document body and forward events to instance of Handsontable\n   * created by DropdownMenu plugin.\n   *\n   * @private\n   */\n  setListeningDropdownMenu() {\n    if (this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.setListening();\n    }\n  }\n\n  /**\n   * Updates visibility of some of the components, based on the state of the parent component.\n   *\n   * @private\n   */\n  updateDependentComponentsVisibility() {\n    const component = this.components.get('filter_by_condition');\n    const {\n      command\n    } = component.getState();\n    const componentsToShow = [this.components.get('filter_by_condition2'), this.components.get('filter_operators')];\n    if (command.showOperators) {\n      this.showComponents(...componentsToShow);\n    } else {\n      this.hideComponents(...componentsToShow);\n    }\n  }\n  /**\n   * Creates DataFilter instance based on condition collection.\n   *\n   * @private\n   * @param {ConditionCollection} conditionCollection Condition collection object.\n   * @returns {DataFilter}\n   */\n  _createDataFilter() {\n    let conditionCollection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.conditionCollection;\n    return new DataFilter(conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n  }\n  /**\n   * Returns indexes of passed components inside list of `dropdownMenu` items.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   * @returns {Array}\n   */\n  getIndexesOfComponents() {\n    const indexes = [];\n    if (!this.dropdownMenuPlugin) {\n      return indexes;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n      components[_key] = arguments[_key];\n    }\n    arrayEach(components, component => {\n      arrayEach(menu.menuItems, (item, index) => {\n        if (item.key === component.getMenuItemDescriptor().key) {\n          indexes.push(index);\n        }\n      });\n    });\n    return indexes;\n  }\n\n  /**\n   * Changes visibility of component.\n   *\n   * @private\n   * @param {boolean} visible Determine if components should be visible.\n   * @param {...BaseComponent} components List of components.\n   */\n  changeComponentsVisibility() {\n    let visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!this.dropdownMenuPlugin) {\n      return;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    const hotMenu = menu.hotMenu;\n    const hiddenRows = hotMenu.getPlugin('hiddenRows');\n    for (var _len2 = arguments.length, components = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      components[_key2 - 1] = arguments[_key2];\n    }\n    const indexes = this.getIndexesOfComponents(...components);\n    if (visible) {\n      hiddenRows.showRows(indexes);\n    } else {\n      hiddenRows.hideRows(indexes);\n    }\n    hotMenu.render();\n  }\n\n  /**\n   * Hides components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  hideComponents() {\n    for (var _len3 = arguments.length, components = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      components[_key3] = arguments[_key3];\n    }\n    this.changeComponentsVisibility(false, ...components);\n  }\n\n  /**\n   * Shows components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  showComponents() {\n    for (var _len4 = arguments.length, components = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      components[_key4] = arguments[_key4];\n    }\n    this.changeComponentsVisibility(true, ...components);\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    if (this.enabled) {\n      this.components.forEach((component, key) => {\n        if (component !== null) {\n          component.destroy();\n          this.components.set(key, null);\n        }\n      });\n      this.conditionCollection.destroy();\n      this.conditionUpdateObserver.destroy();\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    super.destroy();\n  }\n}\nfunction _onAfterChange2(changes) {\n  if (changes) {\n    arrayEach(changes, change => {\n      const [, prop] = change;\n      const columnIndex = this.hot.propToCol(prop);\n      if (this.conditionCollection.hasConditions(columnIndex)) {\n        this.updateValueComponentCondition(columnIndex);\n      }\n    });\n  }\n}\nfunction _onAfterDropdownMenuShow2() {\n  this.restoreComponents(Array.from(this.components.values()));\n}\nfunction _onAfterDropdownMenuHide2() {\n  this.components.get('filter_by_condition').getSelectElement().closeOptions();\n  this.components.get('filter_by_condition2').getSelectElement().closeOptions();\n}\nfunction _onAfterDropdownMenuDefaultOptions2(defaultOptions) {\n  defaultOptions.items.push({\n    name: SEPARATOR\n  });\n  this.components.forEach(component => {\n    defaultOptions.items.push(component.getMenuItemDescriptor());\n  });\n}\nfunction _onActionBarSubmit2(submitType) {\n  var _this$dropdownMenuPlu3;\n  if (submitType === 'accept') {\n    const selectedColumn = this.getSelectedColumn();\n    if (selectedColumn === null) {\n      var _this$dropdownMenuPlu2;\n      (_this$dropdownMenuPlu2 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu2 === void 0 || _this$dropdownMenuPlu2.close();\n      return;\n    }\n    const {\n      physicalIndex\n    } = selectedColumn;\n    const byConditionState1 = this.components.get('filter_by_condition').getState();\n    const byConditionState2 = this.components.get('filter_by_condition2').getState();\n    const byValueState = this.components.get('filter_by_value').getState();\n    const operation = this.getOperationBasedOnArguments(this.components.get('filter_operators').getActiveOperationId(), byConditionState1, byConditionState2, byValueState);\n    this.conditionUpdateObserver.groupChanges();\n    let columnStackPosition = this.conditionCollection.getColumnStackPosition(physicalIndex);\n    if (columnStackPosition === -1) {\n      columnStackPosition = undefined;\n    }\n    this.conditionCollection.removeConditions(physicalIndex);\n    if (byConditionState1.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byConditionState1, operation, columnStackPosition);\n      if (byConditionState2.command.key !== CONDITION_NONE) {\n        this.conditionCollection.addCondition(physicalIndex, byConditionState2, operation, columnStackPosition);\n      }\n    }\n    if (byValueState.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byValueState, operation, columnStackPosition);\n    }\n    this.conditionUpdateObserver.flush();\n    this.components.forEach(component => component.saveState(physicalIndex));\n    this.filtersRowsMap.clear();\n    this.filter();\n  }\n  (_this$dropdownMenuPlu3 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu3 === void 0 || _this$dropdownMenuPlu3.close();\n}\nfunction _onComponentChange2(component, command) {\n  this.updateDependentComponentsVisibility();\n  if (component.constructor === ConditionComponent && !command.inputsCount) {\n    this.setListeningDropdownMenu();\n  }\n}\nfunction _onSelectUIClosed2() {\n  this.setListeningDropdownMenu();\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  const physicalColumn = this.hot.toPhysicalColumn(col);\n  if (this.enabled && this.conditionCollection.hasConditions(physicalColumn)) {\n    addClass(TH, 'htFiltersActive');\n  } else {\n    removeClass(TH, 'htFiltersActive');\n  }\n}\nfunction _updateComponents2(conditionsState) {\n  var _this$dropdownMenuPlu4;\n  if (!((_this$dropdownMenuPlu4 = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu4 !== void 0 && _this$dropdownMenuPlu4.enabled)) {\n    return;\n  }\n  const {\n    editedConditionStack: {\n      conditions,\n      column\n    }\n  } = conditionsState;\n  const conditionsByValue = conditions.filter(condition => condition.name === CONDITION_BY_VALUE);\n  const conditionsWithoutByValue = conditions.filter(condition => condition.name !== CONDITION_BY_VALUE);\n  if (conditionsByValue.length >= 2 || conditionsWithoutByValue.length >= 3) {\n    warn(toSingleLine`The filter conditions have been applied properly, but couldn’t be displayed visually.\\x20\n        The overall amount of conditions exceed the capability of the dropdown menu.\\x20\n        For more details see the documentation.`);\n  } else {\n    const operationType = this.conditionCollection.getOperation(column);\n    this.components.get('filter_by_condition').updateState(conditionsWithoutByValue[0], column);\n    this.components.get('filter_by_condition2').updateState(conditionsWithoutByValue[1], column);\n    this.components.get('filter_operators').updateState(operationType, column);\n    this.components.get('filter_by_value').updateState(conditionsState);\n  }\n}", "import { PLUGIN_KEY } from \"../formulas.mjs\";\nexport const DEFAULT_LICENSE_KEY = 'internal-use-in-handsontable';\nexport const DEFAULT_SETTINGS = {\n  licenseKey: DEFAULT_LICENSE_KEY,\n  useArrayArithmetic: true,\n  useColumnIndex: false,\n  useStats: false,\n  evaluateNullToZero: true,\n  precisionEpsilon: 1e-13,\n  precisionRounding: 14,\n  smartRounding: true,\n  leapYear1900: false,\n  nullDate: {\n    year: 1899,\n    month: 12,\n    day: 30\n  },\n  nullYear: 30,\n  dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\n  timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\n  matchWholeCell: true,\n  useRegularExpressions: false,\n  useWildcards: true,\n  functionArgSeparator: ',',\n  thousandSeparator: '',\n  decimalSeparator: '.',\n  language: 'enGB'\n};\n\n/**\n * Gets a set of engine settings to be applied on top of the provided settings, based on user's Handsontable settings.\n *\n * @param {object} hotSettings Handsontable settings object.\n * @returns {object} Object containing the overriding options.\n */\nexport function getEngineSettingsOverrides(hotSettings) {\n  var _hotSettings$PLUGIN_K;\n  return {\n    maxColumns: hotSettings.maxColumns,\n    maxRows: hotSettings.maxRows,\n    language: (_hotSettings$PLUGIN_K = hotSettings[PLUGIN_KEY]) === null || _hotSettings$PLUGIN_K === void 0 || (_hotSettings$PLUGIN_K = _hotSettings$PLUGIN_K.language) === null || _hotSettings$PLUGIN_K === void 0 ? void 0 : _hotSettings$PLUGIN_K.langCode\n  };\n}\n\n/**\n * Drop `hyperformula` key from object if it exists.\n *\n * @param {object} pluginSettings Formulas plugin settings.\n * @returns {object}\n */\nfunction cleanEngineSettings(pluginSettings) {\n  return Object.keys(pluginSettings).reduce((obj, key) => {\n    if (key !== 'hyperformula') {\n      obj[key] = pluginSettings[key];\n    }\n    return obj;\n  }, {});\n}\n\n/**\n * Takes the default, user and overriding settings and merges them into a single object to be passed to the engine.\n *\n * The final object gets its parameters in the following order,\n * with properties attached to objects listed in the lower levels of the list overriding the\n * ones above them:\n *\n * 1. Default settings\n * 2. User settings\n * 3. Overrides.\n *\n * Meant to be used during *initialization* of the engine.\n *\n * @param {object} hotSettings The Handsontable settings.\n * @returns {object} The final engine settings.\n */\nexport function getEngineSettingsWithDefaultsAndOverrides(hotSettings) {\n  var _pluginSettings$engin;\n  const pluginSettings = hotSettings[PLUGIN_KEY];\n  const userSettings = cleanEngineSettings(pluginSettings !== null && pluginSettings !== void 0 && (_pluginSettings$engin = pluginSettings.engine) !== null && _pluginSettings$engin !== void 0 && _pluginSettings$engin.hyperformula ? pluginSettings.engine : {});\n  const overrides = getEngineSettingsOverrides(hotSettings);\n  return {\n    ...DEFAULT_SETTINGS,\n    ...userSettings,\n    ...overrides\n  };\n}\n\n/**\n * Get engine settings from a Handsontable settings object with overrides.\n *\n * @param {object} hotSettings Handsontable settings object.\n * @returns {object}\n */\nexport function getEngineSettingsWithOverrides(hotSettings) {\n  var _pluginSettings$engin2;\n  const pluginSettings = hotSettings[PLUGIN_KEY];\n  const userSettings = cleanEngineSettings(pluginSettings !== null && pluginSettings !== void 0 && (_pluginSettings$engin2 = pluginSettings.engine) !== null && _pluginSettings$engin2 !== void 0 && _pluginSettings$engin2.hyperformula ? pluginSettings.engine : {});\n  const overrides = getEngineSettingsOverrides(hotSettings);\n  return {\n    ...userSettings,\n    ...overrides\n  };\n}\n\n/**\n * Check if the new settings are defined and are different from the ones currently used by the engine.\n *\n * @param {object} currentEngineSettings Currently used engine settings.\n * @param {object} newEngineSettings New engine settings.\n * @returns {boolean}\n */\nexport function haveEngineSettingsChanged(currentEngineSettings, newEngineSettings) {\n  return Object.keys(newEngineSettings).some(settingOption => {\n    return newEngineSettings[settingOption] !== undefined && newEngineSettings[settingOption] !== currentEngineSettings[settingOption];\n  });\n}", "import \"core-js/modules/es.array.push.js\";\nimport staticRegister from \"../../../utils/staticRegister.mjs\";\nimport { isUndefined } from \"../../../helpers/mixed.mjs\";\nimport { toSingleLine } from \"../../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../../helpers/console.mjs\";\nimport { isObjectEqual } from \"../../../helpers/object.mjs\";\nimport { PLUGIN_KEY } from \"../formulas.mjs\";\nimport { DEFAULT_LICENSE_KEY, DEFAULT_SETTINGS, getEngineSettingsWithDefaultsAndOverrides } from \"./settings.mjs\";\n/**\n * Prepares and returns the collection for the engine relationship with the HoT instances.\n *\n * @returns {Map}\n */\nfunction getEngineRelationshipRegistry() {\n  const registryKey = 'engine_relationship';\n  const pluginStaticRegistry = staticRegister(PLUGIN_KEY);\n  if (!pluginStaticRegistry.hasItem(registryKey)) {\n    pluginStaticRegistry.register(registryKey, new Map());\n  }\n  return pluginStaticRegistry.getItem(registryKey);\n}\n\n/**\n * Prepares and returns the collection for the engine shared usage.\n *\n * @returns {Map}\n */\nfunction getSharedEngineUsageRegistry() {\n  const registryKey = 'shared_engine_usage';\n  const pluginStaticRegistry = staticRegister(PLUGIN_KEY);\n  if (!pluginStaticRegistry.hasItem(registryKey)) {\n    pluginStaticRegistry.register(registryKey, new Map());\n  }\n  return pluginStaticRegistry.getItem(registryKey);\n}\n\n/**\n * Setups the engine instance. It either creates a new (possibly shared) engine instance, or attaches\n * the plugin to an already-existing instance.\n *\n * @param {Handsontable} hotInstance Handsontable instance.\n * @returns {null|object} Returns the engine instance if everything worked right and `null` otherwise.\n */\nexport function setupEngine(hotInstance) {\n  const hotSettings = hotInstance.getSettings();\n  const pluginSettings = hotSettings[PLUGIN_KEY];\n  const engineConfigItem = pluginSettings === null || pluginSettings === void 0 ? void 0 : pluginSettings.engine;\n  if (pluginSettings === true) {\n    return null;\n  }\n  if (isUndefined(engineConfigItem)) {\n    return null;\n  }\n\n  // `engine.hyperformula` or `engine` is the engine class\n  if (typeof engineConfigItem.hyperformula === 'function' || typeof engineConfigItem === 'function') {\n    var _engineConfigItem$hyp;\n    return registerEngine((_engineConfigItem$hyp = engineConfigItem.hyperformula) !== null && _engineConfigItem$hyp !== void 0 ? _engineConfigItem$hyp : engineConfigItem, hotSettings, hotInstance);\n\n    // `engine` is the engine instance\n  } else if (typeof engineConfigItem === 'object' && isUndefined(engineConfigItem.hyperformula)) {\n    const engineRelationship = getEngineRelationshipRegistry();\n    const sharedEngineUsage = getSharedEngineUsageRegistry().get(engineConfigItem);\n    if (!engineRelationship.has(engineConfigItem)) {\n      engineRelationship.set(engineConfigItem, []);\n    }\n    engineRelationship.get(engineConfigItem).push(hotInstance);\n    if (sharedEngineUsage) {\n      sharedEngineUsage.push(hotInstance.guid);\n    }\n    if (!engineConfigItem.getConfig().licenseKey) {\n      engineConfigItem.updateConfig({\n        licenseKey: DEFAULT_LICENSE_KEY\n      });\n    }\n    if (engineConfigItem.getConfig().leapYear1900 !== DEFAULT_SETTINGS.leapYear1900 || isObjectEqual(engineConfigItem.getConfig().nullDate, DEFAULT_SETTINGS.nullDate) === false) {\n      warn(toSingleLine`If you use HyperFormula with Handsontable, keep the default \\`leapYear1900\\` and \\`nullDate\\` \n      settings. Otherwise, HyperFormula's dates may not sync correctly with Handsontable's dates.`);\n    }\n    return engineConfigItem;\n  }\n  return null;\n}\n\n/**\n * Registers the engine in the global register and attaches the needed event listeners.\n *\n * @param {Function} engineClass The engine class.\n * @param {object} hotSettings The Handsontable settings.\n * @param {Handsontable} hotInstance Handsontable instance.\n * @returns {object} Returns the engine instance.\n */\nexport function registerEngine(engineClass, hotSettings, hotInstance) {\n  const pluginSettings = hotSettings[PLUGIN_KEY];\n  const engineSettings = getEngineSettingsWithDefaultsAndOverrides(hotSettings);\n  const engineRegistry = getEngineRelationshipRegistry();\n  const sharedEngineRegistry = getSharedEngineUsageRegistry();\n  registerCustomFunctions(engineClass, pluginSettings.functions);\n  registerLanguage(engineClass, pluginSettings.language);\n\n  // Create instance\n  const engineInstance = engineClass.buildEmpty(engineSettings);\n\n  // Add it to global registry\n  engineRegistry.set(engineInstance, [hotInstance]);\n  sharedEngineRegistry.set(engineInstance, [hotInstance.guid]);\n  registerNamedExpressions(engineInstance, pluginSettings.namedExpressions);\n\n  // Add hooks needed for cross-referencing sheets\n  engineInstance.on('sheetAdded', () => {\n    engineInstance.rebuildAndRecalculate();\n  });\n  engineInstance.on('sheetRemoved', () => {\n    engineInstance.rebuildAndRecalculate();\n  });\n  return engineInstance;\n}\n\n/**\n * Returns the list of the Handsontable instances linked to the specific engine instance.\n *\n * @param {object} engine The engine instance.\n * @returns {Map<number, Handsontable>} Returns Map with Handsontable instances.\n */\nexport function getRegisteredHotInstances(engine) {\n  var _engineRegistry$get;\n  const engineRegistry = getEngineRelationshipRegistry();\n  const hotInstances = engineRegistry.size === 0 ? [] : Array.from((_engineRegistry$get = engineRegistry.get(engine)) !== null && _engineRegistry$get !== void 0 ? _engineRegistry$get : []);\n  return new Map(hotInstances.map(hot => [hot.getPlugin('formulas').sheetId, hot]));\n}\n\n/**\n * Removes the HOT instance from the global register's engine usage array, and if there are no HOT instances left,\n * unregisters the engine itself.\n *\n * @param {object} engine The engine instance.\n * @param {string} hotInstance The Handsontable instance.\n */\nexport function unregisterEngine(engine, hotInstance) {\n  if (engine) {\n    const engineRegistry = getEngineRelationshipRegistry();\n    const engineHotRelationship = engineRegistry.get(engine);\n    const sharedEngineRegistry = getSharedEngineUsageRegistry();\n    const sharedEngineUsage = sharedEngineRegistry.get(engine);\n    if (engineHotRelationship && engineHotRelationship.includes(hotInstance)) {\n      engineHotRelationship.splice(engineHotRelationship.indexOf(hotInstance), 1);\n      if (engineHotRelationship.length === 0) {\n        engineRegistry.delete(engine);\n      }\n    }\n    if (sharedEngineUsage && sharedEngineUsage.includes(hotInstance.guid)) {\n      sharedEngineUsage.splice(sharedEngineUsage.indexOf(hotInstance.guid), 1);\n      if (sharedEngineUsage.length === 0) {\n        sharedEngineRegistry.delete(engine);\n        engine.destroy();\n      }\n    }\n  }\n}\n\n/**\n * Registers the custom functions for the engine.\n *\n * @param {Function} engineClass The engine class.\n * @param {Array} customFunctions The custom functions array.\n */\nexport function registerCustomFunctions(engineClass, customFunctions) {\n  if (customFunctions) {\n    customFunctions.forEach(func => {\n      const {\n        name,\n        plugin,\n        translations\n      } = func;\n      try {\n        engineClass.registerFunction(name, plugin, translations);\n      } catch (e) {\n        warn(e.message);\n      }\n    });\n  }\n}\n\n/**\n * Registers the provided language for the engine.\n *\n * @param {Function} engineClass The engine class.\n * @param {object} languageSetting The engine's language object.\n */\nexport function registerLanguage(engineClass, languageSetting) {\n  if (languageSetting) {\n    const {\n      langCode\n    } = languageSetting;\n    try {\n      engineClass.registerLanguage(langCode, languageSetting);\n    } catch (e) {\n      warn(e.message);\n    }\n  }\n}\n\n/**\n * Registers the provided named expressions in the engine instance.\n *\n * @param {object} engineInstance The engine instance.\n * @param {Array} namedExpressions Array of the named expressions to be registered.\n */\nexport function registerNamedExpressions(engineInstance, namedExpressions) {\n  if (namedExpressions) {\n    engineInstance.suspendEvaluation();\n    namedExpressions.forEach(namedExp => {\n      const {\n        name,\n        expression,\n        scope,\n        options\n      } = namedExp;\n      try {\n        engineInstance.addNamedExpression(name, expression, scope, options);\n      } catch (e) {\n        warn(e.message);\n      }\n    });\n    engineInstance.resumeEvaluation();\n  }\n}\n\n/**\n * Sets up a new sheet.\n *\n * @param {object} engineInstance The engine instance.\n * @param {string} sheetName The new sheet name.\n * @returns {*}\n */\nexport function setupSheet(engineInstance, sheetName) {\n  if (isUndefined(sheetName) || !engineInstance.doesSheetExist(sheetName)) {\n    sheetName = engineInstance.addSheet(sheetName);\n  }\n  return sheetName;\n}", "import moment from 'moment';\nconst DEFAULT_DATE_FORMAT_HYPERFORMULA = 'DD/MM/YYYY';\n\n/**\n * Checks if provided formula expression is escaped.\n *\n * @param {*} expression Expression to check.\n * @returns {boolean}\n */\nexport function isEscapedFormulaExpression(expression) {\n  return typeof expression === 'string' && expression.charAt(0) === '\\'' && expression.charAt(1) === '=';\n}\n\n/**\n * Replaces escaped formula expression into valid non-unescaped string.\n *\n * @param {string} expression Expression to process.\n * @returns {string}\n */\nexport function unescapeFormulaExpression(expression) {\n  return isEscapedFormulaExpression(expression) ? expression.substr(1) : expression;\n}\n\n/**\n * Checks whether string looks like formula or not. Corresponds to {@link https://hyperformula.handsontable.com/api/globals.html#isformula|HyperFormula's implementation}.\n *\n * @param {string} value Checked value.\n * @returns {boolean}\n */\nexport function isFormula(value) {\n  return typeof value === 'string' && value.startsWith('=');\n}\n\n/**\n * Checks if provided value is a date according to cell meta.\n *\n * @param {*} value Checked value.\n * @param {string} cellType Type of a cell.\n * @returns {boolean}\n */\nexport function isDate(value, cellType) {\n  return typeof value === 'string' && cellType === 'date';\n}\n\n/**\n * Checks if provided date is a valid date according to cell date format.\n *\n * @param {*} date Checked date.\n * @param {object} dateFormat Handled format for a date.\n * @returns {boolean}\n */\nexport function isDateValid(date, dateFormat) {\n  return moment(date, dateFormat, true).isValid();\n}\n\n/**\n * Returns date formatted in HF's default format.\n *\n * @param {string} date Date formatted according to Handsontable cell date format.\n * @param {string} dateFormat The format used for the date passed.\n * @returns {string}\n */\nexport function getDateInHfFormat(date, dateFormat) {\n  return moment(date, dateFormat, true).format(DEFAULT_DATE_FORMAT_HYPERFORMULA);\n}\n\n/**\n * Returns date formatted in HF's default format.\n *\n * @param {string} date Date formatted according to Handsontable cell date format.\n * @param {string} dateFormat The format used for the date passed.\n * @returns {string}\n */\nexport function getDateInHotFormat(date, dateFormat) {\n  return moment(date, DEFAULT_DATE_FORMAT_HYPERFORMULA, true).format(dateFormat);\n}\n\n/**\n * Converts Excel-like dates into strings and formats them based on the handled date format.\n *\n * @param {number} numericDate An integer representing numbers of days from January 1, 1900.\n * @param {string} dateFormat The format used for parsing an output.\n * @returns {string}\n */\nexport function getDateFromExcelDate(numericDate, dateFormat) {\n  // To replicate the behavior from the HyperFormula. UTC starts from 31/12/1899, while HF from 30/12/1899.\n  const dateOffset = -1;\n\n  // Based on solution from: https://stackoverflow.com/a/67130235.\n  const dateForFormatting = new Date(Date.UTC(0, 0, numericDate + dateOffset));\n  return moment(dateForFormatting).format(dateFormat);\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { toUpperCaseFirst } from \"../../../helpers/string.mjs\";\n/**\n * @private\n * @class IndexSyncer\n * @description\n *\n * Indexes synchronizer responsible for providing logic for particular axis. It respects an idea to represent trimmed\n * elements in HF's engine to perform formulas calculations on them. It also provides method for translation from visual\n * row/column indexes to HF's row/column indexes.\n */\nvar _axis = /*#__PURE__*/new WeakMap();\nvar _indexMapper = /*#__PURE__*/new WeakMap();\nvar _indexSyncer = /*#__PURE__*/new WeakMap();\nvar _indexesSequence = /*#__PURE__*/new WeakMap();\nvar _movedIndexes = /*#__PURE__*/new WeakMap();\nvar _finalIndex = /*#__PURE__*/new WeakMap();\nvar _removedIndexes = /*#__PURE__*/new WeakMap();\nclass AxisSyncer {\n  constructor(axis, indexMapper, indexSyncer) {\n    /**\n     * The axis for which the actions are performed.\n     *\n     * @private\n     * @type {'row'|'column'}\n     */\n    _classPrivateFieldInitSpec(this, _axis, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Reference to index mapper.\n     *\n     * @private\n     * @type {IndexMapper}\n     */\n    _classPrivateFieldInitSpec(this, _indexMapper, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * The index synchronizer for both axis (is storing some more general information).\n     *\n     * @private\n     * @type {IndexSyncer}\n     */\n    _classPrivateFieldInitSpec(this, _indexSyncer, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Sequence of physical indexes stored for watching changes and calculating some transformations.\n     *\n     * @private\n     * @type {Array<number>}\n     */\n    _classPrivateFieldInitSpec(this, _indexesSequence, {\n      writable: true,\n      value: []\n    });\n    /**\n     * List of moved HF indexes, stored before performing move on HOT to calculate transformation needed on HF's engine.\n     *\n     * @private\n     * @type {Array<number>}\n     */\n    _classPrivateFieldInitSpec(this, _movedIndexes, {\n      writable: true,\n      value: []\n    });\n    /**\n     * Final HF's place where to move indexes, stored before performing move on HOT to calculate transformation needed on HF's engine.\n     *\n     * @private\n     * @type {number|undefined}\n     */\n    _classPrivateFieldInitSpec(this, _finalIndex, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * List of removed HF indexes, stored before performing removal on HOT to calculate transformation needed on HF's engine.\n     *\n     * @private\n     * @type {Array<number>}\n     */\n    _classPrivateFieldInitSpec(this, _removedIndexes, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldSet(this, _axis, axis);\n    _classPrivateFieldSet(this, _indexMapper, indexMapper);\n    _classPrivateFieldSet(this, _indexSyncer, indexSyncer);\n  }\n\n  /**\n   * Sets removed HF indexes (it should be done right before performing move on HOT).\n   *\n   * @param {Array<number>} removedIndexes List of removed physical indexes.\n   * @returns {Array<number>} List of removed visual indexes.\n   */\n  setRemovedHfIndexes(removedIndexes) {\n    _classPrivateFieldSet(this, _removedIndexes, removedIndexes.map(physicalIndex => {\n      const visualIndex = _classPrivateFieldGet(this, _indexMapper).getVisualFromPhysicalIndex(physicalIndex);\n      return this.getHfIndexFromVisualIndex(visualIndex);\n    }));\n    return _classPrivateFieldGet(this, _removedIndexes);\n  }\n\n  /**\n   * Gets removed HF indexes (right before performing removal on HOT).\n   *\n   * @returns {Array<number>} List of removed HF indexes.\n   */\n  getRemovedHfIndexes() {\n    return _classPrivateFieldGet(this, _removedIndexes);\n  }\n\n  /**\n   * Gets corresponding HyperFormula index for particular visual index. It's respecting the idea that HF's engine\n   * is fed also with trimmed indexes (business requirements for formula result calculation also for trimmed elements).\n   *\n   * @param {number} visualIndex Visual index.\n   * @returns {number}\n   */\n  getHfIndexFromVisualIndex(visualIndex) {\n    const indexesSequence = _classPrivateFieldGet(this, _indexMapper).getIndexesSequence();\n    const notTrimmedIndexes = _classPrivateFieldGet(this, _indexMapper).getNotTrimmedIndexes();\n    return indexesSequence.indexOf(notTrimmedIndexes[visualIndex]);\n  }\n\n  /**\n   * Synchronizes moves done on HOT to HF engine (based on previously calculated positions).\n   *\n   * @private\n   * @param {Array<{from: number, to: number}>} moves Calculated HF's move positions.\n   */\n  syncMoves(moves) {\n    const NUMBER_OF_MOVED_INDEXES = 1;\n    const SYNC_MOVE_METHOD_NAME = `move${toUpperCaseFirst(_classPrivateFieldGet(this, _axis))}s`;\n    _classPrivateFieldGet(this, _indexSyncer).getEngine().batch(() => {\n      moves.forEach(move => {\n        const moveToTheSamePosition = move.from !== move.to;\n        // Moving from left to right (or top to bottom) to a line (drop index) right after already moved element.\n        const anotherMoveWithoutEffect = move.from + 1 !== move.to;\n        if (moveToTheSamePosition && anotherMoveWithoutEffect) {\n          _classPrivateFieldGet(this, _indexSyncer).getEngine()[SYNC_MOVE_METHOD_NAME](_classPrivateFieldGet(this, _indexSyncer).getSheetId(), move.from, NUMBER_OF_MOVED_INDEXES, move.to);\n        }\n      });\n    });\n  }\n\n  /**\n   * Stores information about performed HOT moves for purpose of calculating where to move HF elements.\n   *\n   * @param {Array<number>} movedVisualIndexes Sequence of moved visual indexes for certain axis.\n   * @param {number} visualFinalIndex Final visual place where to move HOT indexes.\n   * @param {boolean} movePossible Indicates if it's possible to move HOT indexes to the desired position.\n   */\n  storeMovesInformation(movedVisualIndexes, visualFinalIndex, movePossible) {\n    if (movePossible === false) {\n      return;\n    }\n    _classPrivateFieldSet(this, _movedIndexes, movedVisualIndexes.map(index => this.getHfIndexFromVisualIndex(index)));\n    _classPrivateFieldSet(this, _finalIndex, this.getHfIndexFromVisualIndex(visualFinalIndex));\n  }\n\n  /**\n   * Gets first position where to move element (respecting the fact that some element will be sooner or later\n   * taken out of the dataset in order to move them).\n   *\n   * @param {Array<number>} movedHfIndexes Sequence of moved HF indexes for certain axis.\n   * @param {number} finalHfIndex Final HF place where to move rows.\n   * @returns {number} HF's index informing where to move the first element.\n   * @private\n   */\n  getMoveLine(movedHfIndexes, finalHfIndex) {\n    const numberOfElements = _classPrivateFieldGet(this, _indexMapper).getNumberOfIndexes();\n    const notMovedElements = Array.from(Array(numberOfElements).keys()).filter(index => movedHfIndexes.includes(index) === false);\n    if (finalHfIndex === 0) {\n      var _notMovedElements$fin;\n      return (_notMovedElements$fin = notMovedElements[finalHfIndex]) !== null && _notMovedElements$fin !== void 0 ? _notMovedElements$fin : 0; // Moving before the first dataset's element.\n    }\n\n    return notMovedElements[finalHfIndex - 1] + 1; // Moving before another element.\n  }\n\n  /**\n   * Gets initially calculated HF's move positions.\n   *\n   * @private\n   * @param {Array<number>} movedHfIndexes Sequence of moved HF indexes for certain axis.\n   * @param {number} finalHfIndex Final HF place where to move rows.\n   * @returns {Array<{from: number, to: number}>} Initially calculated HF's move positions.\n   */\n  getInitiallyCalculatedMoves(movedHfIndexes, finalHfIndex) {\n    let moveLine = this.getMoveLine(movedHfIndexes, finalHfIndex);\n    const moves = [];\n    movedHfIndexes.forEach(movedHfIndex => {\n      const move = {\n        from: movedHfIndex,\n        to: moveLine\n      };\n      moves.forEach(previouslyMovedIndex => {\n        const isMovingFromEndToStart = previouslyMovedIndex.from > previouslyMovedIndex.to;\n        const isMovingElementBefore = previouslyMovedIndex.to <= move.from;\n        const isMovingAfterElement = previouslyMovedIndex.from > move.from;\n        if (isMovingAfterElement && isMovingElementBefore && isMovingFromEndToStart) {\n          move.from += 1;\n        }\n      });\n\n      // Moved element from right to left (or bottom to top).\n      if (move.from >= moveLine) {\n        moveLine += 1;\n      }\n      moves.push(move);\n    });\n    return moves;\n  }\n\n  /**\n   * Gets finally calculated HF's move positions (after adjusting).\n   *\n   * @private\n   * @param {Array<{from: number, to: number}>} moves Initially calculated HF's move positions.\n   * @returns {Array<{from: number, to: number}>} Finally calculated HF's move positions (after adjusting).\n   */\n  adjustedCalculatedMoves(moves) {\n    moves.forEach((move, index) => {\n      const nextMoved = moves.slice(index + 1);\n      nextMoved.forEach(nextMovedIndex => {\n        const isMovingFromStartToEnd = nextMovedIndex.from < nextMovedIndex.to;\n        if (nextMovedIndex.from > move.from && isMovingFromStartToEnd) {\n          nextMovedIndex.from -= 1;\n        }\n      });\n    });\n    return moves;\n  }\n\n  /**\n   * Calculating where to move HF elements and performing already calculated moves.\n   *\n   * @param {boolean} movePossible Indicates if it was possible to move HOT indexes to the desired position.\n   * @param {boolean} orderChanged Indicates if order of HOT indexes was changed by move.\n   */\n  calculateAndSyncMoves(movePossible, orderChanged) {\n    if (_classPrivateFieldGet(this, _indexSyncer).isPerformingUndoRedo()) {\n      return;\n    }\n    if (movePossible === false || orderChanged === false) {\n      return;\n    }\n    const calculatedMoves = this.adjustedCalculatedMoves(this.getInitiallyCalculatedMoves(_classPrivateFieldGet(this, _movedIndexes), _classPrivateFieldGet(this, _finalIndex)));\n    if (_classPrivateFieldGet(this, _indexSyncer).getSheetId() === null) {\n      _classPrivateFieldGet(this, _indexSyncer).getPostponeAction(() => this.syncMoves(calculatedMoves));\n    } else {\n      this.syncMoves(calculatedMoves);\n    }\n  }\n\n  /**\n   * Gets callback for hook triggered after performing change of indexes order.\n   *\n   * @returns {Function}\n   */\n  getIndexesChangeSyncMethod() {\n    const SYNC_ORDER_CHANGE_METHOD_NAME = `set${toUpperCaseFirst(_classPrivateFieldGet(this, _axis))}Order`;\n    return source => {\n      if (_classPrivateFieldGet(this, _indexSyncer).isPerformingUndoRedo()) {\n        return;\n      }\n      const newSequence = _classPrivateFieldGet(this, _indexMapper).getIndexesSequence();\n      if (source === 'update') {\n        const relativeTransformation = _classPrivateFieldGet(this, _indexesSequence).map(index => newSequence.indexOf(index));\n        const sheetDimensions = _classPrivateFieldGet(this, _indexSyncer).getEngine().getSheetDimensions(_classPrivateFieldGet(this, _indexSyncer).getSheetId());\n        let sizeForAxis;\n        if (_classPrivateFieldGet(this, _axis) === 'row') {\n          sizeForAxis = sheetDimensions.height;\n        } else {\n          sizeForAxis = sheetDimensions.width;\n        }\n        const numberOfReorganisedIndexes = relativeTransformation.length;\n\n        // Sheet dimension can be changed by HF's engine for purpose of calculating values. It extends dependency\n        // graph to calculate values outside of a defined dataset. This part of code could be removed after resolving\n        // feature request from HF issue board (handsontable/hyperformula#1179).\n        for (let i = numberOfReorganisedIndexes; i < sizeForAxis; i += 1) {\n          relativeTransformation.push(i);\n        }\n        _classPrivateFieldGet(this, _indexSyncer).getEngine()[SYNC_ORDER_CHANGE_METHOD_NAME](_classPrivateFieldGet(this, _indexSyncer).getSheetId(), relativeTransformation);\n      }\n      _classPrivateFieldSet(this, _indexesSequence, newSequence);\n    };\n  }\n\n  /**\n   * Initialize the AxisSyncer.\n   */\n  init() {\n    _classPrivateFieldSet(this, _indexesSequence, _classPrivateFieldGet(this, _indexMapper).getIndexesSequence());\n  }\n}\nexport default AxisSyncer;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport AxisSyncer from \"./axisSyncer.mjs\";\n/**\n * @private\n * @class IndexSyncer\n * @description\n *\n * Indexes synchronizer responsible for providing logic for syncing actions done on indexes for HOT to actions performed\n * on HF's.\n *\n */\nvar _rowIndexSyncer = /*#__PURE__*/new WeakMap();\nvar _columnIndexSyncer = /*#__PURE__*/new WeakMap();\nvar _postponeAction = /*#__PURE__*/new WeakMap();\nvar _isPerformingUndo = /*#__PURE__*/new WeakMap();\nvar _isPerformingRedo = /*#__PURE__*/new WeakMap();\nvar _engine = /*#__PURE__*/new WeakMap();\nvar _sheetId = /*#__PURE__*/new WeakMap();\nclass IndexSyncer {\n  constructor(rowIndexMapper, columnIndexMapper, postponeAction) {\n    /**\n     * Indexes synchronizer for the axis of the rows.\n     *\n     * @private\n     * @type {AxisSyncer}\n     */\n    _classPrivateFieldInitSpec(this, _rowIndexSyncer, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Indexes synchronizer for the axis of the columns.\n     *\n     * @private\n     * @type {AxisSyncer}\n     */\n    _classPrivateFieldInitSpec(this, _columnIndexSyncer, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Method which will postpone execution of some action (needed when synchronization endpoint isn't setup yet).\n     *\n     * @private\n     * @type {Function}\n     */\n    _classPrivateFieldInitSpec(this, _postponeAction, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Flag informing whether undo is already performed (we don't perform synchronization in such case).\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isPerformingUndo, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Flag informing whether redo is already performed (we don't perform synchronization in such case).\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isPerformingRedo, {\n      writable: true,\n      value: false\n    });\n    /**\n     * The HF's engine instance which will be synced.\n     *\n     * @private\n     * @type {HyperFormula|null}\n     */\n    _classPrivateFieldInitSpec(this, _engine, {\n      writable: true,\n      value: null\n    });\n    /**\n     * HyperFormula's sheet name.\n     *\n     * @private\n     * @type {string|null}\n     */\n    _classPrivateFieldInitSpec(this, _sheetId, {\n      writable: true,\n      value: null\n    });\n    _classPrivateFieldSet(this, _rowIndexSyncer, new AxisSyncer('row', rowIndexMapper, this));\n    _classPrivateFieldSet(this, _columnIndexSyncer, new AxisSyncer('column', columnIndexMapper, this));\n    _classPrivateFieldSet(this, _postponeAction, postponeAction);\n  }\n\n  /**\n   * Gets index synchronizer for a particular axis.\n   *\n   * @param {'row'|'column'} indexType Type of indexes.\n   * @returns {AxisSyncer}\n   */\n  getForAxis(indexType) {\n    if (indexType === 'row') {\n      return _classPrivateFieldGet(this, _rowIndexSyncer);\n    }\n    return _classPrivateFieldGet(this, _columnIndexSyncer);\n  }\n\n  /**\n   * Sets flag informing whether an undo action is already performed (we don't execute synchronization in such case).\n   *\n   * @param {boolean} flagValue Boolean value for the flag.\n   */\n  setPerformUndo(flagValue) {\n    _classPrivateFieldSet(this, _isPerformingUndo, flagValue);\n  }\n\n  /**\n   * Sets flag informing whether a redo action is already performed (we don't execute synchronization in such case).\n   *\n   * @param {boolean} flagValue Boolean value for the flag.\n   */\n  setPerformRedo(flagValue) {\n    _classPrivateFieldSet(this, _isPerformingRedo, flagValue);\n  }\n\n  /**\n   * Gets information whether redo or undo action is already performed (we don't execute synchronization in such case).\n   *\n   * @private\n   * @returns {boolean}\n   */\n  isPerformingUndoRedo() {\n    return _classPrivateFieldGet(this, _isPerformingUndo) || _classPrivateFieldGet(this, _isPerformingRedo);\n  }\n\n  /**\n   * Gets HyperFormula's sheet id.\n   *\n   * @returns {string|null}\n   */\n  getSheetId() {\n    return _classPrivateFieldGet(this, _sheetId);\n  }\n\n  /**\n   * Gets engine instance that will be used for handled instance of Handsontable.\n   *\n   * @type {HyperFormula|null}\n   */\n  getEngine() {\n    return _classPrivateFieldGet(this, _engine);\n  }\n\n  /**\n   * Gets method which will postpone execution of some action (needed when synchronization endpoint isn't setup yet).\n   *\n   * @returns {Function}\n   */\n  getPostponeAction() {\n    return _classPrivateFieldGet(this, _postponeAction);\n  }\n\n  /**\n   * Setups a synchronization endpoint.\n   *\n   * @param {HyperFormula|null} engine The HF's engine instance which will be synced.\n   * @param {string|null} sheetId HyperFormula's sheet name.\n   */\n  setupSyncEndpoint(engine, sheetId) {\n    _classPrivateFieldSet(this, _engine, engine);\n    _classPrivateFieldSet(this, _sheetId, sheetId);\n    _classPrivateFieldGet(this, _rowIndexSyncer).init();\n    _classPrivateFieldGet(this, _columnIndexSyncer).init();\n  }\n}\nexport default IndexSyncer;", "import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport staticRegister from \"../../utils/staticRegister.mjs\";\nimport { error, warn } from \"../../helpers/console.mjs\";\nimport { isNumeric } from \"../../helpers/number.mjs\";\nimport { isDefined, isUndefined } from \"../../helpers/mixed.mjs\";\nimport { setupEngine, setupSheet, unregisterEngine, getRegisteredHotInstances } from \"./engine/register.mjs\";\nimport { isEscapedFormulaExpression, unescapeFormulaExpression, isDate, isDateValid, getDateInHfFormat, getDateFromExcelDate, getDateInHotFormat, isFormula } from \"./utils.mjs\";\nimport { getEngineSettingsWithOverrides, haveEngineSettingsChanged } from \"./engine/settings.mjs\";\nimport { isArrayOfArrays } from \"../../helpers/data.mjs\";\nimport { toUpperCaseFirst } from \"../../helpers/string.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport IndexSyncer from \"./indexSyncer/index.mjs\";\nexport const PLUGIN_KEY = 'formulas';\nexport const SETTING_KEYS = ['maxRows', 'maxColumns', 'language'];\nexport const PLUGIN_PRIORITY = 260;\nHooks.getSingleton().register('afterNamedExpressionAdded');\nHooks.getSingleton().register('afterNamedExpressionRemoved');\nHooks.getSingleton().register('afterSheetAdded');\nHooks.getSingleton().register('afterSheetRemoved');\nHooks.getSingleton().register('afterSheetRenamed');\nHooks.getSingleton().register('afterFormulasValuesUpdate');\n\n// This function will be used for detecting changes coming from the `UndoRedo` plugin. This kind of change won't be\n// handled by whole body of listeners and therefore won't change undo/redo stack inside engine provided by HyperFormula.\n// HyperFormula's `undo` and `redo` methods will do it instead. Please keep in mind that undo/redo stacks inside\n// instances of Handsontable and HyperFormula should be synced (number of actions should be the same).\nconst isBlockedSource = source => source === 'UndoRedo.undo' || source === 'UndoRedo.redo' || source === 'auto';\n\n/**\n * This plugin allows you to perform Excel-like calculations in your business applications. It does it by an\n * integration with our other product, [HyperFormula](https://github.com/handsontable/hyperformula/), which is a\n * powerful calculation engine with an extensive number of features.\n *\n * To test out HyperFormula, see [this guide](@/guides/formulas/formula-calculation.md#available-functions).\n *\n * @plugin Formulas\n * @class Formulas\n */\nvar _internalOperationPending = /*#__PURE__*/new WeakMap();\nvar _hotWasInitializedWithEmptyData = /*#__PURE__*/new WeakMap();\nvar _engineListeners = /*#__PURE__*/new WeakMap();\nvar _onBeforeValidate = /*#__PURE__*/new WeakSet();\nvar _onBeforeAutofill = /*#__PURE__*/new WeakSet();\nvar _onBeforeLoadData = /*#__PURE__*/new WeakSet();\nvar _onAfterCellMetaReset = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nvar _onModifyData = /*#__PURE__*/new WeakSet();\nvar _onModifySourceData = /*#__PURE__*/new WeakSet();\nvar _onAfterSetDataAtCell = /*#__PURE__*/new WeakSet();\nvar _onAfterSetSourceDataAtCell = /*#__PURE__*/new WeakSet();\nvar _onBeforeCreateRow = /*#__PURE__*/new WeakSet();\nvar _onBeforeCreateCol = /*#__PURE__*/new WeakSet();\nvar _onBeforeRemoveRow = /*#__PURE__*/new WeakSet();\nvar _onBeforeRemoveCol = /*#__PURE__*/new WeakSet();\nvar _onAfterCreateRow = /*#__PURE__*/new WeakSet();\nvar _onAfterCreateCol = /*#__PURE__*/new WeakSet();\nvar _onAfterRemoveRow = /*#__PURE__*/new WeakSet();\nvar _onAfterRemoveCol = /*#__PURE__*/new WeakSet();\nvar _onAfterDetachChild = /*#__PURE__*/new WeakSet();\nvar _onEngineValuesUpdated = /*#__PURE__*/new WeakSet();\nvar _onEngineNamedExpressionsAdded = /*#__PURE__*/new WeakSet();\nvar _onEngineNamedExpressionsRemoved = /*#__PURE__*/new WeakSet();\nvar _onEngineSheetAdded = /*#__PURE__*/new WeakSet();\nvar _onEngineSheetRenamed = /*#__PURE__*/new WeakSet();\nvar _onEngineSheetRemoved = /*#__PURE__*/new WeakSet();\nexport class Formulas extends BasePlugin {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    /**\n     * Called when a sheet is removed from the engine instance.\n     *\n     * @fires Hooks#afterSheetRemoved\n     * @param {string} removedSheetDisplayName The removed sheet name.\n     * @param {Array} changes The values and location of applied changes.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineSheetRemoved);\n    /**\n     * Called when a sheet in the engine instance is renamed.\n     *\n     * @fires Hooks#afterSheetRenamed\n     * @param {string} oldDisplayName The old name of the sheet.\n     * @param {string} newDisplayName The new name of the sheet.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineSheetRenamed);\n    /**\n     * Called when a new sheet is added to the engine instance.\n     *\n     * @fires Hooks#afterSheetAdded\n     * @param {string} addedSheetDisplayName The name of the added sheet.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineSheetAdded);\n    /**\n     * Called when a named expression is removed from the engine instance.\n     *\n     * @fires Hooks#afterNamedExpressionRemoved\n     * @param {string} namedExpressionName The name of the removed expression.\n     * @param {Array} changes The values and location of applied changes.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineNamedExpressionsRemoved);\n    /**\n     * Called when a named expression is added to the engine instance.\n     *\n     * @fires Hooks#afterNamedExpressionAdded\n     * @param {string} namedExpressionName The name of the added expression.\n     * @param {Array} changes The values and location of applied changes.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineNamedExpressionsAdded);\n    /**\n     * Called when a value is updated in the engine.\n     *\n     * @fires Hooks#afterFormulasValuesUpdate\n     * @param {Array} changes The values and location of applied changes.\n     */\n    _classPrivateMethodInitSpec(this, _onEngineValuesUpdated);\n    /**\n     * `afterDetachChild` hook callback.\n     * Used to sync the data of the rows detached in the Nested Rows plugin with the engine's dataset.\n     *\n     * @param {object} parent An object representing the parent from which the element was detached.\n     * @param {object} element The detached element.\n     * @param {number} finalElementRowIndex The final row index of the detached element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDetachChild);\n    /**\n     * `afterRemoveCol` hook callback.\n     *\n     * @param {number} col Visual index of starter column.\n     * @param {number} amount An amount of removed columns.\n     * @param {number[]} physicalColumns An array of physical columns removed from the data source.\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRemoveCol);\n    /**\n     * `afterRemoveRow` hook callback.\n     *\n     * @param {number} row Visual index of starter row.\n     * @param {number} amount An amount of removed rows.\n     * @param {number[]} physicalRows An array of physical rows removed from the data source.\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRemoveRow);\n    /**\n     * `afterCreateCol` hook callback.\n     *\n     * @param {number} visualColumn Represents the visual index of first newly created column in the data source.\n     * @param {number} amount Number of newly created columns in the data source.\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCreateCol);\n    /**\n     * `afterCreateRow` hook callback.\n     *\n     * @param {number} visualRow Represents the visual index of first newly created row in the data source array.\n     * @param {number} amount Number of newly created rows in the data source array.\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCreateRow);\n    /**\n     * `beforeRemoveCol` hook callback.\n     *\n     * @param {number} col Visual index of starter column.\n     * @param {number} amount Amount of columns to be removed.\n     * @param {number[]} physicalColumns An array of physical columns removed from the data source.\n     * @returns {*|boolean} If false is returned the action is canceled.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRemoveCol);\n    /**\n     * `beforeRemoveRow` hook callback.\n     *\n     * @param {number} row Visual index of starter row.\n     * @param {number} amount Amount of rows to be removed.\n     * @param {number[]} physicalRows An array of physical rows removed from the data source.\n     * @returns {*|boolean} If false is returned the action is canceled.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRemoveRow);\n    /**\n     * `beforeCreateCol` hook callback.\n     *\n     * @param {number} visualColumn Represents the visual index of first newly created column in the data source.\n     * @param {number} amount Number of newly created columns in the data source.\n     * @returns {*|boolean} If false is returned the action is canceled.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeCreateCol);\n    /**\n     * `beforeCreateRow` hook callback.\n     *\n     * @param {number} visualRow Represents the visual index of first newly created row in the data source array.\n     * @param {number} amount Number of newly created rows in the data source array.\n     * @returns {*|boolean} If false is returned the action is canceled.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeCreateRow);\n    /**\n     * `onAfterSetSourceDataAtCell` hook callback.\n     *\n     * @param {Array[]} changes An array of changes in format [[row, column, oldValue, value], ...].\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterSetSourceDataAtCell);\n    /**\n     * `onAfterSetDataAtCell` hook callback.\n     *\n     * @param {Array[]} changes An array of changes in format [[row, prop, oldValue, value], ...].\n     * @param {string} [source] String that identifies source of hook call\n     *                          ([list of all available sources]{@link https://handsontable.com/docs/javascript-data-grid/events-and-hooks/#handsontable-hooks}).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterSetDataAtCell);\n    /**\n     * `modifySourceData` hook callback.\n     *\n     * @param {number} row Physical row index.\n     * @param {number|string} columnOrProp Physical column index or prop.\n     * @param {object} valueHolder Object which contains original value which can be modified by overwriting `.value`\n     *   property.\n     * @param {string} ioMode String which indicates for what operation hook is fired (`get` or `set`).\n     */\n    _classPrivateMethodInitSpec(this, _onModifySourceData);\n    /**\n     * `modifyData` hook callback.\n     *\n     * @param {number} physicalRow Physical row index.\n     * @param {number} visualColumn Visual column index.\n     * @param {object} valueHolder Object which contains original value which can be modified by overwriting `.value`\n     *   property.\n     * @param {string} ioMode String which indicates for what operation hook is fired (`get` or `set`).\n     */\n    _classPrivateMethodInitSpec(this, _onModifyData);\n    /**\n     * `afterLoadData` hook callback.\n     *\n     * @param {Array} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded during the initialization.\n     * @param {string} [source] Source of the call.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * Callback to `afterCellMetaReset` hook which is triggered after setting cell meta.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCellMetaReset);\n    /**\n     * `beforeLoadData` hook callback.\n     *\n     * @param {Array} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded during the initialization.\n     * @param {string} [source] Source of the call.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeLoadData);\n    /**\n     * `onBeforeAutofill` hook callback.\n     *\n     * @param {Array[]} fillData The data that was used to fill the `targetRange`. If `beforeAutofill` was used\n     * and returned `[[]]`, this will be the same object that was returned from `beforeAutofill`.\n     * @param {CellRange} sourceRange The range values will be filled from.\n     * @param {CellRange} targetRange The range new values will be filled into.\n     * @returns {boolean|*}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeAutofill);\n    /**\n     * The hook allows to translate the formula value to calculated value before it goes to the\n     * validator function.\n     *\n     * @param {*} value The cell value to validate.\n     * @param {number} visualRow The visual row index.\n     * @param {number|string} prop The visual column index or property name of the column.\n     * @returns {*} Returns value to validate.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeValidate);\n    /**\n     * Flag used to bypass hooks in internal operations.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _internalOperationPending, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Flag needed to mark if Handsontable was initialized with no data.\n     * (Required to work around the fact, that Handsontable auto-generates sample data, when no data is provided).\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _hotWasInitializedWithEmptyData, {\n      writable: true,\n      value: false\n    });\n    /**\n     * The list of the HyperFormula listeners.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _engineListeners, {\n      writable: true,\n      value: [['valuesUpdated', function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _classPrivateMethodGet(_this, _onEngineValuesUpdated, _onEngineValuesUpdated2).call(_this, ...args);\n      }], ['namedExpressionAdded', function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return _classPrivateMethodGet(_this, _onEngineNamedExpressionsAdded, _onEngineNamedExpressionsAdded2).call(_this, ...args);\n      }], ['namedExpressionRemoved', function () {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        return _classPrivateMethodGet(_this, _onEngineNamedExpressionsRemoved, _onEngineNamedExpressionsRemoved2).call(_this, ...args);\n      }], ['sheetAdded', function () {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n        return _classPrivateMethodGet(_this, _onEngineSheetAdded, _onEngineSheetAdded2).call(_this, ...args);\n      }], ['sheetRenamed', function () {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n        return _classPrivateMethodGet(_this, _onEngineSheetRenamed, _onEngineSheetRenamed2).call(_this, ...args);\n      }], ['sheetRemoved', function () {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n        return _classPrivateMethodGet(_this, _onEngineSheetRemoved, _onEngineSheetRemoved2).call(_this, ...args);\n      }]]\n    });\n    /**\n     * Static register used to set up one global HyperFormula instance.\n     * TODO: currently used in tests, might be removed later.\n     *\n     * @private\n     * @type {object}\n     */\n    _defineProperty(this, \"staticRegister\", staticRegister('formulas'));\n    /**\n     * The engine instance that will be used for this instance of Handsontable.\n     *\n     * @type {HyperFormula|null}\n     */\n    _defineProperty(this, \"engine\", null);\n    /**\n     * HyperFormula's sheet name.\n     *\n     * @type {string|null}\n     */\n    _defineProperty(this, \"sheetName\", null);\n    /**\n     * Index synchronizer responsible for manipulating with some general options related to indexes synchronization.\n     *\n     * @type {IndexSyncer|null}\n     */\n    _defineProperty(this, \"indexSyncer\", null);\n    /**\n     * Index synchronizer responsible for syncing the order of HOT and HF's data for the axis of the rows.\n     *\n     * @type {AxisSyncer|null}\n     */\n    _defineProperty(this, \"rowAxisSyncer\", null);\n    /**\n     * Index synchronizer responsible for syncing the order of HOT and HF's data for the axis of the columns.\n     *\n     * @type {AxisSyncer|null}\n     */\n    _defineProperty(this, \"columnAxisSyncer\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get SETTING_KEYS() {\n    return [PLUGIN_KEY, ...SETTING_KEYS];\n  }\n  /**\n   * HyperFormula's sheet id.\n   *\n   * @type {number|null}\n   */\n  get sheetId() {\n    return this.sheetName === null ? null : this.engine.getSheetId(this.sheetName);\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Formulas#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    /* eslint-disable no-unneeded-ternary */\n    return this.hot.getSettings()[PLUGIN_KEY] ? true : false;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _setupEngine,\n      _this2 = this;\n    if (this.enabled) {\n      return;\n    }\n    this.engine = (_setupEngine = setupEngine(this.hot)) !== null && _setupEngine !== void 0 ? _setupEngine : this.engine;\n    if (!this.engine) {\n      warn('Missing the required `engine` key in the Formulas settings. Please fill it with either an' + ' engine class or an engine instance.');\n      return;\n    }\n\n    // Useful for disabling -> enabling the plugin using `updateSettings` or the API.\n    if (this.sheetName !== null && !this.engine.doesSheetExist(this.sheetName)) {\n      const newSheetName = this.addSheet(this.sheetName, this.hot.getSourceDataArray());\n      if (newSheetName !== false) {\n        this.sheetName = newSheetName;\n      }\n    }\n    this.addHook('beforeLoadData', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeLoadData, _onBeforeLoadData2).call(_this2, ...args);\n    });\n    this.addHook('afterLoadData', function () {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterLoadData, _onAfterLoadData2).call(_this2, ...args);\n    });\n\n    // The `updateData` hooks utilize the same logic as the `loadData` hooks.\n    this.addHook('beforeUpdateData', function () {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeLoadData, _onBeforeLoadData2).call(_this2, ...args);\n    });\n    this.addHook('afterUpdateData', function () {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterLoadData, _onAfterLoadData2).call(_this2, ...args);\n    });\n    this.addHook('modifyData', function () {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      return _classPrivateMethodGet(_this2, _onModifyData, _onModifyData2).call(_this2, ...args);\n    });\n    this.addHook('modifySourceData', function () {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      return _classPrivateMethodGet(_this2, _onModifySourceData, _onModifySourceData2).call(_this2, ...args);\n    });\n    this.addHook('beforeValidate', function () {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeValidate, _onBeforeValidate2).call(_this2, ...args);\n    });\n    this.addHook('afterSetSourceDataAtCell', function () {\n      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n        args[_key14] = arguments[_key14];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterSetSourceDataAtCell, _onAfterSetSourceDataAtCell2).call(_this2, ...args);\n    });\n    this.addHook('afterSetDataAtCell', function () {\n      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n        args[_key15] = arguments[_key15];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterSetDataAtCell, _onAfterSetDataAtCell2).call(_this2, ...args);\n    });\n    this.addHook('afterSetDataAtRowProp', function () {\n      for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n        args[_key16] = arguments[_key16];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterSetDataAtCell, _onAfterSetDataAtCell2).call(_this2, ...args);\n    });\n    this.addHook('beforeCreateRow', function () {\n      for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n        args[_key17] = arguments[_key17];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeCreateRow, _onBeforeCreateRow2).call(_this2, ...args);\n    });\n    this.addHook('beforeCreateCol', function () {\n      for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n        args[_key18] = arguments[_key18];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeCreateCol, _onBeforeCreateCol2).call(_this2, ...args);\n    });\n    this.addHook('afterCreateRow', function () {\n      for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n        args[_key19] = arguments[_key19];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterCreateRow, _onAfterCreateRow2).call(_this2, ...args);\n    });\n    this.addHook('afterCreateCol', function () {\n      for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n        args[_key20] = arguments[_key20];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterCreateCol, _onAfterCreateCol2).call(_this2, ...args);\n    });\n    this.addHook('beforeRemoveRow', function () {\n      for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n        args[_key21] = arguments[_key21];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeRemoveRow, _onBeforeRemoveRow2).call(_this2, ...args);\n    });\n    this.addHook('beforeRemoveCol', function () {\n      for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n        args[_key22] = arguments[_key22];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeRemoveCol, _onBeforeRemoveCol2).call(_this2, ...args);\n    });\n    this.addHook('afterRemoveRow', function () {\n      for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterRemoveRow, _onAfterRemoveRow2).call(_this2, ...args);\n    });\n    this.addHook('afterRemoveCol', function () {\n      for (var _len24 = arguments.length, args = new Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n        args[_key24] = arguments[_key24];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterRemoveCol, _onAfterRemoveCol2).call(_this2, ...args);\n    });\n    this.indexSyncer = new IndexSyncer(this.hot.rowIndexMapper, this.hot.columnIndexMapper, postponedAction => {\n      this.hot.addHookOnce('init', () => {\n        // Engine is initialized after executing callback to `afterLoadData` hook. Thus, some actions on indexes should\n        // be postponed.\n        postponedAction();\n      });\n    });\n    this.rowAxisSyncer = this.indexSyncer.getForAxis('row');\n    this.columnAxisSyncer = this.indexSyncer.getForAxis('column');\n    this.hot.addHook('afterRowSequenceChange', this.rowAxisSyncer.getIndexesChangeSyncMethod());\n    this.hot.addHook('afterColumnSequenceChange', this.columnAxisSyncer.getIndexesChangeSyncMethod());\n    this.hot.addHook('beforeRowMove', (movedRows, finalIndex, _, movePossible) => {\n      this.rowAxisSyncer.storeMovesInformation(movedRows, finalIndex, movePossible);\n    });\n    this.hot.addHook('beforeColumnMove', (movedColumns, finalIndex, _, movePossible) => {\n      this.columnAxisSyncer.storeMovesInformation(movedColumns, finalIndex, movePossible);\n    });\n    this.hot.addHook('afterRowMove', (movedRows, finalIndex, dropIndex, movePossible, orderChanged) => {\n      this.rowAxisSyncer.calculateAndSyncMoves(movePossible, orderChanged);\n    });\n    this.hot.addHook('afterColumnMove', (movedColumns, finalIndex, dropIndex, movePossible, orderChanged) => {\n      this.columnAxisSyncer.calculateAndSyncMoves(movePossible, orderChanged);\n    });\n    this.hot.addHook('beforeColumnFreeze', (column, freezePerformed) => {\n      this.columnAxisSyncer.storeMovesInformation([column], this.hot.getSettings().fixedColumnsStart, freezePerformed);\n    });\n    this.hot.addHook('afterColumnFreeze', (_, freezePerformed) => {\n      this.columnAxisSyncer.calculateAndSyncMoves(freezePerformed, freezePerformed);\n    });\n    this.hot.addHook('beforeColumnUnfreeze', (column, unfreezePerformed) => {\n      this.columnAxisSyncer.storeMovesInformation([column], this.hot.getSettings().fixedColumnsStart - 1, unfreezePerformed);\n    });\n    this.hot.addHook('afterColumnUnfreeze', (_, unfreezePerformed) => {\n      this.columnAxisSyncer.calculateAndSyncMoves(unfreezePerformed, unfreezePerformed);\n    });\n\n    // TODO: Actions related to overwriting dates from HOT format to HF default format are done as callback to this\n    // hook, because some hooks, such as `afterLoadData` doesn't have information about composed cell properties.\n    // Another hooks are triggered to late for setting HF's engine data needed for some actions.\n    this.addHook('afterCellMetaReset', function () {\n      for (var _len25 = arguments.length, args = new Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n        args[_key25] = arguments[_key25];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterCellMetaReset, _onAfterCellMetaReset2).call(_this2, ...args);\n    });\n\n    // Handling undo actions on data just using HyperFormula's UndoRedo mechanism\n    this.addHook('beforeUndo', () => {\n      this.indexSyncer.setPerformUndo(true);\n      this.engine.undo();\n    });\n\n    // Handling redo actions on data just using HyperFormula's UndoRedo mechanism\n    this.addHook('beforeRedo', () => {\n      this.indexSyncer.setPerformRedo(true);\n      this.engine.redo();\n    });\n    this.addHook('afterUndo', () => {\n      this.indexSyncer.setPerformUndo(false);\n    });\n    this.addHook('afterUndo', () => {\n      this.indexSyncer.setPerformRedo(false);\n    });\n    this.addHook('afterDetachChild', function () {\n      for (var _len26 = arguments.length, args = new Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n        args[_key26] = arguments[_key26];\n      }\n      return _classPrivateMethodGet(_this2, _onAfterDetachChild, _onAfterDetachChild2).call(_this2, ...args);\n    });\n    this.addHook('beforeAutofill', function () {\n      for (var _len27 = arguments.length, args = new Array(_len27), _key27 = 0; _key27 < _len27; _key27++) {\n        args[_key27] = arguments[_key27];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeAutofill, _onBeforeAutofill2).call(_this2, ...args);\n    });\n    _classPrivateFieldGet(this, _engineListeners).forEach(_ref => {\n      let [eventName, listener] = _ref;\n      return this.engine.on(eventName, listener);\n    });\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldGet(this, _engineListeners).forEach(_ref2 => {\n      let [eventName, listener] = _ref2;\n      return this.engine.off(eventName, listener);\n    });\n    unregisterEngine(this.engine, this.hot);\n    this.engine = null;\n    super.disablePlugin();\n  }\n\n  /**\n   * Triggered on `updateSettings`.\n   *\n   * @private\n   * @param {object} newSettings New set of settings passed to the `updateSettings` method.\n   */\n  updatePlugin(newSettings) {\n    const newEngineSettings = getEngineSettingsWithOverrides(this.hot.getSettings());\n    if (haveEngineSettingsChanged(this.engine.getConfig(), newEngineSettings)) {\n      this.engine.updateConfig(newEngineSettings);\n    }\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (isDefined(pluginSettings) && isDefined(pluginSettings.sheetName) && pluginSettings.sheetName !== this.sheetName) {\n      this.switchSheet(pluginSettings.sheetName);\n    }\n\n    // If no data was passed to the `updateSettings` method and no sheet is connected to the instance -> create a\n    // new sheet using the currently used data. Otherwise, it will be handled by the `afterLoadData` call.\n    if (!newSettings.data && this.sheetName === null) {\n      const sheetName = this.hot.getSettings()[PLUGIN_KEY].sheetName;\n      if (sheetName && this.engine.doesSheetExist(sheetName)) {\n        this.switchSheet(this.sheetName);\n      } else {\n        this.sheetName = this.addSheet(sheetName !== null && sheetName !== void 0 ? sheetName : undefined, this.hot.getSourceDataArray());\n      }\n    }\n    super.updatePlugin(newSettings);\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldGet(this, _engineListeners).forEach(_ref3 => {\n      var _this$engine;\n      let [eventName, listener] = _ref3;\n      return (_this$engine = this.engine) === null || _this$engine === void 0 ? void 0 : _this$engine.off(eventName, listener);\n    });\n    _classPrivateFieldSet(this, _engineListeners, null);\n    unregisterEngine(this.engine, this.hot);\n    this.engine = null;\n    super.destroy();\n  }\n\n  /**\n   * Add a sheet to the shared HyperFormula instance.\n   *\n   * @param {string|null} [sheetName] The new sheet name. If not provided (or a null is passed), will be\n   * auto-generated by HyperFormula.\n   * @param {Array} [sheetData] Data passed to the shared HyperFormula instance. Has to be declared as an array of\n   * arrays - array of objects is not supported in this scenario.\n   * @returns {boolean|string} `false` if the data format is unusable or it is impossible to add a new sheet to the\n   * engine, the created sheet name otherwise.\n   */\n  addSheet(sheetName, sheetData) {\n    if (isDefined(sheetData) && !isArrayOfArrays(sheetData)) {\n      warn('The provided data should be an array of arrays.');\n      return false;\n    }\n    if (sheetName !== undefined && sheetName !== null && this.engine.doesSheetExist(sheetName)) {\n      warn('Sheet with the provided name already exists.');\n      return false;\n    }\n    try {\n      const actualSheetName = this.engine.addSheet(sheetName !== null && sheetName !== void 0 ? sheetName : undefined);\n      if (sheetData) {\n        this.engine.setSheetContent(this.engine.getSheetId(actualSheetName), sheetData);\n      }\n      return actualSheetName;\n    } catch (e) {\n      warn(e.message);\n      return false;\n    }\n  }\n\n  /**\n   * Switch the sheet used as data in the Handsontable instance (it loads the data from the shared HyperFormula\n   * instance).\n   *\n   * @param {string} sheetName Sheet name used in the shared HyperFormula instance.\n   */\n  switchSheet(sheetName) {\n    if (!this.engine.doesSheetExist(sheetName)) {\n      error(`The sheet named \\`${sheetName}\\` does not exist, switch aborted.`);\n      return;\n    }\n    this.sheetName = sheetName;\n    const serialized = this.engine.getSheetSerialized(this.sheetId);\n    if (serialized.length > 0) {\n      this.hot.loadData(serialized, `${toUpperCaseFirst(PLUGIN_KEY)}.switchSheet`);\n    }\n  }\n\n  /**\n   * Get the cell type under specified visual coordinates.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {number} [sheet] The target sheet id, defaults to the current sheet.\n   * @returns {string} Possible values: 'FORMULA' | 'VALUE' | 'ARRAYFORMULA' | 'EMPTY'.\n   */\n  getCellType(row, column) {\n    let sheet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.sheetId;\n    const physicalRow = this.hot.toPhysicalRow(row);\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    if (physicalRow !== null && physicalColumn !== null) {\n      return this.engine.getCellType({\n        sheet,\n        row: this.rowAxisSyncer.getHfIndexFromVisualIndex(row),\n        col: this.columnAxisSyncer.getHfIndexFromVisualIndex(column)\n      });\n    } else {\n      // Should return `EMPTY` when out of bounds (according to the test cases).\n      return 'EMPTY';\n    }\n  }\n\n  /**\n   * Returns `true` if under specified visual coordinates is formula.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {number} [sheet] The target sheet id, defaults to the current sheet.\n   * @returns {boolean}\n   */\n  isFormulaCellType(row, column) {\n    let sheet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.sheetId;\n    return this.engine.doesCellHaveFormula({\n      sheet,\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(row),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(column)\n    });\n  }\n\n  /**\n   * Renders dependent sheets (handsontable instances) based on the changes - list of the\n   * recalculated dependent cells.\n   *\n   * @private\n   * @param {object[]} dependentCells The values and location of applied changes within HF engine.\n   * @param {boolean} [renderSelf] `true` if it's supposed to render itself, `false` otherwise.\n   */\n  renderDependentSheets(dependentCells) {\n    let renderSelf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const affectedSheetIds = new Set();\n    dependentCells.forEach(change => {\n      var _change$address;\n      // For the Named expression the address is empty, hence the `sheetId` is undefined.\n      const sheetId = change === null || change === void 0 || (_change$address = change.address) === null || _change$address === void 0 ? void 0 : _change$address.sheet;\n      if (sheetId !== undefined) {\n        if (!affectedSheetIds.has(sheetId)) {\n          affectedSheetIds.add(sheetId);\n        }\n      }\n    });\n    getRegisteredHotInstances(this.engine).forEach((relatedHot, sheetId) => {\n      if ((renderSelf || sheetId !== this.sheetId) && affectedSheetIds.has(sheetId)) {\n        var _relatedHot$view;\n        relatedHot.render();\n        (_relatedHot$view = relatedHot.view) === null || _relatedHot$view === void 0 || _relatedHot$view.adjustElementsSize();\n      }\n    });\n  }\n\n  /**\n   * Validates dependent cells based on the cells that are modified by the change.\n   *\n   * @private\n   * @param {object[]} dependentCells The values and location of applied changes within HF engine.\n   * @param {object[]} [changedCells] The values and location of applied changes by developer (through API or UI).\n   */\n  validateDependentCells(dependentCells) {\n    let changedCells = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    const stringifyAddress = change => {\n      var _change$address2;\n      const {\n        row,\n        col,\n        sheet\n      } = (_change$address2 = change === null || change === void 0 ? void 0 : change.address) !== null && _change$address2 !== void 0 ? _change$address2 : {};\n      return isDefined(sheet) ? `${sheet}:${row}x${col}` : '';\n    };\n    const changedCellsSet = new Set(changedCells.map(change => stringifyAddress(change)));\n    dependentCells.forEach(change => {\n      var _change$address3, _change$address4;\n      const {\n        row,\n        col\n      } = (_change$address3 = change.address) !== null && _change$address3 !== void 0 ? _change$address3 : {};\n\n      // Don't try to validate cells outside of the visual part of the table.\n      if (isDefined(row) === false || isDefined(col) === false || row >= this.hot.countRows() || col >= this.hot.countCols()) {\n        return;\n      }\n\n      // For the Named expression the address is empty, hence the `sheetId` is undefined.\n      const sheetId = change === null || change === void 0 || (_change$address4 = change.address) === null || _change$address4 === void 0 ? void 0 : _change$address4.sheet;\n      const addressId = stringifyAddress(change);\n\n      // Validate the cells that depend on the calculated formulas. Skip that cells\n      // where the user directly changes the values - the Core triggers those validators.\n      if (sheetId !== undefined && !changedCellsSet.has(addressId)) {\n        const boundHot = getRegisteredHotInstances(this.engine).get(sheetId);\n\n        // if `sheetId` is not bound to any Handsontable instance, skip the validation process\n        if (!boundHot) {\n          return;\n        }\n\n        // It will just re-render certain cell when necessary.\n        boundHot.validateCell(boundHot.getDataAtCell(row, col), boundHot.getCellMeta(row, col), () => {});\n      }\n    });\n  }\n\n  /**\n   * Sync a change from the change-related hooks with the engine.\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @param {Handsontable.CellValue} newValue New value.\n   * @returns {Array} Array of changes exported from the engine.\n   */\n  syncChangeWithEngine(row, column, newValue) {\n    const address = {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(row),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(column),\n      sheet: this.sheetId\n    };\n    if (!this.engine.isItPossibleToSetCellContents(address)) {\n      warn(`Not possible to set cell data at ${JSON.stringify(address)}`);\n      return;\n    }\n    const cellMeta = this.hot.getCellMeta(row, column);\n    if (isDate(newValue, cellMeta.type)) {\n      if (isDateValid(newValue, cellMeta.dateFormat)) {\n        // Rewriting date in HOT format to HF format.\n        newValue = getDateInHfFormat(newValue, cellMeta.dateFormat);\n      } else if (isFormula(newValue) === false) {\n        // Escaping value from date parsing using \"'\" sign (HF feature).\n        newValue = `'${newValue}`;\n      }\n    }\n    return this.engine.setCellContents(address, newValue);\n  }\n}\nfunction _onBeforeValidate2(value, visualRow, prop) {\n  const visualColumn = this.hot.propToCol(prop);\n  if (this.isFormulaCellType(visualRow, visualColumn)) {\n    const address = {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn),\n      sheet: this.sheetId\n    };\n    const cellMeta = this.hot.getCellMeta(visualRow, visualColumn);\n    let cellValue = this.engine.getCellValue(address); // Date as an integer (Excel-like date).\n\n    if (cellMeta.type === 'date' && isNumeric(cellValue)) {\n      cellValue = getDateFromExcelDate(cellValue, cellMeta.dateFormat);\n    }\n\n    // If `cellValue` is an object it is expected to be an error\n    return typeof cellValue === 'object' && cellValue !== null ? cellValue.value : cellValue;\n  }\n  return value;\n}\nfunction _onBeforeAutofill2(fillData, sourceRange, targetRange) {\n  const {\n    row: sourceTopStartRow,\n    col: sourceTopStartColumn\n  } = sourceRange.getTopStartCorner();\n  const {\n    row: sourceBottomEndRow,\n    col: sourceBottomEndColumn\n  } = sourceRange.getBottomEndCorner();\n  const {\n    row: targetTopStartRow,\n    col: targetTopStartColumn\n  } = targetRange.getTopStartCorner();\n  const {\n    row: targetBottomEndRow,\n    col: targetBottomEndColumn\n  } = targetRange.getBottomEndCorner();\n  const engineSourceRange = {\n    start: {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(sourceTopStartRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(sourceTopStartColumn),\n      sheet: this.sheetId\n    },\n    end: {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(sourceBottomEndRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(sourceBottomEndColumn),\n      sheet: this.sheetId\n    }\n  };\n  const engineTargetRange = {\n    start: {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(targetTopStartRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(targetTopStartColumn),\n      sheet: this.sheetId\n    },\n    end: {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(targetBottomEndRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(targetBottomEndColumn),\n      sheet: this.sheetId\n    }\n  };\n\n  // Blocks the autofill operation if HyperFormula says that at least one of\n  // the underlying cell's contents cannot be set.\n  if (this.engine.isItPossibleToSetCellContents(engineTargetRange) === false) {\n    return false;\n  }\n  const fillRangeData = this.engine.getFillRangeData(engineSourceRange, engineTargetRange);\n  const {\n    row: sourceStartRow,\n    col: sourceStartColumn\n  } = engineSourceRange.start;\n  const {\n    row: sourceEndRow,\n    col: sourceEndColumn\n  } = engineSourceRange.end;\n  const populationRowLength = sourceEndRow - sourceStartRow + 1;\n  const populationColumnLength = sourceEndColumn - sourceStartColumn + 1;\n  for (let populatedRowIndex = 0; populatedRowIndex < fillRangeData.length; populatedRowIndex += 1) {\n    for (let populatedColumnIndex = 0; populatedColumnIndex < fillRangeData[populatedRowIndex].length; populatedColumnIndex += 1) {\n      const populatedValue = fillRangeData[populatedRowIndex][populatedColumnIndex];\n      const sourceRow = populatedRowIndex % populationRowLength;\n      const sourceColumn = populatedColumnIndex % populationColumnLength;\n      const sourceCellMeta = this.hot.getCellMeta(sourceRow, sourceColumn);\n      if (isDate(populatedValue, sourceCellMeta.type)) {\n        if (populatedValue.startsWith('\\'')) {\n          // Populating values on HOT side without apostrophe.\n          fillRangeData[populatedRowIndex][populatedColumnIndex] = populatedValue.slice(1);\n        } else if (this.isFormulaCellType(sourceRow, sourceColumn, this.sheetId) === false) {\n          // Populating date in proper format, coming from the source cell.\n          fillRangeData[populatedRowIndex][populatedColumnIndex] = getDateInHotFormat(populatedValue, sourceCellMeta.dateFormat);\n        }\n      }\n    }\n  }\n  return fillRangeData;\n}\nfunction _onBeforeLoadData2(sourceData, initialLoad) {\n  let source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (source.includes(toUpperCaseFirst(PLUGIN_KEY))) {\n    return;\n  }\n\n  // This flag needs to be defined, because not passing data to HOT results in HOT auto-generating a `null`-filled\n  // initial dataset.\n  _classPrivateFieldSet(this, _hotWasInitializedWithEmptyData, isUndefined(this.hot.getSettings().data));\n}\nfunction _onAfterCellMetaReset2() {\n  const sourceDataArray = this.hot.getSourceDataArray();\n  let valueChanged = false;\n  sourceDataArray.forEach((rowData, rowIndex) => {\n    rowData.forEach((cellValue, columnIndex) => {\n      const cellMeta = this.hot.getCellMeta(rowIndex, columnIndex);\n      const dateFormat = cellMeta.dateFormat;\n      if (isDate(cellValue, cellMeta.type)) {\n        valueChanged = true;\n        if (isDateValid(cellValue, dateFormat)) {\n          // Rewriting date in HOT format to HF format.\n          sourceDataArray[rowIndex][columnIndex] = getDateInHfFormat(cellValue, dateFormat);\n        } else if (this.isFormulaCellType(rowIndex, columnIndex) === false) {\n          // Escaping value from date parsing using \"'\" sign (HF feature).\n          sourceDataArray[rowIndex][columnIndex] = `'${cellValue}`;\n        }\n      }\n    });\n  });\n  if (valueChanged === true) {\n    _classPrivateFieldSet(this, _internalOperationPending, true);\n    this.engine.setSheetContent(this.sheetId, sourceDataArray);\n    _classPrivateFieldSet(this, _internalOperationPending, false);\n  }\n}\nfunction _onAfterLoadData2(sourceData, initialLoad) {\n  let source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (source.includes(toUpperCaseFirst(PLUGIN_KEY))) {\n    return;\n  }\n  this.sheetName = setupSheet(this.engine, this.hot.getSettings()[PLUGIN_KEY].sheetName);\n  if (!_classPrivateFieldGet(this, _hotWasInitializedWithEmptyData)) {\n    const sourceDataArray = this.hot.getSourceDataArray();\n    if (this.engine.isItPossibleToReplaceSheetContent(this.sheetId, sourceDataArray)) {\n      _classPrivateFieldSet(this, _internalOperationPending, true);\n      const dependentCells = this.engine.setSheetContent(this.sheetId, sourceDataArray);\n      this.indexSyncer.setupSyncEndpoint(this.engine, this.sheetId);\n      this.renderDependentSheets(dependentCells);\n      _classPrivateFieldSet(this, _internalOperationPending, false);\n    }\n  } else {\n    this.switchSheet(this.sheetName);\n  }\n}\nfunction _onModifyData2(physicalRow, visualColumn, valueHolder, ioMode) {\n  if (ioMode !== 'get' || _classPrivateFieldGet(this, _internalOperationPending) || this.sheetName === null || !this.engine.doesSheetExist(this.sheetName)) {\n    return;\n  }\n  const visualRow = this.hot.toVisualRow(physicalRow);\n  if (visualRow === null || visualColumn === null) {\n    return;\n  }\n\n  // `column` is here as visual index because of inconsistencies related to hook execution in `src/dataMap`.\n  const isFormulaCellType = this.isFormulaCellType(visualRow, visualColumn);\n  if (!isFormulaCellType) {\n    const cellType = this.getCellType(visualRow, visualColumn);\n    if (cellType !== 'ARRAY') {\n      if (isEscapedFormulaExpression(valueHolder.value)) {\n        valueHolder.value = unescapeFormulaExpression(valueHolder.value);\n      }\n      return;\n    }\n  }\n  const address = {\n    row: this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow),\n    col: this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn),\n    sheet: this.sheetId\n  };\n  let cellValue = this.engine.getCellValue(address); // Date as an integer (Excel like date).\n  const cellMeta = this.hot.getCellMeta(visualRow, visualColumn);\n  if (cellMeta.type === 'date' && isNumeric(cellValue)) {\n    cellValue = getDateFromExcelDate(cellValue, cellMeta.dateFormat);\n  }\n\n  // If `cellValue` is an object it is expected to be an error\n  const value = typeof cellValue === 'object' && cellValue !== null ? cellValue.value : cellValue;\n  valueHolder.value = value;\n}\nfunction _onModifySourceData2(row, columnOrProp, valueHolder, ioMode) {\n  if (ioMode !== 'get' || _classPrivateFieldGet(this, _internalOperationPending) || this.sheetName === null || !this.engine.doesSheetExist(this.sheetName)) {\n    return;\n  }\n  const visualRow = this.hot.toVisualRow(row);\n  const visualColumn = this.hot.propToCol(columnOrProp);\n  if (visualRow === null || visualColumn === null) {\n    return;\n  }\n\n  // `column` is here as visual index because of inconsistencies related to hook execution in `src/dataMap`.\n  const isFormulaCellType = this.isFormulaCellType(visualRow, visualColumn);\n  if (!isFormulaCellType) {\n    const cellType = this.getCellType(visualRow, visualColumn);\n    if (cellType !== 'ARRAY') {\n      return;\n    }\n  }\n  const dimensions = this.engine.getSheetDimensions(this.engine.getSheetId(this.sheetName));\n\n  // Don't actually change the source data if HyperFormula is not\n  // initialized yet. This is done to allow the `afterLoadData` hook to\n  // load the existing source data with `Handsontable#getSourceDataArray`\n  // properly.\n  if (dimensions.width === 0 && dimensions.height === 0) {\n    return;\n  }\n  const address = {\n    row: this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow),\n    col: this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn),\n    sheet: this.sheetId\n  };\n  valueHolder.value = this.engine.getCellSerialized(address);\n}\nfunction _onAfterSetDataAtCell2(changes, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const outOfBoundsChanges = [];\n  const changedCells = [];\n  const dependentCells = this.engine.batch(() => {\n    changes.forEach(_ref4 => {\n      let [visualRow, prop,, newValue] = _ref4;\n      const visualColumn = this.hot.propToCol(prop);\n      const physicalRow = this.hot.toPhysicalRow(visualRow);\n      const physicalColumn = this.hot.toPhysicalColumn(visualColumn);\n      const address = {\n        row: this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow),\n        col: this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn),\n        sheet: this.sheetId\n      };\n      if (physicalRow !== null && physicalColumn !== null) {\n        this.syncChangeWithEngine(visualRow, visualColumn, newValue);\n      } else {\n        outOfBoundsChanges.push([visualRow, visualColumn, newValue]);\n      }\n      changedCells.push({\n        address\n      });\n    });\n  });\n  if (outOfBoundsChanges.length) {\n    // Workaround for rows/columns being created two times (by HOT and the engine).\n    // (unfortunately, this requires an extra re-render)\n    this.hot.addHookOnce('afterChange', () => {\n      const outOfBoundsDependentCells = this.engine.batch(() => {\n        outOfBoundsChanges.forEach(_ref5 => {\n          let [row, column, newValue] = _ref5;\n          this.syncChangeWithEngine(row, column, newValue);\n        });\n      });\n      this.renderDependentSheets(outOfBoundsDependentCells, true);\n    });\n  }\n  this.renderDependentSheets(dependentCells);\n  this.validateDependentCells(dependentCells, changedCells);\n}\nfunction _onAfterSetSourceDataAtCell2(changes, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const dependentCells = [];\n  const changedCells = [];\n  changes.forEach(_ref6 => {\n    let [visualRow, prop,, newValue] = _ref6;\n    const visualColumn = this.hot.propToCol(prop);\n    if (!isNumeric(visualColumn)) {\n      return;\n    }\n    const address = {\n      row: this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow),\n      col: this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn),\n      sheet: this.sheetId\n    };\n    if (!this.engine.isItPossibleToSetCellContents(address)) {\n      warn(`Not possible to set source cell data at ${JSON.stringify(address)}`);\n      return;\n    }\n    changedCells.push({\n      address\n    });\n    dependentCells.push(...this.engine.setCellContents(address, newValue));\n  });\n  this.renderDependentSheets(dependentCells);\n  this.validateDependentCells(dependentCells, changedCells);\n}\nfunction _onBeforeCreateRow2(visualRow, amount) {\n  let hfRowIndex = this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow);\n  if (visualRow >= this.hot.countRows()) {\n    hfRowIndex = visualRow; // Row beyond the table boundaries.\n  }\n\n  if (this.sheetId === null || !this.engine.doesSheetExist(this.sheetName) || !this.engine.isItPossibleToAddRows(this.sheetId, [hfRowIndex, amount])) {\n    return false;\n  }\n}\nfunction _onBeforeCreateCol2(visualColumn, amount) {\n  let hfColumnIndex = this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn);\n  if (visualColumn >= this.hot.countCols()) {\n    hfColumnIndex = visualColumn; // Column beyond the table boundaries.\n  }\n\n  if (this.sheetId === null || !this.engine.doesSheetExist(this.sheetName) || !this.engine.isItPossibleToAddColumns(this.sheetId, [hfColumnIndex, amount])) {\n    return false;\n  }\n}\nfunction _onBeforeRemoveRow2(row, amount, physicalRows) {\n  const hfRows = this.rowAxisSyncer.setRemovedHfIndexes(physicalRows);\n  const possible = hfRows.every(hfRow => {\n    return this.engine.isItPossibleToRemoveRows(this.sheetId, [hfRow, 1]);\n  });\n  return possible === false ? false : undefined;\n}\nfunction _onBeforeRemoveCol2(col, amount, physicalColumns) {\n  const hfColumns = this.columnAxisSyncer.setRemovedHfIndexes(physicalColumns);\n  const possible = hfColumns.every(hfColumn => {\n    return this.engine.isItPossibleToRemoveColumns(this.sheetId, [hfColumn, 1]);\n  });\n  return possible === false ? false : undefined;\n}\nfunction _onAfterCreateRow2(visualRow, amount, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const changes = this.engine.addRows(this.sheetId, [this.rowAxisSyncer.getHfIndexFromVisualIndex(visualRow), amount]);\n  this.renderDependentSheets(changes);\n}\nfunction _onAfterCreateCol2(visualColumn, amount, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const changes = this.engine.addColumns(this.sheetId, [this.columnAxisSyncer.getHfIndexFromVisualIndex(visualColumn), amount]);\n  this.renderDependentSheets(changes);\n}\nfunction _onAfterRemoveRow2(row, amount, physicalRows, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const descendingHfRows = this.rowAxisSyncer.getRemovedHfIndexes().sort().reverse();\n  const changes = this.engine.batch(() => {\n    descendingHfRows.forEach(hfRow => {\n      this.engine.removeRows(this.sheetId, [hfRow, 1]);\n    });\n  });\n  this.renderDependentSheets(changes);\n}\nfunction _onAfterRemoveCol2(col, amount, physicalColumns, source) {\n  if (isBlockedSource(source)) {\n    return;\n  }\n  const descendingHfColumns = this.columnAxisSyncer.getRemovedHfIndexes().sort().reverse();\n  const changes = this.engine.batch(() => {\n    descendingHfColumns.forEach(hfColumn => {\n      this.engine.removeColumns(this.sheetId, [hfColumn, 1]);\n    });\n  });\n  this.renderDependentSheets(changes);\n}\nfunction _onAfterDetachChild2(parent, element, finalElementRowIndex) {\n  var _element$__children;\n  _classPrivateFieldSet(this, _internalOperationPending, true);\n  const rowsData = this.hot.getSourceDataArray(finalElementRowIndex, 0, finalElementRowIndex + (((_element$__children = element.__children) === null || _element$__children === void 0 ? void 0 : _element$__children.length) || 0), this.hot.countSourceCols());\n  _classPrivateFieldSet(this, _internalOperationPending, false);\n  rowsData.forEach((row, relativeRowIndex) => {\n    row.forEach((value, colIndex) => {\n      this.engine.setCellContents({\n        col: colIndex,\n        row: finalElementRowIndex + relativeRowIndex,\n        sheet: this.sheetId\n      }, [[value]]);\n    });\n  });\n}\nfunction _onEngineValuesUpdated2(changes) {\n  this.hot.runHooks('afterFormulasValuesUpdate', changes);\n}\nfunction _onEngineNamedExpressionsAdded2(namedExpressionName, changes) {\n  this.hot.runHooks('afterNamedExpressionAdded', namedExpressionName, changes);\n}\nfunction _onEngineNamedExpressionsRemoved2(namedExpressionName, changes) {\n  this.hot.runHooks('afterNamedExpressionRemoved', namedExpressionName, changes);\n}\nfunction _onEngineSheetAdded2(addedSheetDisplayName) {\n  this.hot.runHooks('afterSheetAdded', addedSheetDisplayName);\n}\nfunction _onEngineSheetRenamed2(oldDisplayName, newDisplayName) {\n  this.hot.runHooks('afterSheetRenamed', oldDisplayName, newDisplayName);\n}\nfunction _onEngineSheetRemoved2(removedSheetDisplayName, changes) {\n  this.hot.runHooks('afterSheetRemoved', removedSheetDisplayName, changes);\n}", "import \"core-js/modules/es.array.push.js\";\nimport * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {HiddenColumns} hiddenColumnsPlugin The plugin instance.\n * @returns {object}\n */\nexport default function hideColumnItem(hiddenColumnsPlugin) {\n  return {\n    key: 'hidden_columns_hide',\n    name() {\n      const selection = this.getSelectedLast();\n      let pluralForm = 0;\n      if (Array.isArray(selection)) {\n        const [, fromColumn,, toColumn] = selection;\n        if (fromColumn - toColumn !== 0) {\n          pluralForm = 1;\n        }\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_HIDE_COLUMN, pluralForm);\n    },\n    callback() {\n      const {\n        from,\n        to\n      } = this.getSelectedRangeLast();\n      const start = Math.max(Math.min(from.col, to.col), 0);\n      const end = Math.max(from.col, to.col);\n      const columnsToHide = [];\n      for (let visualColumn = start; visualColumn <= end; visualColumn += 1) {\n        columnsToHide.push(visualColumn);\n      }\n      hiddenColumnsPlugin.hideColumns(columnsToHide);\n      const lastHiddenColumn = columnsToHide[columnsToHide.length - 1];\n      const columnToSelect = this.columnIndexMapper.getNearestNotHiddenIndex(lastHiddenColumn, 1, true);\n      if (Number.isInteger(columnToSelect) && columnToSelect >= 0) {\n        this.selectColumns(columnToSelect);\n      } else {\n        this.deselectCell();\n      }\n      this.render();\n      this.view.adjustElementsSize(true);\n    },\n    disabled: false,\n    hidden() {\n      return !(this.selection.isSelectedByColumnHeader() || this.selection.isSelectedByCorner());\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {HiddenColumns} hiddenColumnsPlugin The plugin instance.\n * @returns {object}\n */\nexport default function showColumnItem(hiddenColumnsPlugin) {\n  const columns = [];\n  return {\n    key: 'hidden_columns_show',\n    name() {\n      const pluralForm = columns.length > 1 ? 1 : 0;\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_SHOW_COLUMN, pluralForm);\n    },\n    callback() {\n      var _this$columnIndexMapp, _this$columnIndexMapp2;\n      if (columns.length === 0) {\n        return;\n      }\n      let startVisualColumn = columns[0];\n      let endVisualColumn = columns[columns.length - 1];\n\n      // Add to the selection one more visual column on the left.\n      startVisualColumn = (_this$columnIndexMapp = this.columnIndexMapper.getNearestNotHiddenIndex(startVisualColumn - 1, -1)) !== null && _this$columnIndexMapp !== void 0 ? _this$columnIndexMapp : 0;\n      // Add to the selection one more visual column on the right.\n      endVisualColumn = (_this$columnIndexMapp2 = this.columnIndexMapper.getNearestNotHiddenIndex(endVisualColumn + 1, 1)) !== null && _this$columnIndexMapp2 !== void 0 ? _this$columnIndexMapp2 : this.countCols() - 1;\n      hiddenColumnsPlugin.showColumns(columns);\n\n      // We render columns at first. It was needed for getting fixed columns.\n      // Please take a look at #6864 for broader description.\n      this.render();\n      this.view.adjustElementsSize(true);\n      const allColumnsSelected = endVisualColumn - startVisualColumn + 1 === this.countCols();\n\n      // When all headers needs to be selected then do nothing. The header selection is\n      // automatically handled by corner click.\n      if (!allColumnsSelected) {\n        this.selectColumns(startVisualColumn, endVisualColumn);\n      }\n    },\n    disabled: false,\n    hidden() {\n      const hiddenPhysicalColumns = arrayMap(hiddenColumnsPlugin.getHiddenColumns(), visualColumnIndex => {\n        return this.toPhysicalColumn(visualColumnIndex);\n      });\n      if (!(this.selection.isSelectedByColumnHeader() || this.selection.isSelectedByCorner()) || hiddenPhysicalColumns.length < 1) {\n        return true;\n      }\n      columns.length = 0;\n      const selectedRangeLast = this.getSelectedRangeLast();\n      const visualStartColumn = selectedRangeLast.getTopStartCorner().col;\n      const visualEndColumn = selectedRangeLast.getBottomEndCorner().col;\n      const columnIndexMapper = this.columnIndexMapper;\n      const renderableStartColumn = columnIndexMapper.getRenderableFromVisualIndex(visualStartColumn);\n      const renderableEndColumn = columnIndexMapper.getRenderableFromVisualIndex(visualEndColumn);\n      const notTrimmedColumnIndexes = columnIndexMapper.getNotTrimmedIndexes();\n      const physicalColumnIndexes = [];\n      if (visualStartColumn !== visualEndColumn) {\n        const visualColumnsInRange = visualEndColumn - visualStartColumn + 1;\n        const renderedColumnsInRange = renderableEndColumn - renderableStartColumn + 1;\n\n        // Collect not trimmed columns if there are some hidden columns in the selection range.\n        if (visualColumnsInRange > renderedColumnsInRange) {\n          const physicalIndexesInRange = notTrimmedColumnIndexes.slice(visualStartColumn, visualEndColumn + 1);\n          physicalColumnIndexes.push(...physicalIndexesInRange.filter(physicalIndex => hiddenPhysicalColumns.includes(physicalIndex)));\n        }\n\n        // Handled column is the first rendered index and there are some visual indexes before it.\n      } else if (renderableStartColumn === 0 && renderableStartColumn < visualStartColumn) {\n        // not trimmed indexes -> array of mappings from visual (native array's index) to physical indexes (value).\n        physicalColumnIndexes.push(...notTrimmedColumnIndexes.slice(0, visualStartColumn)); // physical indexes\n\n        // When all columns are hidden and the context menu is triggered using top-left corner.\n      } else if (renderableStartColumn === null) {\n        // Show all hidden columns.\n        physicalColumnIndexes.push(...notTrimmedColumnIndexes.slice(0, this.countCols()));\n      } else {\n        const lastVisualIndex = this.countCols() - 1;\n        const lastRenderableIndex = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(lastVisualIndex, -1));\n\n        // Handled column is the last rendered index and there are some visual indexes after it.\n        if (renderableEndColumn === lastRenderableIndex && lastVisualIndex > visualEndColumn) {\n          physicalColumnIndexes.push(...notTrimmedColumnIndexes.slice(visualEndColumn + 1));\n        }\n      }\n      arrayEach(physicalColumnIndexes, physicalColumnIndex => {\n        columns.push(this.toVisualColumn(physicalColumnIndex));\n      });\n      return columns.length === 0;\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideColumnItem from \"./contextMenuItem/hideColumn.mjs\";\nimport showColumnItem from \"./contextMenuItem/showColumn.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\nexport const PLUGIN_KEY = 'hiddenColumns';\nexport const PLUGIN_PRIORITY = 310;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin HiddenColumns\n * @class HiddenColumns\n *\n * @description\n * The `HiddenColumns` plugin lets you [hide specified columns](@/guides/columns/column-hiding.md).\n *\n * \"Hiding a column\" means that the hidden column doesn't get rendered as a DOM element.\n *\n * The `HiddenColumns` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `columns` | No | Array | - | [Hides specified columns by default](@/guides/columns/column-hiding.md#step-1-specify-columns-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/columns/column-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/columns/column-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenColumns` plugin's instance\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   hiddenColumns={{\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }}\n * />\n *\n * // access the `HiddenColumns` plugin's instance\n * const hot = hotRef.current.hotInstance;\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n */\nvar _settings = /*#__PURE__*/new WeakMap();\nvar _hiddenColumnsMap = /*#__PURE__*/new WeakMap();\nvar _onModifyColWidth = /*#__PURE__*/new WeakSet();\nvar _onAfterGetCellMeta = /*#__PURE__*/new WeakSet();\nvar _onModifyCopyableRange = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onAfterContextMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nexport class HiddenColumns extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On map initialized hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterContextMenuDefaultOptions);\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @param {number} column Visual column index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyCopyableRange);\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetCellMeta);\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @param {number|undefined} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColWidth);\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _settings, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * Map of hidden columns by the plugin.\n     *\n     * @private\n     * @type {null|HidingMap}\n     */\n    _classPrivateFieldInitSpec(this, _hiddenColumnsMap, {\n      writable: true,\n      value: null\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link HiddenColumns#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (isObject(pluginSettings)) {\n      _classPrivateFieldSet(this, _settings, pluginSettings);\n      if (isUndefined(pluginSettings.copyPasteEnabled)) {\n        pluginSettings.copyPasteEnabled = true;\n      }\n    }\n    _classPrivateFieldSet(this, _hiddenColumnsMap, new HidingMap());\n    _classPrivateFieldGet(this, _hiddenColumnsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenColumnsMap));\n    this.addHook('afterContextMenuDefaultOptions', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterContextMenuDefaultOptions, _onAfterContextMenuDefaultOptions2).call(_this, ...args);\n    });\n    this.addHook('afterGetCellMeta', (row, col, cellProperties) => _classPrivateMethodGet(this, _onAfterGetCellMeta, _onAfterGetCellMeta2).call(this, row, col, cellProperties));\n    this.addHook('modifyColWidth', (width, col) => _classPrivateMethodGet(this, _onModifyColWidth, _onModifyColWidth2).call(this, width, col));\n    this.addHook('afterGetColHeader', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onAfterGetColHeader, _onAfterGetColHeader2).call(_this, ...args);\n    });\n    this.addHook('modifyCopyableRange', ranges => _classPrivateMethodGet(this, _onModifyCopyableRange, _onModifyCopyableRange2).call(this, ranges));\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`hiddenColumns`](@/api/options.md#hiddencolumns)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n    _classPrivateFieldSet(this, _settings, {});\n    super.disablePlugin();\n    this.resetCellsMeta();\n  }\n\n  /**\n   * Shows the provided columns.\n   *\n   * @param {number[]} columns Array of visual column indexes.\n   */\n  showColumns(columns) {\n    const currentHideConfig = this.getHiddenColumns();\n    const isValidConfig = this.isValidConfig(columns);\n    let destinationHideConfig = currentHideConfig;\n    const hidingMapValues = _classPrivateFieldGet(this, _hiddenColumnsMap).getValues().slice();\n    const isAnyColumnShowed = columns.length > 0;\n    if (isValidConfig && isAnyColumnShowed) {\n      const physicalColumns = columns.map(visualColumn => this.hot.toPhysicalColumn(visualColumn));\n\n      // Preparing new values for hiding map.\n      arrayEach(physicalColumns, physicalColumn => {\n        hidingMapValues[physicalColumn] = false;\n      });\n\n      // Preparing new hiding config.\n      destinationHideConfig = arrayReduce(hidingMapValues, (hiddenIndexes, isHidden, physicalIndex) => {\n        if (isHidden) {\n          hiddenIndexes.push(this.hot.toVisualColumn(physicalIndex));\n        }\n        return hiddenIndexes;\n      }, []);\n    }\n    const continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed);\n    if (continueHiding === false) {\n      return;\n    }\n    if (isValidConfig && isAnyColumnShowed) {\n      _classPrivateFieldGet(this, _hiddenColumnsMap).setValues(hidingMapValues);\n    }\n\n    // @TODO Should call once per render cycle, currently fired separately in different plugins\n    this.hot.view.adjustElementsSize();\n    this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n  }\n\n  /**\n   * Shows a single column.\n   *\n   * @param {...number} column Visual column index.\n   */\n  showColumn() {\n    for (var _len3 = arguments.length, column = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      column[_key3] = arguments[_key3];\n    }\n    this.showColumns(column);\n  }\n\n  /**\n   * Hides the columns provided in the array.\n   *\n   * @param {number[]} columns Array of visual column indexes.\n   */\n  hideColumns(columns) {\n    const currentHideConfig = this.getHiddenColumns();\n    const isConfigValid = this.isValidConfig(columns);\n    let destinationHideConfig = currentHideConfig;\n    if (isConfigValid) {\n      destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n    }\n    const continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, isConfigValid);\n    if (continueHiding === false) {\n      return;\n    }\n    if (isConfigValid) {\n      this.hot.batchExecution(() => {\n        arrayEach(columns, visualColumn => {\n          _classPrivateFieldGet(this, _hiddenColumnsMap).setValueAtIndex(this.hot.toPhysicalColumn(visualColumn), true);\n        });\n      }, true);\n    }\n    this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n  }\n\n  /**\n   * Hides a single column.\n   *\n   * @param {...number} column Visual column index.\n   */\n  hideColumn() {\n    for (var _len4 = arguments.length, column = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      column[_key4] = arguments[_key4];\n    }\n    this.hideColumns(column);\n  }\n\n  /**\n   * Returns an array of visual indexes of hidden columns.\n   *\n   * @returns {number[]}\n   */\n  getHiddenColumns() {\n    return arrayMap(_classPrivateFieldGet(this, _hiddenColumnsMap).getHiddenIndexes(), physicalColumnIndex => {\n      return this.hot.toVisualColumn(physicalColumnIndex);\n    });\n  }\n\n  /**\n   * Checks if the provided column is hidden.\n   *\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  isHidden(column) {\n    return _classPrivateFieldGet(this, _hiddenColumnsMap).getValueAtIndex(this.hot.toPhysicalColumn(column)) || false;\n  }\n\n  /**\n   * Get if trim config is valid. Check whether all of the provided column indexes are within the bounds of the table.\n   *\n   * @param {Array} hiddenColumns List of hidden column indexes.\n   * @returns {boolean}\n   */\n  isValidConfig(hiddenColumns) {\n    const nrOfColumns = this.hot.countCols();\n    if (Array.isArray(hiddenColumns) && hiddenColumns.length > 0) {\n      return hiddenColumns.every(visualColumn => Number.isInteger(visualColumn) && visualColumn >= 0 && visualColumn < nrOfColumns);\n    }\n    return false;\n  }\n\n  /**\n   * Reset all rendered cells meta.\n   *\n   * @private\n   */\n  resetCellsMeta() {\n    arrayEach(this.hot.getCellsMeta(), meta => {\n      if (meta) {\n        meta.skipColumnOnPaste = false;\n      }\n    });\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldSet(this, _settings, null);\n    _classPrivateFieldSet(this, _hiddenColumnsMap, null);\n    super.destroy();\n  }\n}\nfunction _onModifyColWidth2(width, column) {\n  // Hook is triggered internally only for the visible columns. Conditional will be handled for the API\n  // calls of the `getColWidth` function on not visible indexes.\n  if (this.isHidden(column)) {\n    return 0;\n  }\n  if (_classPrivateFieldGet(this, _settings).indicators && (this.isHidden(column + 1) || this.isHidden(column - 1))) {\n    // Add additional space for hidden column indicator.\n    if (typeof width === 'number' && this.hot.hasColHeaders()) {\n      return width + 15;\n    }\n  }\n}\nfunction _onAfterGetCellMeta2(row, column, cellProperties) {\n  if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(column)) {\n    // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n    cellProperties.skipColumnOnPaste = true;\n  }\n  if (this.isHidden(column - 1)) {\n    cellProperties.className = cellProperties.className || '';\n    if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n      cellProperties.className += ' afterHiddenColumn';\n    }\n  } else if (cellProperties.className) {\n    const classArr = cellProperties.className.split(' ');\n    if (classArr.length > 0) {\n      const containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n      if (containAfterHiddenColumn > -1) {\n        classArr.splice(containAfterHiddenColumn, 1);\n      }\n      cellProperties.className = classArr.join(' ');\n    }\n  }\n}\nfunction _onModifyCopyableRange2(ranges) {\n  // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n  if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n    return ranges;\n  }\n  const newRanges = [];\n  const pushRange = (startRow, endRow, startCol, endCol) => {\n    newRanges.push({\n      startRow,\n      endRow,\n      startCol,\n      endCol\n    });\n  };\n  arrayEach(ranges, range => {\n    let isHidden = true;\n    let rangeStart = 0;\n    rangeEach(range.startCol, range.endCol, visualColumn => {\n      if (this.isHidden(visualColumn)) {\n        if (!isHidden) {\n          pushRange(range.startRow, range.endRow, rangeStart, visualColumn - 1);\n        }\n        isHidden = true;\n      } else {\n        if (isHidden) {\n          rangeStart = visualColumn;\n        }\n        if (visualColumn === range.endCol) {\n          pushRange(range.startRow, range.endRow, rangeStart, visualColumn);\n        }\n        isHidden = false;\n      }\n    });\n  });\n  return newRanges;\n}\nfunction _onAfterGetColHeader2(column, TH) {\n  if (!_classPrivateFieldGet(this, _settings).indicators || column < 0) {\n    return;\n  }\n  const classList = [];\n  if (column >= 1 && this.isHidden(column - 1)) {\n    classList.push('afterHiddenColumn');\n  }\n  if (column < this.hot.countCols() - 1 && this.isHidden(column + 1)) {\n    classList.push('beforeHiddenColumn');\n  }\n  addClass(TH, classList);\n}\nfunction _onAfterContextMenuDefaultOptions2(options) {\n  options.items.push({\n    name: SEPARATOR\n  }, hideColumnItem(this), showColumnItem(this));\n}\nfunction _onMapInit2() {\n  if (Array.isArray(_classPrivateFieldGet(this, _settings).columns)) {\n    this.hideColumns(_classPrivateFieldGet(this, _settings).columns);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {HiddenRows} hiddenRowsPlugin The plugin instance.\n * @returns {object}\n */\nexport default function hideRowItem(hiddenRowsPlugin) {\n  return {\n    key: 'hidden_rows_hide',\n    name() {\n      const selection = this.getSelectedLast();\n      let pluralForm = 0;\n      if (Array.isArray(selection)) {\n        const [fromRow,, toRow] = selection;\n        if (fromRow - toRow !== 0) {\n          pluralForm = 1;\n        }\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_HIDE_ROW, pluralForm);\n    },\n    callback() {\n      const {\n        from,\n        to\n      } = this.getSelectedRangeLast();\n      const start = Math.max(Math.min(from.row, to.row), 0);\n      const end = Math.max(from.row, to.row);\n      const rowsToHide = [];\n      for (let visualRow = start; visualRow <= end; visualRow += 1) {\n        rowsToHide.push(visualRow);\n      }\n      hiddenRowsPlugin.hideRows(rowsToHide);\n      const lastHiddenRow = rowsToHide[rowsToHide.length - 1];\n      const rowToSelect = this.rowIndexMapper.getNearestNotHiddenIndex(lastHiddenRow, 1, true);\n      if (Number.isInteger(rowToSelect) && rowToSelect >= 0) {\n        this.selectRows(rowToSelect);\n      } else {\n        this.deselectCell();\n      }\n      this.render();\n      this.view.adjustElementsSize(true);\n    },\n    disabled: false,\n    hidden() {\n      return !(this.selection.isSelectedByRowHeader() || this.selection.isSelectedByCorner());\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {HiddenRows} hiddenRowsPlugin The plugin instance.\n * @returns {object}\n */\nexport default function showRowItem(hiddenRowsPlugin) {\n  const rows = [];\n  return {\n    key: 'hidden_rows_show',\n    name() {\n      const pluralForm = rows.length > 1 ? 1 : 0;\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_SHOW_ROW, pluralForm);\n    },\n    callback() {\n      var _this$rowIndexMapper$, _this$rowIndexMapper$2;\n      if (rows.length === 0) {\n        return;\n      }\n      let startVisualRow = rows[0];\n      let endVisualRow = rows[rows.length - 1];\n\n      // Add to the selection one more visual row on the top.\n      startVisualRow = (_this$rowIndexMapper$ = this.rowIndexMapper.getNearestNotHiddenIndex(startVisualRow - 1, -1)) !== null && _this$rowIndexMapper$ !== void 0 ? _this$rowIndexMapper$ : 0;\n      // Add to the selection one more visual row on the bottom.\n      endVisualRow = (_this$rowIndexMapper$2 = this.rowIndexMapper.getNearestNotHiddenIndex(endVisualRow + 1, 1)) !== null && _this$rowIndexMapper$2 !== void 0 ? _this$rowIndexMapper$2 : this.countRows() - 1;\n      hiddenRowsPlugin.showRows(rows);\n\n      // We render rows at first. It was needed for getting fixed rows.\n      // Please take a look at #6864 for broader description.\n      this.render();\n      this.view.adjustElementsSize(true);\n      const allRowsSelected = endVisualRow - startVisualRow + 1 === this.countRows();\n\n      // When all headers needs to be selected then do nothing. The header selection is\n      // automatically handled by corner click.\n      if (!allRowsSelected) {\n        this.selectRows(startVisualRow, endVisualRow);\n      }\n    },\n    disabled: false,\n    hidden() {\n      const hiddenPhysicalRows = arrayMap(hiddenRowsPlugin.getHiddenRows(), visualRowIndex => {\n        return this.toPhysicalRow(visualRowIndex);\n      });\n      if (!(this.selection.isSelectedByRowHeader() || this.selection.isSelectedByCorner()) || hiddenPhysicalRows.length < 1) {\n        return true;\n      }\n      rows.length = 0;\n      const selectedRangeLast = this.getSelectedRangeLast();\n      const visualStartRow = selectedRangeLast.getTopStartCorner().row;\n      const visualEndRow = selectedRangeLast.getBottomEndCorner().row;\n      const rowIndexMapper = this.rowIndexMapper;\n      const renderableStartRow = rowIndexMapper.getRenderableFromVisualIndex(visualStartRow);\n      const renderableEndRow = rowIndexMapper.getRenderableFromVisualIndex(visualEndRow);\n      const notTrimmedRowIndexes = rowIndexMapper.getNotTrimmedIndexes();\n      const physicalRowIndexes = [];\n      if (visualStartRow !== visualEndRow) {\n        const visualRowsInRange = visualEndRow - visualStartRow + 1;\n        const renderedRowsInRange = renderableEndRow - renderableStartRow + 1;\n\n        // Collect not trimmed rows if there are some hidden rows in the selection range.\n        if (visualRowsInRange > renderedRowsInRange) {\n          const physicalIndexesInRange = notTrimmedRowIndexes.slice(visualStartRow, visualEndRow + 1);\n          physicalRowIndexes.push(...physicalIndexesInRange.filter(physicalIndex => hiddenPhysicalRows.includes(physicalIndex)));\n        }\n\n        // Handled row is the first rendered index and there are some visual indexes before it.\n      } else if (renderableStartRow === 0 && renderableStartRow < visualStartRow) {\n        // not trimmed indexes -> array of mappings from visual (native array's index) to physical indexes (value).\n        physicalRowIndexes.push(...notTrimmedRowIndexes.slice(0, visualStartRow)); // physical indexes\n\n        // When all rows are hidden and the context menu is triggered using top-left corner.\n      } else if (renderableStartRow === null) {\n        // Show all hidden rows.\n        physicalRowIndexes.push(...notTrimmedRowIndexes.slice(0, this.countRows()));\n      } else {\n        const lastVisualIndex = this.countRows() - 1;\n        const lastRenderableIndex = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getNearestNotHiddenIndex(lastVisualIndex, -1));\n\n        // Handled row is the last rendered index and there are some visual indexes after it.\n        if (renderableEndRow === lastRenderableIndex && lastVisualIndex > visualEndRow) {\n          physicalRowIndexes.push(...notTrimmedRowIndexes.slice(visualEndRow + 1));\n        }\n      }\n      arrayEach(physicalRowIndexes, physicalRowIndex => {\n        rows.push(this.toVisualRow(physicalRowIndex));\n      });\n      return rows.length === 0;\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideRowItem from \"./contextMenuItem/hideRow.mjs\";\nimport showRowItem from \"./contextMenuItem/showRow.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\nexport const PLUGIN_KEY = 'hiddenRows';\nexport const PLUGIN_PRIORITY = 320;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin HiddenRows\n * @class HiddenRows\n *\n * @description\n * The `HiddenRows` plugin lets you [hide specified rows](@/guides/rows/row-hiding.md).\n *\n * \"Hiding a row\" means that the hidden row doesn't get rendered as a DOM element.\n *\n * The `HiddenRows` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `rows` | No | Array | - | [Hides specified rows by default](@/guides/rows/row-hiding.md#step-1-specify-rows-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/rows/row-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/rows/row-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenRows` plugin's instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // hide a single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // hide multiple rows as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // unhide a single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // unhide multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // unhide multiple rows as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   hiddenRows={{\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }}\n * />\n *\n * // access the `HiddenRows` plugin's instance\n * const hot = hotRef.current.hotInstance;\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // hide a single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // hide multiple rows as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // unhide a single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // unhide multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // unhide multiple rows as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n */\nvar _settings = /*#__PURE__*/new WeakMap();\nvar _hiddenRowsMap = /*#__PURE__*/new WeakMap();\nvar _onModifyRowHeight = /*#__PURE__*/new WeakSet();\nvar _onAfterGetCellMeta = /*#__PURE__*/new WeakSet();\nvar _onModifyCopyableRange = /*#__PURE__*/new WeakSet();\nvar _onAfterGetRowHeader = /*#__PURE__*/new WeakSet();\nvar _onAfterContextMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nexport class HiddenRows extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On map initialized hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    /**\n     * Add Show-hide rows to context menu.\n     *\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterContextMenuDefaultOptions);\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @param {number} row Visual row index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetRowHeader);\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyCopyableRange);\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetCellMeta);\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @param {number|undefined} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeight);\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _settings, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * Map of hidden rows by the plugin.\n     *\n     * @private\n     * @type {HidingMap|null}\n     */\n    _classPrivateFieldInitSpec(this, _hiddenRowsMap, {\n      writable: true,\n      value: null\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link HiddenRows#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (isObject(pluginSettings)) {\n      _classPrivateFieldSet(this, _settings, pluginSettings);\n      if (isUndefined(pluginSettings.copyPasteEnabled)) {\n        pluginSettings.copyPasteEnabled = true;\n      }\n    }\n    _classPrivateFieldSet(this, _hiddenRowsMap, new HidingMap());\n    _classPrivateFieldGet(this, _hiddenRowsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenRowsMap));\n    this.addHook('afterContextMenuDefaultOptions', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterContextMenuDefaultOptions, _onAfterContextMenuDefaultOptions2).call(_this, ...args);\n    });\n    this.addHook('afterGetCellMeta', (row, col, cellProperties) => _classPrivateMethodGet(this, _onAfterGetCellMeta, _onAfterGetCellMeta2).call(this, row, col, cellProperties));\n    this.addHook('modifyRowHeight', (height, row) => _classPrivateMethodGet(this, _onModifyRowHeight, _onModifyRowHeight2).call(this, height, row));\n    this.addHook('afterGetRowHeader', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onAfterGetRowHeader, _onAfterGetRowHeader2).call(_this, ...args);\n    });\n    this.addHook('modifyCopyableRange', ranges => _classPrivateMethodGet(this, _onModifyCopyableRange, _onModifyCopyableRange2).call(this, ranges));\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`hiddenRows`](@/api/options.md#hiddenrows)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    _classPrivateFieldSet(this, _settings, {});\n    super.disablePlugin();\n    this.resetCellsMeta();\n  }\n\n  /**\n   * Shows the rows provided in the array.\n   *\n   * @param {number[]} rows Array of visual row indexes.\n   */\n  showRows(rows) {\n    const currentHideConfig = this.getHiddenRows();\n    const isValidConfig = this.isValidConfig(rows);\n    let destinationHideConfig = currentHideConfig;\n    const hidingMapValues = _classPrivateFieldGet(this, _hiddenRowsMap).getValues().slice();\n    const isAnyRowShowed = rows.length > 0;\n    if (isValidConfig && isAnyRowShowed) {\n      const physicalRows = rows.map(visualRow => this.hot.toPhysicalRow(visualRow));\n\n      // Preparing new values for hiding map.\n      arrayEach(physicalRows, physicalRow => {\n        hidingMapValues[physicalRow] = false;\n      });\n\n      // Preparing new hiding config.\n      destinationHideConfig = arrayReduce(hidingMapValues, (hiddenIndexes, isHidden, physicalIndex) => {\n        if (isHidden) {\n          hiddenIndexes.push(this.hot.toVisualRow(physicalIndex));\n        }\n        return hiddenIndexes;\n      }, []);\n    }\n    const continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed);\n    if (continueHiding === false) {\n      return;\n    }\n    if (isValidConfig && isAnyRowShowed) {\n      _classPrivateFieldGet(this, _hiddenRowsMap).setValues(hidingMapValues);\n    }\n    this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n  }\n\n  /**\n   * Shows the row provided as row index (counting from 0).\n   *\n   * @param {...number} row Visual row index.\n   */\n  showRow() {\n    for (var _len3 = arguments.length, row = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      row[_key3] = arguments[_key3];\n    }\n    this.showRows(row);\n  }\n\n  /**\n   * Hides the rows provided in the array.\n   *\n   * @param {number[]} rows Array of visual row indexes.\n   */\n  hideRows(rows) {\n    const currentHideConfig = this.getHiddenRows();\n    const isConfigValid = this.isValidConfig(rows);\n    let destinationHideConfig = currentHideConfig;\n    if (isConfigValid) {\n      destinationHideConfig = Array.from(new Set(currentHideConfig.concat(rows)));\n    }\n    const continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, isConfigValid);\n    if (continueHiding === false) {\n      return;\n    }\n    if (isConfigValid) {\n      this.hot.batchExecution(() => {\n        arrayEach(rows, visualRow => {\n          _classPrivateFieldGet(this, _hiddenRowsMap).setValueAtIndex(this.hot.toPhysicalRow(visualRow), true);\n        });\n      }, true);\n    }\n    this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n  }\n\n  /**\n   * Hides the row provided as row index (counting from 0).\n   *\n   * @param {...number} row Visual row index.\n   */\n  hideRow() {\n    for (var _len4 = arguments.length, row = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      row[_key4] = arguments[_key4];\n    }\n    this.hideRows(row);\n  }\n\n  /**\n   * Returns an array of visual indexes of hidden rows.\n   *\n   * @returns {number[]}\n   */\n  getHiddenRows() {\n    return arrayMap(_classPrivateFieldGet(this, _hiddenRowsMap).getHiddenIndexes(), physicalRowIndex => {\n      return this.hot.toVisualRow(physicalRowIndex);\n    });\n  }\n\n  /**\n   * Checks if the provided row is hidden.\n   *\n   * @param {number} row Visual row index.\n   * @returns {boolean}\n   */\n  isHidden(row) {\n    return _classPrivateFieldGet(this, _hiddenRowsMap).getValueAtIndex(this.hot.toPhysicalRow(row)) || false;\n  }\n\n  /**\n   * Checks whether all of the provided row indexes are within the bounds of the table.\n   *\n   * @param {Array} hiddenRows List of hidden visual row indexes.\n   * @returns {boolean}\n   */\n  isValidConfig(hiddenRows) {\n    const nrOfRows = this.hot.countRows();\n    if (Array.isArray(hiddenRows) && hiddenRows.length > 0) {\n      return hiddenRows.every(visualRow => Number.isInteger(visualRow) && visualRow >= 0 && visualRow < nrOfRows);\n    }\n    return false;\n  }\n\n  /**\n   * Resets all rendered cells meta.\n   *\n   * @private\n   */\n  resetCellsMeta() {\n    arrayEach(this.hot.getCellsMeta(), meta => {\n      if (meta) {\n        meta.skipRowOnPaste = false;\n      }\n    });\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldSet(this, _settings, null);\n    _classPrivateFieldSet(this, _hiddenRowsMap, null);\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeight2(height, row) {\n  // Hook is triggered internally only for the visible rows. Conditional will be handled for the API\n  // calls of the `getRowHeight` function on not visible indexes.\n  if (this.isHidden(row)) {\n    return 0;\n  }\n  return height;\n}\nfunction _onAfterGetCellMeta2(row, column, cellProperties) {\n  if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(row)) {\n    // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n    cellProperties.skipRowOnPaste = true;\n  }\n  if (this.isHidden(row - 1)) {\n    cellProperties.className = cellProperties.className || '';\n    if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n      cellProperties.className += ' afterHiddenRow';\n    }\n  } else if (cellProperties.className) {\n    const classArr = cellProperties.className.split(' ');\n    if (classArr.length > 0) {\n      const containAfterHiddenRow = classArr.indexOf('afterHiddenRow');\n      if (containAfterHiddenRow > -1) {\n        classArr.splice(containAfterHiddenRow, 1);\n      }\n      cellProperties.className = classArr.join(' ');\n    }\n  }\n}\nfunction _onModifyCopyableRange2(ranges) {\n  // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n  if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n    return ranges;\n  }\n  const newRanges = [];\n  const pushRange = (startRow, endRow, startCol, endCol) => {\n    newRanges.push({\n      startRow,\n      endRow,\n      startCol,\n      endCol\n    });\n  };\n  arrayEach(ranges, range => {\n    let isHidden = true;\n    let rangeStart = 0;\n    rangeEach(range.startRow, range.endRow, visualRow => {\n      if (this.isHidden(visualRow)) {\n        if (!isHidden) {\n          pushRange(rangeStart, visualRow - 1, range.startCol, range.endCol);\n        }\n        isHidden = true;\n      } else {\n        if (isHidden) {\n          rangeStart = visualRow;\n        }\n        if (visualRow === range.endRow) {\n          pushRange(rangeStart, visualRow, range.startCol, range.endCol);\n        }\n        isHidden = false;\n      }\n    });\n  });\n  return newRanges;\n}\nfunction _onAfterGetRowHeader2(row, TH) {\n  if (!_classPrivateFieldGet(this, _settings).indicators || row < 0) {\n    return;\n  }\n  const classList = [];\n  if (row >= 1 && this.isHidden(row - 1)) {\n    classList.push('afterHiddenRow');\n  }\n  if (row < this.hot.countRows() - 1 && this.isHidden(row + 1)) {\n    classList.push('beforeHiddenRow');\n  }\n  addClass(TH, classList);\n}\nfunction _onAfterContextMenuDefaultOptions2(options) {\n  options.items.push({\n    name: SEPARATOR\n  }, hideRowItem(this), showRowItem(this));\n}\nfunction _onMapInit2() {\n  if (Array.isArray(_classPrivateFieldGet(this, _settings).rows)) {\n    this.hideRows(_classPrivateFieldGet(this, _settings).rows);\n  }\n}", "import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {ManualColumnFreeze} manualColumnFreezePlugin The plugin instance.\n * @returns {object}\n */\nexport default function freezeColumnItem(manualColumnFreezePlugin) {\n  return {\n    key: 'freeze_column',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_FREEZE_COLUMN);\n    },\n    callback(key, selected) {\n      const [{\n        start: {\n          col: selectedColumn\n        }\n      }] = selected;\n      manualColumnFreezePlugin.freezeColumn(selectedColumn);\n      this.render();\n      this.view.adjustElementsSize(true);\n    },\n    hidden() {\n      const selection = this.getSelectedRange();\n      let hide = false;\n      if (selection === undefined) {\n        hide = true;\n      } else if (selection.length > 1) {\n        hide = true;\n      } else if (selection[0].from.col !== selection[0].to.col || selection[0].from.col <= this.getSettings().fixedColumnsStart - 1) {\n        hide = true;\n      }\n      return hide;\n    }\n  };\n}", "import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {ManualColumnFreeze} manualColumnFreezePlugin The plugin instance.\n * @returns {object}\n */\nexport default function unfreezeColumnItem(manualColumnFreezePlugin) {\n  return {\n    key: 'unfreeze_column',\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_UNFREEZE_COLUMN);\n    },\n    callback(key, selected) {\n      const [{\n        start: {\n          col: selectedColumn\n        }\n      }] = selected;\n      manualColumnFreezePlugin.unfreezeColumn(selectedColumn);\n      this.render();\n      this.view.adjustElementsSize(true);\n    },\n    hidden() {\n      const selection = this.getSelectedRange();\n      let hide = false;\n      if (selection === undefined) {\n        hide = true;\n      } else if (selection.length > 1) {\n        hide = true;\n      } else if (selection[0].from.col !== selection[0].to.col || selection[0].from.col >= this.getSettings().fixedColumnsStart) {\n        hide = true;\n      }\n      return hide;\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport freezeColumnItem from \"./contextMenuItem/freezeColumn.mjs\";\nimport unfreezeColumnItem from \"./contextMenuItem/unfreezeColumn.mjs\";\nHooks.getSingleton().register('beforeColumnFreeze');\nHooks.getSingleton().register('afterColumnFreeze');\nHooks.getSingleton().register('beforeColumnUnfreeze');\nHooks.getSingleton().register('afterColumnUnfreeze');\nexport const PLUGIN_KEY = 'manualColumnFreeze';\nexport const PLUGIN_PRIORITY = 110;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnFreeze\n * @class ManualColumnFreeze\n *\n * @description\n * This plugin allows to manually \"freeze\" and \"unfreeze\" a column using an entry in the Context Menu or using API.\n * You can turn it on by setting a {@link Options#manualColumnFreeze} property to `true`.\n *\n * @example\n * ```js\n * // Enables the plugin\n * manualColumnFreeze: true,\n * ```\n */\nvar _afterFirstUse = /*#__PURE__*/new WeakMap();\nvar _addContextMenuEntry = /*#__PURE__*/new WeakSet();\nvar _onBeforeColumnMove = /*#__PURE__*/new WeakSet();\nexport class ManualColumnFreeze extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Prevents moving the columns from/to fixed area.\n     *\n     * @private\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n     * @returns {boolean|undefined}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeColumnMove);\n    /**\n     * Adds the manualColumnFreeze context menu entries.\n     *\n     * @private\n     * @param {object} options Context menu options.\n     */\n    _classPrivateMethodInitSpec(this, _addContextMenuEntry);\n    /**\n     * Determines when the moving operation is allowed.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _afterFirstUse, {\n      writable: true,\n      value: false\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnFreeze#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('afterContextMenuDefaultOptions', options => _classPrivateMethodGet(this, _addContextMenuEntry, _addContextMenuEntry2).call(this, options));\n    this.addHook('beforeColumnMove', (columns, finalIndex) => _classPrivateMethodGet(this, _onBeforeColumnMove, _onBeforeColumnMove2).call(this, columns, finalIndex));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldSet(this, _afterFirstUse, false);\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnFreeze`](@/api/options.md#manualcolumnfreeze)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Freezes the specified column (adds it to fixed columns).\n   *\n   * `freezeColumn()` doesn't re-render the table,\n   * so you need to call the `render()` method afterward.\n   *\n   * @param {number} column Visual column index.\n   */\n  freezeColumn(column) {\n    const settings = this.hot.getSettings();\n    // columns are already fixed (frozen)\n    const freezePerformed = settings.fixedColumnsStart < this.hot.countCols() && column > settings.fixedColumnsStart - 1;\n    if (!_classPrivateFieldGet(this, _afterFirstUse)) {\n      _classPrivateFieldSet(this, _afterFirstUse, true);\n    }\n    const beforeColumnFreezeHook = this.hot.runHooks('beforeColumnFreeze', column, freezePerformed);\n    if (beforeColumnFreezeHook === false) {\n      return;\n    }\n    if (freezePerformed) {\n      this.hot.columnIndexMapper.moveIndexes(column, settings.fixedColumnsStart);\n\n      // Since 12.0.0, the \"fixedColumnsLeft\" is replaced with the \"fixedColumnsStart\" option.\n      // However, keeping the old name still in effect. When both option names are used together,\n      // the error is thrown. To prevent that, the plugin needs to modify the original option key\n      // to bypass the validation.\n      settings._fixedColumnsStart += 1;\n    }\n    this.hot.runHooks('afterColumnFreeze', column, freezePerformed);\n  }\n\n  /**\n   * Unfreezes the given column (remove it from fixed columns and bring to it's previous position).\n   *\n   * @param {number} column Visual column index.\n   */\n  unfreezeColumn(column) {\n    const settings = this.hot.getSettings();\n    // columns are not fixed (not frozen)\n    const unfreezePerformed = settings.fixedColumnsStart > 0 && column <= settings.fixedColumnsStart - 1;\n    if (!_classPrivateFieldGet(this, _afterFirstUse)) {\n      _classPrivateFieldSet(this, _afterFirstUse, true);\n    }\n    const beforeColumnUnfreezeHook = this.hot.runHooks('beforeColumnUnfreeze', column, unfreezePerformed);\n    if (beforeColumnUnfreezeHook === false) {\n      return;\n    }\n    if (unfreezePerformed) {\n      // Since 12.0.0, the \"fixedColumnsLeft\" is replaced with the \"fixedColumnsStart\" option.\n      // However, keeping the old name still in effect. When both option names are used together,\n      // the error is thrown. To prevent that, the plugin needs to modify the original option key\n      // to bypass the validation.\n      settings._fixedColumnsStart -= 1;\n      this.hot.columnIndexMapper.moveIndexes(column, settings.fixedColumnsStart);\n    }\n    this.hot.runHooks('afterColumnUnfreeze', column, unfreezePerformed);\n  }\n}\nfunction _addContextMenuEntry2(options) {\n  options.items.push({\n    name: '---------'\n  }, freezeColumnItem(this), unfreezeColumnItem(this));\n}\nfunction _onBeforeColumnMove2(columns, finalIndex) {\n  if (_classPrivateFieldGet(this, _afterFirstUse)) {\n    const freezeLine = this.hot.getSettings().fixedColumnsStart;\n\n    // Moving any column before the \"freeze line\" isn't possible.\n    if (finalIndex < freezeLine) {\n      return false;\n    }\n\n    // Moving frozen column isn't possible.\n    if (columns.some(column => column < freezeLine)) {\n      return false;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isNumeric } from \"../../../helpers/number.mjs\";\nimport { toUpperCaseFirst } from \"../../../helpers/string.mjs\";\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @class\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    /**\n     * Defines the \"start\" physical CSS property name used within the class depending on what document\n     * layout direction the library runs.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"inlineProperty\", void 0);\n    this.hot = hotInstance;\n    this.inlineProperty = hotInstance.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} inlinePosition New left/right (depends on LTR/RTL document mode) position of the element.\n   */\n  setPosition(top, inlinePosition) {\n    if (isNumeric(top)) {\n      this._element.style.top = top + UNIT;\n    }\n    if (isNumeric(inlinePosition)) {\n      this._element.style[this.inlineProperty] = inlinePosition + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    const style = this._element.style;\n    return {\n      top: style.top ? parseInt(style.top, 10) : 0,\n      start: style[this.inlineProperty] ? parseInt(style[this.inlineProperty], 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (isNumeric(width)) {\n      this._element.style.width = width + UNIT;\n    }\n    if (isNumeric(height)) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} inlineOffset New margin left/right (depends on LTR/RTL document mode) of the element.\n   */\n  setOffset(top, inlineOffset) {\n    if (isNumeric(top)) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (isNumeric(inlineOffset)) {\n      this._element.style[`margin${toUpperCaseFirst(this.inlineProperty)}`] = inlineOffset + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    const style = this._element.style;\n    const inlineProp = `margin${toUpperCaseFirst(this.inlineProperty)}`;\n    return {\n      top: style.marginTop ? parseInt(style.marginTop, 10) : 0,\n      start: style[inlineProp] ? parseInt(style[inlineProp], 10) : 0\n    };\n  }\n}\nexport default BaseUI;", "import BaseUI from \"./_base.mjs\";\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nconst CSS_CLASSNAME = 'ht__manualColumnMove--backlight';\n\n/**\n * @class BacklightUI\n * @util\n */\nclass BacklightUI extends BaseUI {\n  /**\n   * Custom className on build process.\n   */\n  build() {\n    super.build();\n    addClass(this._element, CSS_CLASSNAME);\n  }\n}\nexport default BacklightUI;", "import BaseUI from \"./_base.mjs\";\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nconst CSS_CLASSNAME = 'ht__manualColumnMove--guideline';\n\n/**\n * @class GuidelineUI\n * @util\n */\nclass GuidelineUI extends BaseUI {\n  /**\n   * Custom className on build process.\n   */\n  build() {\n    super.build();\n    addClass(this._element, CSS_CLASSNAME);\n  }\n}\nexport default GuidelineUI;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { offsetRelativeTo } from \"../../helpers/dom/event.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport const PLUGIN_KEY = 'manualColumnMove';\nexport const PLUGIN_PRIORITY = 120;\nconst CSS_PLUGIN = 'ht__manualColumnMove';\nconst CSS_SHOW_UI = 'show-ui';\nconst CSS_ON_MOVING = 'on-moving--columns';\nconst CSS_AFTER_SELECTION = 'after-selection--columns';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\nvar _backlight = /*#__PURE__*/new WeakMap();\nvar _guideline = /*#__PURE__*/new WeakMap();\nvar _columnsToMove = /*#__PURE__*/new WeakMap();\nvar _countCols = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _target = /*#__PURE__*/new WeakMap();\nvar _cachedDropIndex = /*#__PURE__*/new WeakMap();\nvar _hoveredColumn = /*#__PURE__*/new WeakMap();\nvar _rootElementOffset = /*#__PURE__*/new WeakMap();\nvar _hasRowHeaders = /*#__PURE__*/new WeakMap();\nvar _fixedColumnsStart = /*#__PURE__*/new WeakMap();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterScrollVertically = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class ManualColumnMove extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterScrollVertically);\n    /**\n     * `onMouseUp` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseOver);\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Backlight UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _backlight, {\n      writable: true,\n      value: new BacklightUI(this.hot)\n    });\n    /**\n     * Guideline UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _guideline, {\n      writable: true,\n      value: new GuidelineUI(this.hot)\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _columnsToMove, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _countCols, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _target, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _cachedDropIndex, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _hoveredColumn, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _rootElementOffset, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _hasRowHeaders, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _fixedColumnsStart, {\n      writable: true,\n      value: void 0\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseOver', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseOver, _onBeforeOnCellMouseOver2).call(_this, ...args);\n    });\n    this.addHook('afterScrollVertically', () => _classPrivateMethodGet(this, _onAfterScrollVertically, _onAfterScrollVertically2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.buildPluginUI();\n    this.registerEvents();\n\n    // TODO: move adding plugin classname to BasePlugin.\n    addClass(this.hot.rootElement, CSS_PLUGIN);\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnMove`](@/api/options.md#manualcolumnmove)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    this.moveBySettingsOrLoad();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    removeClass(this.hot.rootElement, CSS_PLUGIN);\n    this.unregisterEvents();\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.disablePlugin();\n  }\n\n  /**\n   * Moves a single column.\n   *\n   * @param {number} column Visual column index to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumn(column, finalIndex) {\n    return this.moveColumns([column], finalIndex);\n  }\n\n  /**\n   * Moves a multiple columns.\n   *\n   * @param {Array} columns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumns(columns, finalIndex) {\n    const dropIndex = _classPrivateFieldGet(this, _cachedDropIndex);\n    const movePossible = this.isMovePossible(columns, finalIndex);\n    const beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n    _classPrivateFieldSet(this, _cachedDropIndex, undefined);\n    if (beforeMoveHook === false) {\n      return;\n    }\n    if (movePossible) {\n      this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n    }\n    const movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n    this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n    return movePerformed;\n  }\n\n  /**\n   * Drag a single column to drop index position.\n   *\n   * @param {number} column Visual column index to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumn(column, dropIndex) {\n    return this.dragColumns([column], dropIndex);\n  }\n\n  /**\n   * Drag multiple columns to drop index position.\n   *\n   * @param {Array} columns Array of visual column indexes to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumns(columns, dropIndex) {\n    const finalIndex = this.countFinalIndex(columns, dropIndex);\n    _classPrivateFieldSet(this, _cachedDropIndex, dropIndex);\n    return this.moveColumns(columns, finalIndex);\n  }\n\n  /**\n   * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n   * possible, i.e. You can’t move more than one element to the last position.\n   *\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isMovePossible(movedColumns, finalIndex) {\n    const length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength();\n\n    // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n    const tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n    const tooLowDestinationIndex = finalIndex < 0;\n    const tooLowMovedColumnIndex = movedColumns.some(movedColumn => movedColumn < 0);\n    const tooHighMovedColumnIndex = movedColumns.some(movedColumn => movedColumn >= length);\n    if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicates if order of columns was changed.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isColumnOrderChanged(movedColumns, finalIndex) {\n    return movedColumns.some((column, nrOfMovedElement) => column - nrOfMovedElement !== finalIndex);\n  }\n\n  /**\n   * Count the final column index from the drop index.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n   * @returns {number} Visual column index, being a start index for the moved columns.\n   */\n  countFinalIndex(movedColumns, dropIndex) {\n    const numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, (numberOfColumns, currentColumnIndex) => {\n      if (currentColumnIndex < dropIndex) {\n        numberOfColumns += 1;\n      }\n      return numberOfColumns;\n    }, 0);\n    return dropIndex - numberOfColumnsLowerThanDropIndex;\n  }\n\n  /**\n   * Gets the sum of the widths of columns in the provided range.\n   *\n   * @private\n   * @param {number} fromColumn Visual column index.\n   * @param {number} toColumn Visual column index.\n   * @returns {number}\n   */\n  getColumnsWidth(fromColumn, toColumn) {\n    const columnMapper = this.hot.columnIndexMapper;\n    let columnsWidth = 0;\n    for (let visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n      // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n      // when column is stretched.\n      const renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n      if (visualColumnIndex < 0) {\n        columnsWidth += this.hot.view._wt.wtViewport.getRowHeaderWidth() || 0;\n      } else if (renderableIndex !== null) {\n        columnsWidth += this.hot.view._wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n      }\n    }\n    return columnsWidth;\n  }\n\n  /**\n   * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n   *\n   * @private\n   */\n  moveBySettingsOrLoad() {\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(pluginSettings)) {\n      this.moveColumns(pluginSettings, 0);\n    } else if (pluginSettings !== undefined) {\n      const persistentState = this.persistentStateLoad();\n      if (persistentState.length) {\n        this.moveColumns(persistentState, 0);\n      }\n    }\n  }\n\n  /**\n   * Checks if the provided column is in the fixedColumnsTop section.\n   *\n   * @private\n   * @param {number} column Visual column index to check.\n   * @returns {boolean}\n   */\n  isFixedColumnsStart(column) {\n    return column < this.hot.getSettings().fixedColumnsStart;\n  }\n\n  /**\n   * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateSave\n   */\n  persistentStateSave() {\n    this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n  }\n\n  /**\n   * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateLoad\n   * @returns {Array} Stored state.\n   */\n  persistentStateLoad() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n    return storedState.value ? storedState.value : [];\n  }\n\n  /**\n   * Prepares an array of indexes based on actual selection.\n   *\n   * @private\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array}\n   */\n  prepareColumnsToMoving(start, end) {\n    const selectedColumns = [];\n    rangeEach(start, end, i => {\n      selectedColumns.push(i);\n    });\n    return selectedColumns;\n  }\n\n  /**\n   * Update the UI visual position.\n   *\n   * @private\n   */\n  refreshPositions() {\n    const firstVisible = this.hot.view.getFirstFullyVisibleColumn();\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn)) && firstVisible > 0) {\n      this.hot.scrollViewportTo({\n        col: this.hot.columnIndexMapper.getNearestNotHiddenIndex(firstVisible - 1, -1)\n      });\n    }\n    const wtTable = this.hot.view._wt.wtTable;\n    const scrollableElement = this.hot.view._wt.wtOverlays.scrollableElement;\n    const scrollStart = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n    let tdOffsetStart = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, _classPrivateFieldGet(this, _hoveredColumn) - 1);\n    const hiderWidth = wtTable.hider.offsetWidth;\n    const tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n    const backlightElemMarginStart = _classPrivateFieldGet(this, _backlight).getOffset().start;\n    const backlightElemWidth = _classPrivateFieldGet(this, _backlight).getSize().width;\n    let rowHeaderWidth = 0;\n    let mouseOffsetStart = 0;\n    if (this.hot.isRtl()) {\n      const rootWindow = this.hot.rootWindow;\n      const containerWidth = outerWidth(this.hot.rootElement);\n      const gridMostRightPos = rootWindow.innerWidth - _classPrivateFieldGet(this, _rootElementOffset) - containerWidth;\n      mouseOffsetStart = rootWindow.innerWidth - _classPrivateFieldGet(this, _target).eventPageX - gridMostRightPos - (scrollableElement.scrollX === undefined ? scrollStart : 0);\n    } else {\n      mouseOffsetStart = _classPrivateFieldGet(this, _target).eventPageX - (_classPrivateFieldGet(this, _rootElementOffset) - (scrollableElement.scrollX === undefined ? scrollStart : 0));\n    }\n    if (_classPrivateFieldGet(this, _hasRowHeaders)) {\n      rowHeaderWidth = this.hot.view._wt.wtOverlays.inlineStartOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n    }\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn))) {\n      tdOffsetStart += scrollStart;\n    }\n    tdOffsetStart += rowHeaderWidth;\n    if (_classPrivateFieldGet(this, _hoveredColumn) < 0) {\n      // if hover on rowHeader\n      if (_classPrivateFieldGet(this, _fixedColumnsStart) > 0) {\n        _classPrivateFieldGet(this, _target).col = 0;\n      } else {\n        _classPrivateFieldGet(this, _target).col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n      }\n    } else if (_classPrivateFieldGet(this, _target).TD.offsetWidth / 2 + tdOffsetStart <= mouseOffsetStart) {\n      const newCoordsCol = _classPrivateFieldGet(this, _hoveredColumn) >= _classPrivateFieldGet(this, _countCols) ? _classPrivateFieldGet(this, _countCols) - 1 : _classPrivateFieldGet(this, _hoveredColumn);\n\n      // if hover on right part of TD\n      _classPrivateFieldGet(this, _target).col = newCoordsCol + 1;\n      // unfortunately first column is bigger than rest\n      tdOffsetStart += _classPrivateFieldGet(this, _target).TD.offsetWidth;\n    } else {\n      // elsewhere on table\n      _classPrivateFieldGet(this, _target).col = _classPrivateFieldGet(this, _hoveredColumn);\n    }\n    let backlightStart = mouseOffsetStart;\n    let guidelineStart = tdOffsetStart;\n    if (mouseOffsetStart + backlightElemWidth + backlightElemMarginStart >= hiderWidth) {\n      // prevent display backlight on the right side of the table\n      backlightStart = hiderWidth - backlightElemWidth - backlightElemMarginStart;\n    } else if (mouseOffsetStart + backlightElemMarginStart < tbodyOffsetLeft + rowHeaderWidth) {\n      // prevent display backlight on the left side of the table\n      backlightStart = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginStart);\n    }\n    if (tdOffsetStart >= hiderWidth - 1) {\n      // prevent display guideline outside the table\n      guidelineStart = hiderWidth - 1;\n    } else if (guidelineStart === 0) {\n      // guideline has got `margin-left: -1px` as default\n      guidelineStart = 1;\n    } else if (scrollableElement.scrollX !== undefined && _classPrivateFieldGet(this, _hoveredColumn) < _classPrivateFieldGet(this, _fixedColumnsStart)) {\n      guidelineStart -= _classPrivateFieldGet(this, _rootElementOffset) <= scrollableElement.scrollX ? _classPrivateFieldGet(this, _rootElementOffset) : 0;\n    }\n    _classPrivateFieldGet(this, _backlight).setPosition(null, backlightStart);\n    _classPrivateFieldGet(this, _guideline).setPosition(null, guidelineStart);\n  }\n\n  /**\n   * Binds the events used by the plugin.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    this.eventManager.addEventListener(documentElement, 'mousemove', event => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, event));\n    this.eventManager.addEventListener(documentElement, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n  }\n\n  /**\n   * Unbinds the events used by the plugin.\n   *\n   * @private\n   */\n  unregisterEvents() {\n    this.eventManager.clear();\n  }\n  /**\n   * Builds the plugin's UI.\n   *\n   * @private\n   */\n  buildPluginUI() {\n    _classPrivateFieldGet(this, _backlight).build();\n    _classPrivateFieldGet(this, _guideline).build();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.destroy();\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  const wtTable = this.hot.view._wt.wtTable;\n  const isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n  const selection = this.hot.getSelectedRangeLast();\n  // This block action shouldn't be handled below.\n  const isSortingElement = hasClass(event.target, 'sortAction');\n  if (!selection || !isHeaderSelection || _classPrivateFieldGet(this, _pressed) || event.button !== 0 || isSortingElement) {\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n    removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n    return;\n  }\n  const guidelineIsNotReady = _classPrivateFieldGet(this, _guideline).isBuilt() && !_classPrivateFieldGet(this, _guideline).isAppended();\n  const backlightIsNotReady = _classPrivateFieldGet(this, _backlight).isBuilt() && !_classPrivateFieldGet(this, _backlight).isAppended();\n  if (guidelineIsNotReady && backlightIsNotReady) {\n    _classPrivateFieldGet(this, _guideline).appendTo(wtTable.hider);\n    _classPrivateFieldGet(this, _backlight).appendTo(wtTable.hider);\n  }\n  const {\n    from,\n    to\n  } = selection;\n  const start = Math.min(from.col, to.col);\n  const end = Math.max(from.col, to.col);\n  if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n    controller.column = true;\n    _classPrivateFieldSet(this, _pressed, true);\n    const eventOffsetX = TD.firstChild ? offsetRelativeTo(event, TD.firstChild).x : event.offsetX;\n    _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n    _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n    _classPrivateFieldGet(this, _target).TD = TD;\n    _classPrivateFieldGet(this, _target).col = coords.col;\n    _classPrivateFieldSet(this, _columnsToMove, this.prepareColumnsToMoving(start, end));\n    _classPrivateFieldSet(this, _hasRowHeaders, !!this.hot.getSettings().rowHeaders);\n    _classPrivateFieldSet(this, _countCols, this.hot.countCols());\n    _classPrivateFieldSet(this, _fixedColumnsStart, this.hot.getSettings().fixedColumnsStart);\n    _classPrivateFieldSet(this, _rootElementOffset, offset(this.hot.rootElement).left);\n    const countColumnsFrom = _classPrivateFieldGet(this, _hasRowHeaders) ? -1 : 0;\n    const topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n    const fixedColumnsStart = coords.col < _classPrivateFieldGet(this, _fixedColumnsStart);\n    const horizontalScrollPosition = this.hot.view._wt.wtOverlays.inlineStartOverlay.getOverlayOffset();\n    const offsetX = Math.abs(eventOffsetX - (this.hot.isRtl() ? TD.offsetWidth : 0));\n    const inlineOffset = this.getColumnsWidth(start, coords.col - 1) + offsetX;\n    const inlinePos = this.getColumnsWidth(countColumnsFrom, start - 1) + (fixedColumnsStart ? horizontalScrollPosition : 0) + inlineOffset;\n    _classPrivateFieldGet(this, _backlight).setPosition(topPos, inlinePos);\n    _classPrivateFieldGet(this, _backlight).setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n    _classPrivateFieldGet(this, _backlight).setOffset(null, -inlineOffset);\n    addClass(this.hot.rootElement, CSS_ON_MOVING);\n  } else {\n    removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  }\n}\nfunction _onMouseMove2(event) {\n  if (!_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n  this.refreshPositions();\n}\nfunction _onBeforeOnCellMouseOver2(event, coords, TD, controller) {\n  const selectedRange = this.hot.getSelectedRangeLast();\n  if (!selectedRange || !_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  if (_classPrivateFieldGet(this, _columnsToMove).indexOf(coords.col) > -1) {\n    removeClass(this.hot.rootElement, CSS_SHOW_UI);\n  } else {\n    addClass(this.hot.rootElement, CSS_SHOW_UI);\n  }\n  controller.row = true;\n  controller.column = true;\n  controller.cell = true;\n  _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n  _classPrivateFieldGet(this, _target).TD = TD;\n}\nfunction _onMouseUp2() {\n  const target = _classPrivateFieldGet(this, _target).col;\n  const columnsLen = _classPrivateFieldGet(this, _columnsToMove).length;\n  _classPrivateFieldSet(this, _hoveredColumn, undefined);\n  _classPrivateFieldSet(this, _pressed, false);\n  removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n  if (this.hot.selection.isSelectedByColumnHeader()) {\n    addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n  }\n  if (columnsLen < 1 || target === undefined) {\n    return;\n  }\n  const firstMovedVisualColumn = _classPrivateFieldGet(this, _columnsToMove)[0];\n  const firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n  const movePerformed = this.dragColumns(_classPrivateFieldGet(this, _columnsToMove), target);\n  _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  if (movePerformed === true) {\n    this.persistentStateSave();\n    this.hot.render();\n    this.hot.view.adjustElementsSize(true);\n    const selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n    const selectionEnd = selectionStart + columnsLen - 1;\n    this.hot.selectColumns(selectionStart, selectionEnd);\n  }\n}\nfunction _onAfterScrollVertically2() {\n  const wtTable = this.hot.view._wt.wtTable;\n  const headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n  const scrollTop = wtTable.holder.scrollTop;\n  const posTop = headerHeight + scrollTop;\n  _classPrivateFieldGet(this, _backlight).setPosition(posTop);\n  _classPrivateFieldGet(this, _backlight).setSize(null, wtTable.hider.offsetHeight - posTop);\n}\nfunction _onAfterLoadData2() {\n  this.moveBySettingsOrLoad();\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass, closest, hasClass, removeClass, outerHeight, isDetached } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\"; // Developer note! Whenever you make a change in this file, make an analogous change in manualRowResize.js\nexport const PLUGIN_KEY = 'manualColumnResize';\nexport const PLUGIN_PRIORITY = 130;\nconst PERSISTENT_STATE_KEY = 'manualColumnWidths';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnResize\n * @class ManualColumnResize\n *\n * @description\n * This plugin allows to change columns width. To make columns width persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * The plugin creates additional components to make resizing possibly using user interface:\n * - handle - the draggable element that sets the desired width of the column.\n * - guide - the helper guide that shows the desired width as a vertical guide.\n */\nvar _currentTH = /*#__PURE__*/new WeakMap();\nvar _currentCol = /*#__PURE__*/new WeakMap();\nvar _selectedCols = /*#__PURE__*/new WeakMap();\nvar _currentWidth = /*#__PURE__*/new WeakMap();\nvar _newSize = /*#__PURE__*/new WeakMap();\nvar _startY = /*#__PURE__*/new WeakMap();\nvar _startWidth = /*#__PURE__*/new WeakMap();\nvar _startOffset = /*#__PURE__*/new WeakMap();\nvar _handle = /*#__PURE__*/new WeakMap();\nvar _guide = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByRMB = /*#__PURE__*/new WeakMap();\nvar _dblclick = /*#__PURE__*/new WeakMap();\nvar _autoresizeTimeout = /*#__PURE__*/new WeakMap();\nvar _columnWidthsMap = /*#__PURE__*/new WeakMap();\nvar _config = /*#__PURE__*/new WeakMap();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nvar _onMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onContextMenu = /*#__PURE__*/new WeakSet();\nvar _onModifyColWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeStretchingColumnWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeColumnResize = /*#__PURE__*/new WeakSet();\nexport class ManualColumnResize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n\n  /**\n   * @type {HTMLTableHeaderCellElement}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * `beforeColumnResize` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeColumnResize);\n    /**\n     * Modifies the provided column stretched width. This hook decides if specified column should be stretched or not.\n     *\n     * @param {number} stretchedWidth Stretched width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeStretchingColumnWidth);\n    /**\n     * Modifies the provided column width, based on the plugin settings.\n     *\n     * @param {number} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColWidth);\n    /**\n     * Callback for \"contextmenu\" event triggered on element showing move handle. It removes handle and guide elements.\n     */\n    _classPrivateMethodInitSpec(this, _onContextMenu);\n    /**\n     * 'mouseup' event callback - apply the column resizing.\n     *\n     * @fires Hooks#beforeColumnResize\n     * @fires Hooks#afterColumnResize\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'mousemove' event callback - refresh the handle and guide positions, cache the new column width.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * 'mousedown' event callback.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseDown);\n    /**\n     * 'mouseover' event callback - set the handle position.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseOver);\n    /**\n     * Callback to call on map's `init` local hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    _classPrivateFieldInitSpec(this, _currentTH, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentCol, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCols, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _newSize, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startY, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startOffset, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _handle, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _guide, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByRMB, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _dblclick, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _autoresizeTimeout, {\n      writable: true,\n      value: null\n    });\n    /**\n     * PhysicalIndexToValueMap to keep and track widths for physical column indexes.\n     *\n     * @type {PhysicalIndexToValueMap}\n     */\n    _classPrivateFieldInitSpec(this, _columnWidthsMap, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Private pool to save configuration from updateSettings.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _config, {\n      writable: true,\n      value: void 0\n    });\n    addClass(_classPrivateFieldGet(this, _handle), 'manualColumnResizer');\n    addClass(_classPrivateFieldGet(this, _guide), 'manualColumnResizerGuide');\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  get inlineDir() {\n    return this.hot.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnResize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    _classPrivateFieldSet(this, _columnWidthsMap, new IndexToValueMap());\n    _classPrivateFieldGet(this, _columnWidthsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _columnWidthsMap));\n    this.addHook('modifyColWidth', (width, col) => _classPrivateMethodGet(this, _onModifyColWidth, _onModifyColWidth2).call(this, width, col));\n    this.addHook('beforeStretchingColumnWidth', (stretchedWidth, column) => _classPrivateMethodGet(this, _onBeforeStretchingColumnWidth, _onBeforeStretchingColumnWidth2).call(this, stretchedWidth, column));\n    this.addHook('beforeColumnResize', (newSize, column, isDoubleClick) => _classPrivateMethodGet(this, _onBeforeColumnResize, _onBeforeColumnResize2).call(this, newSize, column, isDoubleClick));\n    this.bindEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnResize`](@/api/options.md#manualcolumnresize)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldSet(this, _config, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n    this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n    super.disablePlugin();\n  }\n\n  /**\n   * Saves the current sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @fires Hooks#persistentStateSave\n   */\n  saveManualColumnWidths() {\n    this.hot.runHooks('persistentStateSave', PERSISTENT_STATE_KEY, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n  }\n\n  /**\n   * Loads the previously saved sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @returns {Array}\n   * @fires Hooks#persistentStateLoad\n   */\n  loadManualColumnWidths() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', PERSISTENT_STATE_KEY, storedState);\n    return storedState.value;\n  }\n\n  /**\n   * Sets the new width for specified column index.\n   *\n   * @param {number} column Visual column index.\n   * @param {number} width Column width (no less than 20px).\n   * @returns {number} Returns new width.\n   */\n  setManualSize(column, width) {\n    const newWidth = Math.max(width, 20);\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, newWidth);\n    return newWidth;\n  }\n\n  /**\n   * Clears the cache for the specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  clearManualSize(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, null);\n  }\n  /**\n   * Set the resize handle position.\n   *\n   * @private\n   * @param {HTMLCellElement} TH TH HTML element.\n   */\n  setupHandlePosition(TH) {\n    if (!TH.parentNode) {\n      return;\n    }\n    _classPrivateFieldSet(this, _currentTH, TH);\n    const {\n      _wt: wt\n    } = this.hot.view;\n    const cellCoords = wt.wtTable.getCoords(_classPrivateFieldGet(this, _currentTH));\n    const col = cellCoords.col;\n\n    // Ignore column headers.\n    if (col < 0) {\n      return;\n    }\n    const headerHeight = outerHeight(_classPrivateFieldGet(this, _currentTH));\n    const box = _classPrivateFieldGet(this, _currentTH).getBoundingClientRect();\n    // Read \"fixedColumnsStart\" through the Walkontable as in that context, the fixed columns\n    // are modified (reduced by the number of hidden columns) by TableView module.\n    const fixedColumn = col < wt.getSetting('fixedColumnsStart');\n    let relativeHeaderPosition;\n    if (fixedColumn) {\n      relativeHeaderPosition = wt.wtOverlays.topInlineStartCornerOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n\n    // If the TH is not a child of the top-left overlay, recalculate using\n    // the top overlay - as this overlay contains the rest of the headers.\n    if (!relativeHeaderPosition) {\n      relativeHeaderPosition = wt.wtOverlays.topOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n    _classPrivateFieldSet(this, _currentCol, this.hot.columnIndexMapper.getVisualFromRenderableIndex(col));\n    _classPrivateFieldSet(this, _selectedCols, []);\n    const isFullColumnSelected = this.hot.selection.isSelectedByCorner() || this.hot.selection.isSelectedByColumnHeader();\n    if (this.hot.selection.isSelected() && isFullColumnSelected) {\n      const selectionRanges = this.hot.getSelectedRange();\n      arrayEach(selectionRanges, selectionRange => {\n        const fromColumn = selectionRange.getTopStartCorner().col;\n        const toColumn = selectionRange.getBottomEndCorner().col;\n\n        // Add every selected column for resize action.\n        rangeEach(fromColumn, toColumn, columnIndex => {\n          if (!_classPrivateFieldGet(this, _selectedCols).includes(columnIndex)) {\n            _classPrivateFieldGet(this, _selectedCols).push(columnIndex);\n          }\n        });\n      });\n    }\n\n    // Resizing element beyond the current selection (also when there is no selection).\n    if (!_classPrivateFieldGet(this, _selectedCols).includes(_classPrivateFieldGet(this, _currentCol))) {\n      _classPrivateFieldSet(this, _selectedCols, [_classPrivateFieldGet(this, _currentCol)]);\n    }\n    _classPrivateFieldSet(this, _startOffset, relativeHeaderPosition.start - 6);\n    _classPrivateFieldSet(this, _startWidth, parseInt(box.width, 10));\n    _classPrivateFieldGet(this, _handle).style.top = `${relativeHeaderPosition.top}px`;\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _startWidth)}px`;\n    _classPrivateFieldGet(this, _handle).style.height = `${headerHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _handle));\n  }\n\n  /**\n   * Refresh the resize handle position.\n   *\n   * @private\n   */\n  refreshHandlePosition() {\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _currentWidth)}px`;\n  }\n\n  /**\n   * Sets the resize guide position.\n   *\n   * @private\n   */\n  setupGuidePosition() {\n    const handleHeight = parseInt(outerHeight(_classPrivateFieldGet(this, _handle)), 10);\n    const handleBottomPosition = parseInt(_classPrivateFieldGet(this, _handle).style.top, 10) + handleHeight;\n    const maximumVisibleElementHeight = parseInt(this.hot.view.maximumVisibleElementHeight(0), 10);\n    addClass(_classPrivateFieldGet(this, _handle), 'active');\n    addClass(_classPrivateFieldGet(this, _guide), 'active');\n    _classPrivateFieldGet(this, _guide).style.top = `${handleBottomPosition}px`;\n    this.refreshGuidePosition();\n    _classPrivateFieldGet(this, _guide).style.height = `${maximumVisibleElementHeight - handleHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _guide));\n  }\n\n  /**\n   * Refresh the resize guide position.\n   *\n   * @private\n   */\n  refreshGuidePosition() {\n    _classPrivateFieldGet(this, _guide).style[this.inlineDir] = _classPrivateFieldGet(this, _handle).style[this.inlineDir];\n  }\n\n  /**\n   * Hides both the resize handle and resize guide.\n   *\n   * @private\n   */\n  hideHandleAndGuide() {\n    removeClass(_classPrivateFieldGet(this, _handle), 'active');\n    removeClass(_classPrivateFieldGet(this, _guide), 'active');\n  }\n\n  /**\n   * Checks if provided element is considered a column header.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {boolean}\n   */\n  checkIfColumnHeader(element) {\n    return !!closest(element, ['THEAD'], this.hot.rootElement);\n  }\n\n  /**\n   * Gets the TH element from the provided element.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {HTMLElement}\n   */\n  getClosestTHParent(element) {\n    if (element.tagName !== 'TABLE') {\n      if (element.tagName === 'TH') {\n        return element;\n      }\n      return this.getClosestTHParent(element.parentNode);\n    }\n    return null;\n  }\n  /**\n   * Auto-size row after doubleclick - callback.\n   *\n   * @private\n   * @fires Hooks#beforeColumnResize\n   * @fires Hooks#afterColumnResize\n   */\n  afterMouseDownTimeout() {\n    const render = () => {\n      this.hot.forceFullRender = true;\n      this.hot.view.render(); // updates all\n      this.hot.view.adjustElementsSize(true);\n    };\n    const resize = (column, forceRender) => {\n      const hookNewSize = this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (hookNewSize !== undefined) {\n        _classPrivateFieldSet(this, _newSize, hookNewSize);\n      }\n      if (this.hot.getSettings().stretchH === 'all') {\n        this.clearManualSize(column);\n      } else {\n        this.setManualSize(column, _classPrivateFieldGet(this, _newSize)); // double click sets by auto row size plugin\n      }\n\n      this.saveManualColumnWidths();\n      this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (forceRender) {\n        render();\n      }\n    };\n    if (_classPrivateFieldGet(this, _dblclick) >= 2) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    _classPrivateFieldSet(this, _dblclick, 0);\n    _classPrivateFieldSet(this, _autoresizeTimeout, null);\n  }\n  /**\n   * Binds the mouse events.\n   *\n   * @private\n   */\n  bindEvents() {\n    const {\n      rootWindow,\n      rootElement\n    } = this.hot;\n    this.eventManager.addEventListener(rootElement, 'mouseover', e => _classPrivateMethodGet(this, _onMouseOver, _onMouseOver2).call(this, e));\n    this.eventManager.addEventListener(rootElement, 'mousedown', e => _classPrivateMethodGet(this, _onMouseDown, _onMouseDown2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mousemove', e => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(_classPrivateFieldGet(this, _handle), 'contextmenu', () => _classPrivateMethodGet(this, _onContextMenu, _onContextMenu2).call(this));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onMapInit2() {\n  const initialSetting = this.hot.getSettings()[PLUGIN_KEY];\n  const loadedManualColumnWidths = this.loadManualColumnWidths();\n  if (typeof loadedManualColumnWidths !== 'undefined') {\n    this.hot.batchExecution(() => {\n      loadedManualColumnWidths.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  } else if (Array.isArray(initialSetting)) {\n    this.hot.batchExecution(() => {\n      initialSetting.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n    _classPrivateFieldSet(this, _config, initialSetting);\n  } else if (initialSetting === true && Array.isArray(_classPrivateFieldGet(this, _config))) {\n    this.hot.batchExecution(() => {\n      _classPrivateFieldGet(this, _config).forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  }\n}\nfunction _onMouseOver2(event) {\n  // Workaround for #6926 - if the `event.target` is temporarily detached, we can skip this callback and wait for\n  // the next `onmouseover`.\n  if (isDetached(event.target)) {\n    return;\n  }\n\n  // A \"mouseover\" action is triggered right after executing \"contextmenu\" event. It should be ignored.\n  if (_classPrivateFieldGet(this, _isTriggeredByRMB) === true) {\n    return;\n  }\n  if (this.checkIfColumnHeader(event.target)) {\n    const th = this.getClosestTHParent(event.target);\n    if (!th) {\n      return;\n    }\n    const colspan = th.getAttribute('colspan');\n    if (th && (colspan === null || colspan === '1')) {\n      if (!_classPrivateFieldGet(this, _pressed)) {\n        this.setupHandlePosition(th);\n      }\n    }\n  }\n}\nfunction _onMouseDown2(event) {\n  if (hasClass(event.target, 'manualColumnResizer')) {\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n    this.setupGuidePosition();\n    _classPrivateFieldSet(this, _pressed, true);\n    if (_classPrivateFieldGet(this, _autoresizeTimeout) === null) {\n      _classPrivateFieldSet(this, _autoresizeTimeout, setTimeout(() => this.afterMouseDownTimeout(), 500));\n      this.hot._registerTimeout(_classPrivateFieldGet(this, _autoresizeTimeout));\n    }\n    _classPrivateFieldSet(this, _dblclick, _classPrivateFieldGet(this, _dblclick) + 1);\n    this.startX = event.pageX;\n    _classPrivateFieldSet(this, _newSize, _classPrivateFieldGet(this, _startWidth));\n  }\n}\nfunction _onMouseMove2(event) {\n  if (_classPrivateFieldGet(this, _pressed)) {\n    const change = (event.pageX - this.startX) * this.hot.getDirectionFactor();\n    _classPrivateFieldSet(this, _currentWidth, _classPrivateFieldGet(this, _startWidth) + change);\n    arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n      _classPrivateFieldSet(this, _newSize, this.setManualSize(selectedCol, _classPrivateFieldGet(this, _currentWidth)));\n    });\n    this.refreshHandlePosition();\n    this.refreshGuidePosition();\n  }\n}\nfunction _onMouseUp2() {\n  const render = () => {\n    this.hot.forceFullRender = true;\n    this.hot.view.render(); // updates all\n    this.hot.view.adjustElementsSize(true);\n  };\n  const resize = (column, forceRender) => {\n    this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n    if (forceRender) {\n      render();\n    }\n    this.saveManualColumnWidths();\n    this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n  };\n  if (_classPrivateFieldGet(this, _pressed)) {\n    this.hideHandleAndGuide();\n    _classPrivateFieldSet(this, _pressed, false);\n    if (_classPrivateFieldGet(this, _newSize) !== _classPrivateFieldGet(this, _startWidth)) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n  }\n}\nfunction _onContextMenu2() {\n  this.hideHandleAndGuide();\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _handle));\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _guide));\n  _classPrivateFieldSet(this, _pressed, false);\n  _classPrivateFieldSet(this, _isTriggeredByRMB, true);\n\n  // There is thrown \"mouseover\" event right after opening a context menu. This flag inform that handle\n  // shouldn't be drawn just after removing it.\n  this.hot._registerImmediate(() => {\n    _classPrivateFieldSet(this, _isTriggeredByRMB, false);\n  });\n}\nfunction _onModifyColWidth2(width, column) {\n  let newWidth = width;\n  if (this.enabled) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    const columnWidth = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(physicalColumn);\n    if (this.hot.getSettings()[PLUGIN_KEY] && columnWidth) {\n      newWidth = columnWidth;\n    }\n  }\n  return newWidth;\n}\nfunction _onBeforeStretchingColumnWidth2(stretchedWidth, column) {\n  let width = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(column);\n  if (width === null) {\n    width = stretchedWidth;\n  }\n  return width;\n}\nfunction _onBeforeColumnResize2() {\n  // clear the header height cache information\n  this.hot.view._wt.wtViewport.resetHasOversizedColumnHeadersMarked();\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} left New left position of the element.\n   */\n  setPosition(top, left) {\n    if (top !== undefined) {\n      this._element.style.top = top + UNIT;\n    }\n    if (left !== undefined) {\n      this._element.style.left = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    return {\n      top: this._element.style.top ? parseInt(this._element.style.top, 10) : 0,\n      left: this._element.style.left ? parseInt(this._element.style.left, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (width) {\n      this._element.style.width = width + UNIT;\n    }\n    if (height) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} left New margin left of the element.\n   */\n  setOffset(top, left) {\n    if (top) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (left) {\n      this._element.style.marginLeft = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    return {\n      top: this._element.style.marginTop ? parseInt(this._element.style.marginTop, 10) : 0,\n      left: this._element.style.marginLeft ? parseInt(this._element.style.marginLeft, 10) : 0\n    };\n  }\n}\nexport default BaseUI;", "import BaseUI from \"./_base.mjs\";\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nconst CSS_CLASSNAME = 'ht__manualRowMove--backlight';\n\n/**\n * @private\n * @class BacklightUI\n */\nclass BacklightUI extends BaseUI {\n  /**\n   * Custom className on build process.\n   */\n  build() {\n    super.build();\n    addClass(this._element, CSS_CLASSNAME);\n  }\n}\nexport default BacklightUI;", "import BaseUI from \"./_base.mjs\";\nimport { addClass } from \"../../../helpers/dom/element.mjs\";\nconst CSS_CLASSNAME = 'ht__manualRowMove--guideline';\n\n/**\n * @private\n * @class GuidelineUI\n */\nclass GuidelineUI extends BaseUI {\n  /**\n   * Custom className on build process.\n   */\n  build() {\n    super.build();\n    addClass(this._element, CSS_CLASSNAME);\n  }\n}\nexport default GuidelineUI;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, getTrimmingContainer } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeRowMove');\nHooks.getSingleton().register('afterRowMove');\nexport const PLUGIN_KEY = 'manualRowMove';\nexport const PLUGIN_PRIORITY = 140;\nconst CSS_PLUGIN = 'ht__manualRowMove';\nconst CSS_SHOW_UI = 'show-ui';\nconst CSS_ON_MOVING = 'on-moving--rows';\nconst CSS_AFTER_SELECTION = 'after-selection--rows';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualRowMove\n * @class ManualRowMove\n *\n * @description\n * This plugin allows to change rows order. To make rows order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveRow` - move single row to the new position.\n * - `moveRows` - move many rows (as an array of indexes) to the new position.\n * - `dragRow` - drag single row to the new position.\n * - `dragRows` - drag many rows (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/rows/row-moving.md) explain differences between drag and move actions. Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected rows.\n * - guideline - line which shows where rows has been moved.\n *\n * @class ManualRowMove\n * @plugin ManualRowMove\n */\nvar _backlight = /*#__PURE__*/new WeakMap();\nvar _guideline = /*#__PURE__*/new WeakMap();\nvar _rowsToMove = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _target = /*#__PURE__*/new WeakMap();\nvar _cachedDropIndex = /*#__PURE__*/new WeakMap();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterScrollHorizontally = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class ManualRowMove extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Callback for the `afterLoadData` hook.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterScrollHorizontally);\n    /**\n     * `onMouseUp` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseOver);\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Backlight UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _backlight, {\n      writable: true,\n      value: new BacklightUI(this.hot)\n    });\n    /**\n     * Guideline UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _guideline, {\n      writable: true,\n      value: new GuidelineUI(this.hot)\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _rowsToMove, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _target, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _cachedDropIndex, {\n      writable: true,\n      value: void 0\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualRowMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseOver', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseOver, _onBeforeOnCellMouseOver2).call(_this, ...args);\n    });\n    this.addHook('afterScrollHorizontally', () => _classPrivateMethodGet(this, _onAfterScrollHorizontally, _onAfterScrollHorizontally2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.buildPluginUI();\n    this.registerEvents();\n\n    // TODO: move adding plugin classname to BasePlugin.\n    addClass(this.hot.rootElement, CSS_PLUGIN);\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualRowMove`](@/api/options.md#manualrowmove)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    this.moveBySettingsOrLoad();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    removeClass(this.hot.rootElement, CSS_PLUGIN);\n    this.unregisterEvents();\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.disablePlugin();\n  }\n\n  /**\n   * Moves a single row.\n   *\n   * To see the outcome, rerender your grid by calling [`render()`](@/api/core.md#render).\n   *\n   * @param {number} row Visual row index to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @fires Hooks#beforeRowMove\n   * @fires Hooks#afterRowMove\n   * @returns {boolean}\n   */\n  moveRow(row, finalIndex) {\n    return this.moveRows([row], finalIndex);\n  }\n\n  /**\n   * Moves multiple rows.\n   *\n   * To see the outcome, rerender your grid by calling [`render()`](@/api/core.md#render).\n   *\n   * @param {Array} rows Array of visual row indexes to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @fires Hooks#beforeRowMove\n   * @fires Hooks#afterRowMove\n   * @returns {boolean}\n   */\n  moveRows(rows, finalIndex) {\n    const dropIndex = _classPrivateFieldGet(this, _cachedDropIndex);\n    const movePossible = this.isMovePossible(rows, finalIndex);\n    const beforeMoveHook = this.hot.runHooks('beforeRowMove', rows, finalIndex, dropIndex, movePossible);\n    _classPrivateFieldSet(this, _cachedDropIndex, undefined);\n    if (beforeMoveHook === false) {\n      return;\n    }\n    if (movePossible) {\n      this.hot.rowIndexMapper.moveIndexes(rows, finalIndex);\n    }\n    const movePerformed = movePossible && this.isRowOrderChanged(rows, finalIndex);\n    this.hot.runHooks('afterRowMove', rows, finalIndex, dropIndex, movePossible, movePerformed);\n    return movePerformed;\n  }\n\n  /**\n   * Drag a single row to drop index position.\n   *\n   * @param {number} row Visual row index to be dragged.\n   * @param {number} dropIndex Visual row index, being a drop index for the moved rows. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @fires Hooks#beforeRowMove\n   * @fires Hooks#afterRowMove\n   * @returns {boolean}\n   */\n  dragRow(row, dropIndex) {\n    return this.dragRows([row], dropIndex);\n  }\n\n  /**\n   * Drag multiple rows to drop index position.\n   *\n   * @param {Array} rows Array of visual row indexes to be dragged.\n   * @param {number} dropIndex Visual row index, being a drop index for the moved rows. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @fires Hooks#beforeRowMove\n   * @fires Hooks#afterRowMove\n   * @returns {boolean}\n   */\n  dragRows(rows, dropIndex) {\n    const finalIndex = this.countFinalIndex(rows, dropIndex);\n    _classPrivateFieldSet(this, _cachedDropIndex, dropIndex);\n    return this.moveRows(rows, finalIndex);\n  }\n\n  /**\n   * Indicates if it's possible to move rows to the desired position. Some of the actions aren't possible, i.e. You can’t move more than one element to the last position.\n   *\n   * @param {Array} movedRows Array of visual row indexes to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @returns {boolean}\n   */\n  isMovePossible(movedRows, finalIndex) {\n    const length = this.hot.rowIndexMapper.getNotTrimmedIndexesLength();\n\n    // An attempt to transfer more rows to start destination than is possible (only when moving from the top to the bottom).\n    const tooHighDestinationIndex = movedRows.length + finalIndex > length;\n    const tooLowDestinationIndex = finalIndex < 0;\n    const tooLowMovedRowIndex = movedRows.some(movedRow => movedRow < 0);\n    const tooHighMovedRowIndex = movedRows.some(movedRow => movedRow >= length);\n    if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedRowIndex || tooHighMovedRowIndex) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicates if order of rows was changed.\n   *\n   * @private\n   * @param {Array} movedRows Array of visual row indexes to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/rows/row-moving.md#drag-and-move-actions-of-manualrowmove-plugin).\n   * @returns {boolean}\n   */\n  isRowOrderChanged(movedRows, finalIndex) {\n    return movedRows.some((row, nrOfMovedElement) => row - nrOfMovedElement !== finalIndex);\n  }\n\n  /**\n   * Count the final row index from the drop index.\n   *\n   * @private\n   * @param {Array} movedRows Array of visual row indexes to be moved.\n   * @param {number} dropIndex Visual row index, being a drop index for the moved rows.\n   * @returns {number} Visual row index, being a start index for the moved rows.\n   */\n  countFinalIndex(movedRows, dropIndex) {\n    const numberOfRowsLowerThanDropIndex = arrayReduce(movedRows, (numberOfRows, currentRowIndex) => {\n      if (currentRowIndex < dropIndex) {\n        numberOfRows += 1;\n      }\n      return numberOfRows;\n    }, 0);\n    return dropIndex - numberOfRowsLowerThanDropIndex;\n  }\n\n  /**\n   * Gets the sum of the heights of rows in the provided range.\n   *\n   * @private\n   * @param {number} fromRow Visual row index.\n   * @param {number} toRow Visual row index.\n   * @returns {number}\n   */\n  getRowsHeight(fromRow, toRow) {\n    const rowMapper = this.hot.rowIndexMapper;\n    let rowsHeight = 0;\n    for (let visualRowIndex = fromRow; visualRowIndex <= toRow; visualRowIndex++) {\n      const renderableIndex = rowMapper.getRenderableFromVisualIndex(visualRowIndex);\n      if (renderableIndex !== null) {\n        rowsHeight += this.hot.view._wt.wtTable.getRowHeight(renderableIndex) || 23;\n      }\n    }\n    return rowsHeight;\n  }\n\n  /**\n   * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n   *\n   * @private\n   */\n  moveBySettingsOrLoad() {\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(pluginSettings)) {\n      this.moveRows(pluginSettings, 0);\n    } else if (pluginSettings !== undefined) {\n      const persistentState = this.persistentStateLoad();\n      if (persistentState.length) {\n        this.moveRows(persistentState, 0);\n      }\n    }\n  }\n\n  /**\n   * Checks if the provided row is in the fixedRowsTop section.\n   *\n   * @private\n   * @param {number} row Visual row index to check.\n   * @returns {boolean}\n   */\n  isFixedRowTop(row) {\n    return row < this.hot.getSettings().fixedRowsTop;\n  }\n\n  /**\n   * Checks if the provided row is in the fixedRowsBottom section.\n   *\n   * @private\n   * @param {number} row Visual row index to check.\n   * @returns {boolean}\n   */\n  isFixedRowBottom(row) {\n    return row > this.hot.countRows() - 1 - this.hot.getSettings().fixedRowsBottom;\n  }\n\n  /**\n   * Saves the manual row positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateSave\n   */\n  persistentStateSave() {\n    // The `PersistentState` plugin should be refactored.\n    this.hot.runHooks('persistentStateSave', 'manualRowMove', this.hot.rowIndexMapper.getIndexesSequence());\n  }\n\n  /**\n   * Loads the manual row positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateLoad\n   * @returns {Array} Stored state.\n   */\n  persistentStateLoad() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', 'manualRowMove', storedState);\n    return storedState.value ? storedState.value : [];\n  }\n\n  /**\n   * Prepares an array of indexes based on actual selection.\n   *\n   * @private\n   * @returns {Array}\n   */\n  prepareRowsToMoving() {\n    const selection = this.hot.getSelectedRangeLast();\n    const selectedRows = [];\n    if (!selection) {\n      return selectedRows;\n    }\n    const {\n      from,\n      to\n    } = selection;\n    const start = Math.min(from.row, to.row);\n    const end = Math.max(from.row, to.row);\n    rangeEach(start, end, i => {\n      selectedRows.push(i);\n    });\n    return selectedRows;\n  }\n\n  /**\n   * Update the UI visual position.\n   *\n   * @private\n   */\n  refreshPositions() {\n    const coords = _classPrivateFieldGet(this, _target).coords;\n    const firstVisible = this.hot.view.getFirstFullyVisibleRow();\n    const lastVisible = this.hot.view.getLastFullyVisibleRow();\n    const countRows = this.hot.countRows();\n    if (this.isFixedRowTop(coords.row) && firstVisible > 0) {\n      this.hot.scrollViewportTo(this.hot.rowIndexMapper.getNearestNotHiddenIndex(firstVisible - 1, -1));\n    }\n    if (this.isFixedRowBottom(coords.row) && lastVisible < countRows) {\n      this.hot.scrollViewportTo(this.hot.rowIndexMapper.getNearestNotHiddenIndex(lastVisible + 1, 1), undefined, true);\n    }\n    const wtTable = this.hot.view._wt.wtTable;\n    const TD = _classPrivateFieldGet(this, _target).TD;\n    const rootElement = this.hot.rootElement;\n    const rootElementOffset = offset(rootElement);\n    const trimmingContainer = getTrimmingContainer(rootElement);\n    const tableScroll = wtTable.holder.scrollTop;\n    const trimmingContainerScroll = this.hot.rootWindow !== trimmingContainer ? trimmingContainer.scrollTop : 0;\n    const pixelsAbove = rootElementOffset.top - trimmingContainerScroll;\n    const pixelsRelToTableStart = _classPrivateFieldGet(this, _target).eventPageY - pixelsAbove + tableScroll;\n    const hiderHeight = wtTable.hider.offsetHeight;\n    const tbodyOffsetTop = wtTable.TBODY.offsetTop;\n    const backlightElemMarginTop = _classPrivateFieldGet(this, _backlight).getOffset().top;\n    const backlightElemHeight = _classPrivateFieldGet(this, _backlight).getSize().height;\n    const tdMiddle = TD.offsetHeight / 2;\n    const tdHeight = TD.offsetHeight;\n    let tdStartPixel = this.hot.view.THEAD.offsetHeight + this.getRowsHeight(0, coords.row - 1);\n    const isBelowTable = pixelsRelToTableStart >= tdStartPixel + tdMiddle;\n    if (this.isFixedRowTop(coords.row)) {\n      tdStartPixel += this.hot.view._wt.wtOverlays.topOverlay.getOverlayOffset();\n    }\n    if (coords.row < 0) {\n      // if hover on colHeader\n      _classPrivateFieldGet(this, _target).row = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n    } else if (isBelowTable) {\n      // if hover on lower part of TD\n      _classPrivateFieldGet(this, _target).row = coords.row + 1;\n      // unfortunately first row is bigger than rest\n      tdStartPixel += coords.row === 0 ? tdHeight - 1 : tdHeight;\n    } else {\n      // elsewhere on table\n      _classPrivateFieldGet(this, _target).row = coords.row;\n    }\n    let backlightTop = pixelsRelToTableStart;\n    let guidelineTop = tdStartPixel;\n    if (pixelsRelToTableStart + backlightElemHeight + backlightElemMarginTop >= hiderHeight) {\n      // prevent display backlight below table\n      backlightTop = hiderHeight - backlightElemHeight - backlightElemMarginTop;\n    } else if (pixelsRelToTableStart + backlightElemMarginTop < tbodyOffsetTop) {\n      // prevent display above below table\n      backlightTop = tbodyOffsetTop + Math.abs(backlightElemMarginTop);\n    }\n    if (tdStartPixel >= hiderHeight - 1) {\n      // prevent display guideline below table\n      guidelineTop = hiderHeight - 1;\n    }\n    _classPrivateFieldGet(this, _backlight).setPosition(backlightTop);\n    _classPrivateFieldGet(this, _guideline).setPosition(guidelineTop);\n  }\n\n  /**\n   * Binds the events used by the plugin.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    this.eventManager.addEventListener(documentElement, 'mousemove', event => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, event));\n    this.eventManager.addEventListener(documentElement, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n  }\n\n  /**\n   * Unbinds the events used by the plugin.\n   *\n   * @private\n   */\n  unregisterEvents() {\n    this.eventManager.clear();\n  }\n  /**\n   * Builds the plugin's UI.\n   *\n   * @private\n   */\n  buildPluginUI() {\n    _classPrivateFieldGet(this, _backlight).build();\n    _classPrivateFieldGet(this, _guideline).build();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.destroy();\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  const {\n    wtTable,\n    wtViewport\n  } = this.hot.view._wt;\n  const isHeaderSelection = this.hot.selection.isSelectedByRowHeader();\n  const selection = this.hot.getSelectedRangeLast();\n  if (!selection || !isHeaderSelection || _classPrivateFieldGet(this, _pressed) || event.button !== 0) {\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _rowsToMove).length = 0;\n    removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n    return;\n  }\n  const guidelineIsNotReady = _classPrivateFieldGet(this, _guideline).isBuilt() && !_classPrivateFieldGet(this, _guideline).isAppended();\n  const backlightIsNotReady = _classPrivateFieldGet(this, _backlight).isBuilt() && !_classPrivateFieldGet(this, _backlight).isAppended();\n  if (guidelineIsNotReady && backlightIsNotReady) {\n    _classPrivateFieldGet(this, _guideline).appendTo(wtTable.hider);\n    _classPrivateFieldGet(this, _backlight).appendTo(wtTable.hider);\n  }\n  const {\n    from,\n    to\n  } = selection;\n  const start = Math.min(from.row, to.row);\n  const end = Math.max(from.row, to.row);\n  if (coords.col < 0 && coords.row >= start && coords.row <= end) {\n    controller.row = true;\n    _classPrivateFieldSet(this, _pressed, true);\n    _classPrivateFieldGet(this, _target).eventPageY = event.pageY;\n    _classPrivateFieldGet(this, _target).coords = coords;\n    _classPrivateFieldGet(this, _target).TD = TD;\n    _classPrivateFieldSet(this, _rowsToMove, this.prepareRowsToMoving());\n    const leftPos = wtTable.holder.scrollLeft + wtViewport.getRowHeaderWidth();\n    const topOffset = this.getRowsHeight(start, coords.row - 1) + event.offsetY;\n    _classPrivateFieldGet(this, _backlight).setPosition(null, leftPos);\n    _classPrivateFieldGet(this, _backlight).setSize(wtTable.hider.offsetWidth - leftPos, this.getRowsHeight(start, end));\n    _classPrivateFieldGet(this, _backlight).setOffset(-topOffset, null);\n    addClass(this.hot.rootElement, CSS_ON_MOVING);\n    this.refreshPositions();\n  } else {\n    removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _rowsToMove).length = 0;\n  }\n}\nfunction _onMouseMove2(event) {\n  if (!_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _target).eventPageY = event.pageY;\n  this.refreshPositions();\n}\nfunction _onBeforeOnCellMouseOver2(event, coords, TD, controller) {\n  const selectedRange = this.hot.getSelectedRangeLast();\n  if (!selectedRange || !_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  if (_classPrivateFieldGet(this, _rowsToMove).indexOf(coords.row) > -1) {\n    removeClass(this.hot.rootElement, CSS_SHOW_UI);\n  } else {\n    addClass(this.hot.rootElement, CSS_SHOW_UI);\n  }\n  controller.row = true;\n  controller.column = true;\n  controller.cell = true;\n  _classPrivateFieldGet(this, _target).coords = coords;\n  _classPrivateFieldGet(this, _target).TD = TD;\n}\nfunction _onMouseUp2() {\n  const target = _classPrivateFieldGet(this, _target).row;\n  const rowsLen = _classPrivateFieldGet(this, _rowsToMove).length;\n  _classPrivateFieldSet(this, _pressed, false);\n  removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n  if (this.hot.selection.isSelectedByRowHeader()) {\n    addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n  }\n  if (rowsLen < 1 || target === undefined) {\n    return;\n  }\n  const firstMovedVisualRow = _classPrivateFieldGet(this, _rowsToMove)[0];\n  const firstMovedPhysicalRow = this.hot.toPhysicalRow(firstMovedVisualRow);\n  const movePerformed = this.dragRows(_classPrivateFieldGet(this, _rowsToMove), target);\n  _classPrivateFieldGet(this, _rowsToMove).length = 0;\n  if (movePerformed === true) {\n    this.persistentStateSave();\n    this.hot.render();\n    this.hot.view.adjustElementsSize(true);\n    const selectionStart = this.hot.toVisualRow(firstMovedPhysicalRow);\n    const selectionEnd = selectionStart + rowsLen - 1;\n    this.hot.selectRows(selectionStart, selectionEnd);\n  }\n}\nfunction _onAfterScrollHorizontally2() {\n  const wtTable = this.hot.view._wt.wtTable;\n  const headerWidth = this.hot.view._wt.wtViewport.getRowHeaderWidth();\n  const scrollLeft = wtTable.holder.scrollLeft;\n  const posLeft = headerWidth + scrollLeft;\n  _classPrivateFieldGet(this, _backlight).setPosition(null, posLeft);\n  _classPrivateFieldGet(this, _backlight).setSize(wtTable.hider.offsetWidth - posLeft);\n}\nfunction _onAfterLoadData2() {\n  this.moveBySettingsOrLoad();\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass, closest, hasClass, removeClass, outerWidth, isDetached } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport { ViewportRowsCalculator } from \"../../3rdparty/walkontable/src/index.mjs\"; // Developer note! Whenever you make a change in this file, make an analogous change in manualColumnResize.js\nexport const PLUGIN_KEY = 'manualRowResize';\nexport const PLUGIN_PRIORITY = 30;\nconst PERSISTENT_STATE_KEY = 'manualRowHeights';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualRowResize\n * @class ManualRowResize\n *\n * @description\n * This plugin allows to change rows height. To make rows height persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * The plugin creates additional components to make resizing possibly using user interface:\n * - handle - the draggable element that sets the desired height of the row.\n * - guide - the helper guide that shows the desired height as a horizontal guide.\n */\nvar _currentTH = /*#__PURE__*/new WeakMap();\nvar _currentRow = /*#__PURE__*/new WeakMap();\nvar _selectedRows = /*#__PURE__*/new WeakMap();\nvar _currentHeight = /*#__PURE__*/new WeakMap();\nvar _newSize = /*#__PURE__*/new WeakMap();\nvar _startY = /*#__PURE__*/new WeakMap();\nvar _startHeight = /*#__PURE__*/new WeakMap();\nvar _startOffset = /*#__PURE__*/new WeakMap();\nvar _handle = /*#__PURE__*/new WeakMap();\nvar _guide = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByRMB = /*#__PURE__*/new WeakMap();\nvar _dblclick = /*#__PURE__*/new WeakMap();\nvar _autoresizeTimeout = /*#__PURE__*/new WeakMap();\nvar _rowHeightsMap = /*#__PURE__*/new WeakMap();\nvar _config = /*#__PURE__*/new WeakMap();\nvar _onMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onContextMenu = /*#__PURE__*/new WeakSet();\nvar _onModifyRowHeight = /*#__PURE__*/new WeakSet();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nexport class ManualRowResize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n\n  /**\n   * @type {HTMLTableCellElement}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * Callback to call on map's `init` local hook.\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    /**\n     * Modifies the provided row height, based on the plugin settings.\n     *\n     * @param {number} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeight);\n    /**\n     * Callback for \"contextmenu\" event triggered on element showing move handle. It removes handle and guide elements.\n     */\n    _classPrivateMethodInitSpec(this, _onContextMenu);\n    /**\n     * 'mouseup' event callback - apply the row resizing.\n     *\n     * @fires Hooks#beforeRowResize\n     * @fires Hooks#afterRowResize\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'mousemove' event callback - refresh the handle and guide positions, cache the new row height.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * 'mousedown' event callback.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseDown);\n    /**\n     * 'mouseover' event callback - set the handle position.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseOver);\n    _classPrivateFieldInitSpec(this, _currentTH, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentRow, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _selectedRows, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentHeight, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _newSize, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startY, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startHeight, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startOffset, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _handle, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _guide, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByRMB, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _dblclick, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _autoresizeTimeout, {\n      writable: true,\n      value: null\n    });\n    /**\n     * PhysicalIndexToValueMap to keep and track widths for physical row indexes.\n     *\n     * @type {PhysicalIndexToValueMap}\n     */\n    _classPrivateFieldInitSpec(this, _rowHeightsMap, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Private pool to save configuration from updateSettings.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _config, {\n      writable: true,\n      value: void 0\n    });\n    addClass(_classPrivateFieldGet(this, _handle), 'manualRowResizer');\n    addClass(_classPrivateFieldGet(this, _guide), 'manualRowResizerGuide');\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  get inlineDir() {\n    return this.hot.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualRowResize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    _classPrivateFieldSet(this, _rowHeightsMap, new IndexToValueMap());\n    _classPrivateFieldGet(this, _rowHeightsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _rowHeightsMap));\n    this.addHook('modifyRowHeight', (height, row) => _classPrivateMethodGet(this, _onModifyRowHeight, _onModifyRowHeight2).call(this, height, row));\n    this.bindEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualRowResize`](@/api/options.md#manualrowresize)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldSet(this, _config, _classPrivateFieldGet(this, _rowHeightsMap).getValues());\n    this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    super.disablePlugin();\n  }\n\n  /**\n   * Saves the current sizes using the persistentState plugin (the {@link Options#persistentState} option has to be\n   * enabled).\n   *\n   * @fires Hooks#persistentStateSave\n   */\n  saveManualRowHeights() {\n    this.hot.runHooks('persistentStateSave', PERSISTENT_STATE_KEY, _classPrivateFieldGet(this, _rowHeightsMap).getValues());\n  }\n\n  /**\n   * Loads the previously saved sizes using the persistentState plugin (the {@link Options#persistentState} option\n   * has be enabled).\n   *\n   * @returns {Array}\n   * @fires Hooks#persistentStateLoad\n   */\n  loadManualRowHeights() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', PERSISTENT_STATE_KEY, storedState);\n    return storedState.value;\n  }\n\n  /**\n   * Sets the new height for specified row index.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} height Row height.\n   * @returns {number} Returns new height.\n   */\n  setManualSize(row, height) {\n    const physicalRow = this.hot.toPhysicalRow(row);\n    const newHeight = Math.max(height, ViewportRowsCalculator.DEFAULT_HEIGHT);\n    _classPrivateFieldGet(this, _rowHeightsMap).setValueAtIndex(physicalRow, newHeight);\n    return newHeight;\n  }\n\n  /**\n   * Sets the resize handle position.\n   *\n   * @private\n   * @param {HTMLCellElement} TH TH HTML element.\n   */\n  setupHandlePosition(TH) {\n    _classPrivateFieldSet(this, _currentTH, TH);\n    const {\n      view\n    } = this.hot;\n    const {\n      _wt: wt\n    } = view;\n    const cellCoords = wt.wtTable.getCoords(_classPrivateFieldGet(this, _currentTH));\n    const row = cellCoords.row;\n\n    // Ignore row headers.\n    if (row < 0) {\n      return;\n    }\n    const headerWidth = outerWidth(_classPrivateFieldGet(this, _currentTH));\n    const box = _classPrivateFieldGet(this, _currentTH).getBoundingClientRect();\n    // Read \"fixedRowsTop\" and \"fixedRowsBottom\" through the Walkontable as in that context, the fixed\n    // rows are modified (reduced by the number of hidden rows) by TableView module.\n    const fixedRowTop = row < wt.getSetting('fixedRowsTop');\n    const fixedRowBottom = row >= view.countNotHiddenRowIndexes(0, 1) - wt.getSetting('fixedRowsBottom');\n    let relativeHeaderPosition;\n    if (fixedRowTop) {\n      relativeHeaderPosition = wt.wtOverlays.topInlineStartCornerOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    } else if (fixedRowBottom) {\n      relativeHeaderPosition = wt.wtOverlays.bottomInlineStartCornerOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n\n    // If the TH is not a child of the top-left/bottom-left overlay, recalculate using\n    // the left overlay - as this overlay contains the rest of the headers.\n    if (!relativeHeaderPosition) {\n      relativeHeaderPosition = wt.wtOverlays.inlineStartOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n    _classPrivateFieldSet(this, _currentRow, this.hot.rowIndexMapper.getVisualFromRenderableIndex(row));\n    _classPrivateFieldSet(this, _selectedRows, []);\n    const isFullRowSelected = this.hot.selection.isSelectedByCorner() || this.hot.selection.isSelectedByRowHeader();\n    if (this.hot.selection.isSelected() && isFullRowSelected) {\n      const selectionRanges = this.hot.getSelectedRange();\n      arrayEach(selectionRanges, selectionRange => {\n        const fromRow = selectionRange.getTopStartCorner().row;\n        const toRow = selectionRange.getBottomStartCorner().row;\n\n        // Add every selected row for resize action.\n        rangeEach(fromRow, toRow, rowIndex => {\n          if (!_classPrivateFieldGet(this, _selectedRows).includes(rowIndex)) {\n            _classPrivateFieldGet(this, _selectedRows).push(rowIndex);\n          }\n        });\n      });\n    }\n\n    // Resizing element beyond the current selection (also when there is no selection).\n    if (!_classPrivateFieldGet(this, _selectedRows).includes(_classPrivateFieldGet(this, _currentRow))) {\n      _classPrivateFieldSet(this, _selectedRows, [_classPrivateFieldGet(this, _currentRow)]);\n    }\n    _classPrivateFieldSet(this, _startOffset, relativeHeaderPosition.top - 6);\n    _classPrivateFieldSet(this, _startHeight, parseInt(box.height, 10));\n    _classPrivateFieldGet(this, _handle).style.top = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _startHeight)}px`;\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${relativeHeaderPosition.start}px`;\n    _classPrivateFieldGet(this, _handle).style.width = `${headerWidth}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _handle));\n  }\n\n  /**\n   * Refresh the resize handle position.\n   *\n   * @private\n   */\n  refreshHandlePosition() {\n    _classPrivateFieldGet(this, _handle).style.top = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _currentHeight)}px`;\n  }\n\n  /**\n   * Sets the resize guide position.\n   *\n   * @private\n   */\n  setupGuidePosition() {\n    const handleWidth = parseInt(outerWidth(_classPrivateFieldGet(this, _handle)), 10);\n    const handleEndPosition = parseInt(_classPrivateFieldGet(this, _handle).style[this.inlineDir], 10) + handleWidth;\n    const maximumVisibleElementWidth = parseInt(this.hot.view.maximumVisibleElementWidth(0), 10);\n    addClass(_classPrivateFieldGet(this, _handle), 'active');\n    addClass(_classPrivateFieldGet(this, _guide), 'active');\n    _classPrivateFieldGet(this, _guide).style.top = _classPrivateFieldGet(this, _handle).style.top;\n    _classPrivateFieldGet(this, _guide).style[this.inlineDir] = `${handleEndPosition}px`;\n    _classPrivateFieldGet(this, _guide).style.width = `${maximumVisibleElementWidth - handleWidth}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _guide));\n  }\n\n  /**\n   * Refresh the resize guide position.\n   *\n   * @private\n   */\n  refreshGuidePosition() {\n    _classPrivateFieldGet(this, _guide).style.top = _classPrivateFieldGet(this, _handle).style.top;\n  }\n\n  /**\n   * Hides both the resize handle and resize guide.\n   *\n   * @private\n   */\n  hideHandleAndGuide() {\n    removeClass(_classPrivateFieldGet(this, _handle), 'active');\n    removeClass(_classPrivateFieldGet(this, _guide), 'active');\n  }\n\n  /**\n   * Checks if provided element is considered as a row header.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {boolean}\n   */\n  checkIfRowHeader(element) {\n    var _element$parentNode;\n    const thElement = closest(element, ['TH'], this.hot.rootElement);\n    return thElement && ((_element$parentNode = element.parentNode) === null || _element$parentNode === void 0 || (_element$parentNode = _element$parentNode.parentNode) === null || _element$parentNode === void 0 ? void 0 : _element$parentNode.tagName) === 'TBODY';\n  }\n\n  /**\n   * Gets the TH element from the provided element.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {HTMLElement}\n   */\n  getClosestTHParent(element) {\n    if (element.tagName !== 'TABLE') {\n      if (element.tagName === 'TH') {\n        return element;\n      }\n      return this.getClosestTHParent(element.parentNode);\n    }\n    return null;\n  }\n\n  /**\n   * Returns the actual height for the provided row index.\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @returns {number} Actual row height.\n   */\n  getActualRowHeight(row) {\n    // TODO: this should utilize `this.hot.getRowHeight` after it's fixed and working properly.\n    const walkontableHeight = this.hot.view._wt.wtTable.getRowHeight(row);\n    if (walkontableHeight !== undefined && _classPrivateFieldGet(this, _newSize) < walkontableHeight) {\n      return walkontableHeight;\n    }\n    return _classPrivateFieldGet(this, _newSize);\n  }\n  /**\n   * Auto-size row after doubleclick - callback.\n   *\n   * @private\n   * @fires Hooks#beforeRowResize\n   * @fires Hooks#afterRowResize\n   */\n  afterMouseDownTimeout() {\n    const render = () => {\n      this.hot.forceFullRender = true;\n      this.hot.view.render(); // updates all\n      this.hot.view.adjustElementsSize(true);\n    };\n    const resize = (row, forceRender) => {\n      const hookNewSize = this.hot.runHooks('beforeRowResize', this.getActualRowHeight(row), row, true);\n      if (hookNewSize !== undefined) {\n        _classPrivateFieldSet(this, _newSize, hookNewSize);\n      }\n      this.setManualSize(row, _classPrivateFieldGet(this, _newSize)); // double click sets auto row size\n\n      this.hot.runHooks('afterRowResize', this.getActualRowHeight(row), row, true);\n      if (forceRender) {\n        render();\n      }\n    };\n    if (_classPrivateFieldGet(this, _dblclick) >= 2) {\n      const selectedRowsLength = _classPrivateFieldGet(this, _selectedRows).length;\n      if (selectedRowsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedRows), selectedRow => {\n          resize(selectedRow);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedRows), selectedRow => {\n          resize(selectedRow, true);\n        });\n      }\n    }\n    _classPrivateFieldSet(this, _dblclick, 0);\n    _classPrivateFieldSet(this, _autoresizeTimeout, null);\n  }\n  /**\n   * Binds the mouse events.\n   *\n   * @private\n   */\n  bindEvents() {\n    const {\n      rootElement,\n      rootWindow\n    } = this.hot;\n    this.eventManager.addEventListener(rootElement, 'mouseover', e => _classPrivateMethodGet(this, _onMouseOver, _onMouseOver2).call(this, e));\n    this.eventManager.addEventListener(rootElement, 'mousedown', e => _classPrivateMethodGet(this, _onMouseDown, _onMouseDown2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mousemove', e => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(_classPrivateFieldGet(this, _handle), 'contextmenu', () => _classPrivateMethodGet(this, _onContextMenu, _onContextMenu2).call(this));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onMouseOver2(event) {\n  // Workaround for #6926 - if the `event.target` is temporarily detached, we can skip this callback and wait for\n  // the next `onmouseover`.\n  if (isDetached(event.target)) {\n    return;\n  }\n\n  // A \"mouseover\" action is triggered right after executing \"contextmenu\" event. It should be ignored.\n  if (_classPrivateFieldGet(this, _isTriggeredByRMB) === true) {\n    return;\n  }\n  if (this.checkIfRowHeader(event.target)) {\n    const th = this.getClosestTHParent(event.target);\n    if (th) {\n      if (!_classPrivateFieldGet(this, _pressed)) {\n        this.setupHandlePosition(th);\n      }\n    }\n  }\n}\nfunction _onMouseDown2(event) {\n  if (hasClass(event.target, 'manualRowResizer')) {\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n    this.setupGuidePosition();\n    _classPrivateFieldSet(this, _pressed, true);\n    if (_classPrivateFieldGet(this, _autoresizeTimeout) === null) {\n      _classPrivateFieldSet(this, _autoresizeTimeout, setTimeout(() => this.afterMouseDownTimeout(), 500));\n      this.hot._registerTimeout(_classPrivateFieldGet(this, _autoresizeTimeout));\n    }\n    _classPrivateFieldSet(this, _dblclick, _classPrivateFieldGet(this, _dblclick) + 1);\n    _classPrivateFieldSet(this, _startY, event.pageY);\n    _classPrivateFieldSet(this, _newSize, _classPrivateFieldGet(this, _startHeight));\n  }\n}\nfunction _onMouseMove2(event) {\n  if (_classPrivateFieldGet(this, _pressed)) {\n    _classPrivateFieldSet(this, _currentHeight, _classPrivateFieldGet(this, _startHeight) + (event.pageY - _classPrivateFieldGet(this, _startY)));\n    arrayEach(_classPrivateFieldGet(this, _selectedRows), selectedRow => {\n      _classPrivateFieldSet(this, _newSize, this.setManualSize(selectedRow, _classPrivateFieldGet(this, _currentHeight)));\n    });\n    this.refreshHandlePosition();\n    this.refreshGuidePosition();\n  }\n}\nfunction _onMouseUp2() {\n  const render = () => {\n    this.hot.forceFullRender = true;\n    this.hot.view.render(); // updates all\n    this.hot.view.adjustElementsSize(true);\n  };\n  const runHooks = (row, forceRender) => {\n    this.hot.runHooks('beforeRowResize', this.getActualRowHeight(row), row, false);\n    if (forceRender) {\n      render();\n    }\n    this.saveManualRowHeights();\n    this.hot.runHooks('afterRowResize', this.getActualRowHeight(row), row, false);\n  };\n  if (_classPrivateFieldGet(this, _pressed)) {\n    this.hideHandleAndGuide();\n    _classPrivateFieldSet(this, _pressed, false);\n    if (_classPrivateFieldGet(this, _newSize) !== _classPrivateFieldGet(this, _startHeight)) {\n      const selectedRowsLength = _classPrivateFieldGet(this, _selectedRows).length;\n      if (selectedRowsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedRows), selectedRow => {\n          runHooks(selectedRow);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedRows), selectedRow => {\n          runHooks(selectedRow, true);\n        });\n      }\n    }\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n  }\n}\nfunction _onContextMenu2() {\n  this.hideHandleAndGuide();\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _handle));\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _guide));\n  _classPrivateFieldSet(this, _pressed, false);\n  _classPrivateFieldSet(this, _isTriggeredByRMB, true);\n\n  // There is thrown \"mouseover\" event right after opening a context menu. This flag inform that handle\n  // shouldn't be drawn just after removing it.\n  this.hot._registerImmediate(() => {\n    _classPrivateFieldSet(this, _isTriggeredByRMB, false);\n  });\n}\nfunction _onModifyRowHeight2(height, row) {\n  let newHeight = height;\n  if (this.enabled) {\n    const physicalRow = this.hot.toPhysicalRow(row);\n    const rowHeight = _classPrivateFieldGet(this, _rowHeightsMap).getValueAtIndex(physicalRow);\n    if (this.hot.getSettings()[PLUGIN_KEY] && rowHeight) {\n      newHeight = rowHeight;\n    }\n  }\n  return newHeight;\n}\nfunction _onMapInit2() {\n  const initialSetting = this.hot.getSettings()[PLUGIN_KEY];\n  const loadedManualRowHeights = this.loadManualRowHeights();\n  this.hot.batchExecution(() => {\n    if (typeof loadedManualRowHeights !== 'undefined') {\n      loadedManualRowHeights.forEach((height, index) => {\n        _classPrivateFieldGet(this, _rowHeightsMap).setValueAtIndex(index, height);\n      });\n    } else if (Array.isArray(initialSetting)) {\n      initialSetting.forEach((height, index) => {\n        _classPrivateFieldGet(this, _rowHeightsMap).setValueAtIndex(index, height);\n      });\n      _classPrivateFieldSet(this, _config, initialSetting);\n    } else if (initialSetting === true && Array.isArray(_classPrivateFieldGet(this, _config))) {\n      _classPrivateFieldGet(this, _config).forEach((height, index) => {\n        _classPrivateFieldGet(this, _rowHeightsMap).setValueAtIndex(index, height);\n      });\n    }\n  }, true);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\n/**\n * The `MergedCellCoords` class represents a single merged cell.\n *\n * @private\n * @class MergedCellCoords\n */\nclass MergedCellCoords {\n  constructor(row, column, rowspan, colspan, cellCoordsFactory, cellRangeFactory) {\n    /**\n     * The index of the topmost merged cell row.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"row\", void 0);\n    /**\n     * The index of the leftmost column.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"col\", void 0);\n    /**\n     * The `rowspan` value of the merged cell.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"rowspan\", void 0);\n    /**\n     * The `colspan` value of the merged cell.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"colspan\", void 0);\n    /**\n     * `true` only if the merged cell is bound to be removed.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"removed\", false);\n    /**\n     * The CellCoords function factory.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"cellCoordsFactory\", void 0);\n    /**\n     * The CellRange function factory.\n     *\n     * @type {Function}\n     */\n    _defineProperty(this, \"cellRangeFactory\", void 0);\n    this.row = row;\n    this.col = column;\n    this.rowspan = rowspan;\n    this.colspan = colspan;\n    this.cellCoordsFactory = cellCoordsFactory;\n    this.cellRangeFactory = cellRangeFactory;\n  }\n\n  /**\n   * Get a warning message for when the declared merged cell data contains negative values.\n   *\n   * @param {object} newMergedCell Object containg information about the merged cells that was about to be added.\n   * @returns {string}\n   */\n  static NEGATIVE_VALUES_WARNING(newMergedCell) {\n    return toSingleLine`The merged cell declared with {row: ${newMergedCell.row}, col: ${newMergedCell.col},\\x20\n      rowspan: ${newMergedCell.rowspan}, colspan: ${newMergedCell.colspan}} contains negative values, which is\\x20\n      not supported. It will not be added to the collection.`;\n  }\n\n  /**\n   * Get a warning message for when the declared merged cell data contains values exceeding the table limits.\n   *\n   * @param {object} newMergedCell Object containg information about the merged cells that was about to be added.\n   * @returns {string}\n   */\n  static IS_OUT_OF_BOUNDS_WARNING(newMergedCell) {\n    return toSingleLine`The merged cell declared at [${newMergedCell.row}, ${newMergedCell.col}] is positioned\\x20\n      (or positioned partially) outside of the table range. It was not added to the table, please fix your setup.`;\n  }\n\n  /**\n   * Get a warning message for when the declared merged cell data represents a single cell.\n   *\n   * @param {object} newMergedCell Object containg information about the merged cells that was about to be added.\n   * @returns {string}\n   */\n  static IS_SINGLE_CELL(newMergedCell) {\n    return toSingleLine`The merged cell declared at [${newMergedCell.row}, ${newMergedCell.col}] has both \"rowspan\"\\x20\n      and \"colspan\" declared as \"1\", which makes it a single cell. It cannot be added to the collection.`;\n  }\n\n  /**\n   * Get a warning message for when the declared merged cell data contains \"colspan\" or \"rowspan\", that equals 0.\n   *\n   * @param {object} newMergedCell Object containg information about the merged cells that was about to be added.\n   * @returns {string}\n   */\n  static ZERO_SPAN_WARNING(newMergedCell) {\n    return toSingleLine`The merged cell declared at [${newMergedCell.row}, ${newMergedCell.col}] has \"rowspan\"\\x20\n      or \"colspan\" declared as \"0\", which is not supported. It cannot be added to the collection.`;\n  }\n\n  /**\n   * Check whether the values provided for a merged cell contain any negative values.\n   *\n   * @param {object} mergedCellInfo Object containing the `row`, `col`, `rowspan` and `colspan` properties.\n   * @returns {boolean}\n   */\n  static containsNegativeValues(mergedCellInfo) {\n    return mergedCellInfo.row < 0 || mergedCellInfo.col < 0 || mergedCellInfo.rowspan < 0 || mergedCellInfo.colspan < 0;\n  }\n\n  /**\n   * Check whether the provided merged cell information object represents a single cell.\n   *\n   * @private\n   * @param {object} mergedCellInfo An object with `row`, `col`, `rowspan` and `colspan` properties.\n   * @returns {boolean}\n   */\n  static isSingleCell(mergedCellInfo) {\n    return mergedCellInfo.colspan === 1 && mergedCellInfo.rowspan === 1;\n  }\n\n  /**\n   * Check whether the provided merged cell information object contains a rowspan or colspan of 0.\n   *\n   * @private\n   * @param {object} mergedCellInfo An object with `row`, `col`, `rowspan` and `colspan` properties.\n   * @returns {boolean}\n   */\n  static containsZeroSpan(mergedCellInfo) {\n    return mergedCellInfo.colspan === 0 || mergedCellInfo.rowspan === 0;\n  }\n\n  /**\n   * Check whether the provided merged cell object is to be declared out of bounds of the table.\n   *\n   * @param {object} mergeCell Object containing the `row`, `col`, `rowspan` and `colspan` properties.\n   * @param {number} rowCount Number of rows in the table.\n   * @param {number} columnCount Number of rows in the table.\n   * @returns {boolean}\n   */\n  static isOutOfBounds(mergeCell, rowCount, columnCount) {\n    return mergeCell.row < 0 || mergeCell.col < 0 || mergeCell.row >= rowCount || mergeCell.row + mergeCell.rowspan - 1 >= rowCount || mergeCell.col >= columnCount || mergeCell.col + mergeCell.colspan - 1 >= columnCount;\n  }\n\n  /**\n   * Sanitize (prevent from going outside the boundaries) the merged cell.\n   *\n   * @param {Core} hotInstance The Handsontable instance.\n   */\n  normalize(hotInstance) {\n    const totalRows = hotInstance.countRows();\n    const totalColumns = hotInstance.countCols();\n    if (this.row < 0) {\n      this.row = 0;\n    } else if (this.row > totalRows - 1) {\n      this.row = totalRows - 1;\n    }\n    if (this.col < 0) {\n      this.col = 0;\n    } else if (this.col > totalColumns - 1) {\n      this.col = totalColumns - 1;\n    }\n    if (this.row + this.rowspan > totalRows - 1) {\n      this.rowspan = totalRows - this.row;\n    }\n    if (this.col + this.colspan > totalColumns - 1) {\n      this.colspan = totalColumns - this.col;\n    }\n  }\n\n  /**\n   * Returns `true` if the provided coordinates are inside the merged cell.\n   *\n   * @param {number} row The row index.\n   * @param {number} column The column index.\n   * @returns {boolean}\n   */\n  includes(row, column) {\n    return this.row <= row && this.col <= column && this.row + this.rowspan - 1 >= row && this.col + this.colspan - 1 >= column;\n  }\n\n  /**\n   * Returns `true` if the provided `column` property is within the column span of the merged cell.\n   *\n   * @param {number} column The column index.\n   * @returns {boolean}\n   */\n  includesHorizontally(column) {\n    return this.col <= column && this.col + this.colspan - 1 >= column;\n  }\n\n  /**\n   * Returns `true` if the provided `row` property is within the row span of the merged cell.\n   *\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  includesVertically(row) {\n    return this.row <= row && this.row + this.rowspan - 1 >= row;\n  }\n\n  /**\n   * Shift (and possibly resize, if needed) the merged cell.\n   *\n   * @param {Array} shiftVector 2-element array containing the information on the shifting in the `x` and `y` axis.\n   * @param {number} indexOfChange Index of the preceding change.\n   * @returns {boolean} Returns `false` if the whole merged cell was removed.\n   */\n  shift(shiftVector, indexOfChange) {\n    const shiftValue = shiftVector[0] || shiftVector[1];\n    const shiftedIndex = indexOfChange + Math.abs(shiftVector[0] || shiftVector[1]) - 1;\n    const span = shiftVector[0] ? 'colspan' : 'rowspan';\n    const index = shiftVector[0] ? 'col' : 'row';\n    const changeStart = Math.min(indexOfChange, shiftedIndex);\n    const changeEnd = Math.max(indexOfChange, shiftedIndex);\n    const mergeStart = this[index];\n    const mergeEnd = this[index] + this[span] - 1;\n    if (mergeStart >= indexOfChange) {\n      this[index] += shiftValue;\n    }\n\n    // adding rows/columns\n    if (shiftValue > 0) {\n      if (indexOfChange <= mergeEnd && indexOfChange > mergeStart) {\n        this[span] += shiftValue;\n      }\n\n      // removing rows/columns\n    } else if (shiftValue < 0) {\n      // removing the whole merge\n      if (changeStart <= mergeStart && changeEnd >= mergeEnd) {\n        this.removed = true;\n        return false;\n\n        // removing the merge partially, including the beginning\n      } else if (mergeStart >= changeStart && mergeStart <= changeEnd) {\n        const removedOffset = changeEnd - mergeStart + 1;\n        const preRemovedOffset = Math.abs(shiftValue) - removedOffset;\n        this[index] -= preRemovedOffset + shiftValue;\n        this[span] -= removedOffset;\n\n        // removing the middle part of the merge\n      } else if (mergeStart <= changeStart && mergeEnd >= changeEnd) {\n        this[span] += shiftValue;\n\n        // removing the end part of the merge\n      } else if (mergeStart <= changeStart && mergeEnd >= changeStart && mergeEnd < changeEnd) {\n        const removedPart = mergeEnd - changeStart + 1;\n        this[span] -= removedPart;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if the second provided merged cell is \"farther\" in the provided direction.\n   *\n   * @param {MergedCellCoords} mergedCell The merged cell to check.\n   * @param {string} direction Drag direction.\n   * @returns {boolean|null} `true` if the second provided merged cell is \"farther\".\n   */\n  isFarther(mergedCell, direction) {\n    if (!mergedCell) {\n      return true;\n    }\n    if (direction === 'down') {\n      return mergedCell.row + mergedCell.rowspan - 1 < this.row + this.rowspan - 1;\n    } else if (direction === 'up') {\n      return mergedCell.row > this.row;\n    } else if (direction === 'right') {\n      return mergedCell.col + mergedCell.colspan - 1 < this.col + this.colspan - 1;\n    } else if (direction === 'left') {\n      return mergedCell.col > this.col;\n    }\n    return null;\n  }\n\n  /**\n   * Get the bottom row index of the merged cell.\n   *\n   * @returns {number}\n   */\n  getLastRow() {\n    return this.row + this.rowspan - 1;\n  }\n\n  /**\n   * Get the rightmost column index of the merged cell.\n   *\n   * @returns {number}\n   */\n  getLastColumn() {\n    return this.col + this.colspan - 1;\n  }\n\n  /**\n   * Get the range coordinates of the merged cell.\n   *\n   * @returns {CellRange}\n   */\n  getRange() {\n    return this.cellRangeFactory(this.cellCoordsFactory(this.row, this.col), this.cellCoordsFactory(this.row, this.col), this.cellCoordsFactory(this.getLastRow(), this.getLastColumn()));\n  }\n}\nexport default MergedCellCoords;", "/**\n * Apply the `colspan`/`rowspan` properties.\n *\n * @param {HTMLElement} TD The soon-to-be-modified cell.\n * @param {MergedCellCoords} mergedCellInfo The merged cell in question.\n * @param {number} row Row index.\n * @param {number} col Column index.\n */\nexport function applySpanProperties(TD, mergedCellInfo, row, col) {\n  if (mergedCellInfo) {\n    if (mergedCellInfo.row === row && mergedCellInfo.col === col) {\n      TD.setAttribute('rowspan', mergedCellInfo.rowspan.toString());\n      TD.setAttribute('colspan', mergedCellInfo.colspan.toString());\n    } else {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = 'none';\n    }\n  } else {\n    TD.removeAttribute('rowspan');\n    TD.removeAttribute('colspan');\n    TD.style.display = '';\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport MergedCellCoords from \"./cellCoords.mjs\";\nimport { rangeEach, rangeEachReverse } from \"../../helpers/number.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { applySpanProperties } from \"./utils.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\n/**\n * Defines a container object for the merged cells.\n *\n * @private\n * @class MergedCellsCollection\n */\nclass MergedCellsCollection {\n  constructor(mergeCellsPlugin) {\n    /**\n     * Reference to the Merge Cells plugin.\n     *\n     * @type {MergeCells}\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Array of merged cells.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"mergedCells\", []);\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Handsontable}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    this.plugin = mergeCellsPlugin;\n    this.hot = mergeCellsPlugin.hot;\n  }\n\n  /**\n   * Get a warning message for when the declared merged cell data overlaps already existing merged cells.\n   *\n   * @param {object} newMergedCell Object containg information about the merged cells that was about to be added.\n   * @returns {string}\n   */\n  static IS_OVERLAPPING_WARNING(newMergedCell) {\n    return toSingleLine`The merged cell declared at [${newMergedCell.row}, ${newMergedCell.col}], overlaps\\x20\n      with the other declared merged cell. The overlapping merged cell was not added to the table, please\\x20\n      fix your setup.`;\n  }\n\n  /**\n   * Get a merged cell from the container, based on the provided arguments. You can provide either the \"starting coordinates\"\n   * of a merged cell, or any coordinates from the body of the merged cell.\n   *\n   * @param {number} row Row index.\n   * @param {number} column Column index.\n   * @returns {MergedCellCoords|boolean} Returns a wanted merged cell on success and `false` on failure.\n   */\n  get(row, column) {\n    const mergedCells = this.mergedCells;\n    let result = false;\n    arrayEach(mergedCells, mergedCell => {\n      if (mergedCell.row <= row && mergedCell.row + mergedCell.rowspan - 1 >= row && mergedCell.col <= column && mergedCell.col + mergedCell.colspan - 1 >= column) {\n        result = mergedCell;\n        return false;\n      }\n      return true;\n    });\n    return result;\n  }\n\n  /**\n   * Get a merged cell containing the provided range.\n   *\n   * @param {CellRange|object} range The range to search merged cells for.\n   * @returns {MergedCellCoords|boolean}\n   */\n  getByRange(range) {\n    const mergedCells = this.mergedCells;\n    let result = false;\n    arrayEach(mergedCells, mergedCell => {\n      if (mergedCell.row <= range.from.row && mergedCell.row + mergedCell.rowspan - 1 >= range.to.row && mergedCell.col <= range.from.col && mergedCell.col + mergedCell.colspan - 1 >= range.to.col) {\n        result = mergedCell;\n        return result;\n      }\n      return true;\n    });\n    return result;\n  }\n\n  /**\n   * Get a merged cell contained in the provided range.\n   *\n   * @param {CellRange|object} range The range to search merged cells in.\n   * @param {boolean} [countPartials=false] If set to `true`, all the merged cells overlapping the range will be taken into calculation.\n   * @returns {Array|boolean} Array of found merged cells of `false` if none were found.\n   */\n  getWithinRange(range) {\n    let countPartials = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const mergedCells = this.mergedCells;\n    const foundMergedCells = [];\n    let testedRange = range;\n    if (!testedRange.includesRange) {\n      const from = this.hot._createCellCoords(testedRange.from.row, testedRange.from.col);\n      const to = this.hot._createCellCoords(testedRange.to.row, testedRange.to.col);\n      testedRange = this.hot._createCellRange(from, from, to);\n    }\n    arrayEach(mergedCells, mergedCell => {\n      const mergedCellTopLeft = this.hot._createCellCoords(mergedCell.row, mergedCell.col);\n      const mergedCellBottomRight = this.hot._createCellCoords(mergedCell.row + mergedCell.rowspan - 1, mergedCell.col + mergedCell.colspan - 1);\n      const mergedCellRange = this.hot._createCellRange(mergedCellTopLeft, mergedCellTopLeft, mergedCellBottomRight);\n      if (countPartials) {\n        if (testedRange.overlaps(mergedCellRange)) {\n          foundMergedCells.push(mergedCell);\n        }\n      } else if (testedRange.includesRange(mergedCellRange)) {\n        foundMergedCells.push(mergedCell);\n      }\n    });\n    return foundMergedCells.length ? foundMergedCells : false;\n  }\n\n  /**\n   * Add a merged cell to the container.\n   *\n   * @param {object} mergedCellInfo The merged cell information object. Has to contain `row`, `col`, `colspan` and `rowspan` properties.\n   * @returns {MergedCellCoords|boolean} Returns the new merged cell on success and `false` on failure.\n   */\n  add(mergedCellInfo) {\n    const mergedCells = this.mergedCells;\n    const row = mergedCellInfo.row;\n    const column = mergedCellInfo.col;\n    const rowspan = mergedCellInfo.rowspan;\n    const colspan = mergedCellInfo.colspan;\n    const newMergedCell = new MergedCellCoords(row, column, rowspan, colspan, this.hot._createCellCoords, this.hot._createCellRange);\n    const alreadyExists = this.get(row, column);\n    const isOverlapping = this.isOverlapping(newMergedCell);\n    if (!alreadyExists && !isOverlapping) {\n      if (this.hot) {\n        newMergedCell.normalize(this.hot);\n      }\n      mergedCells.push(newMergedCell);\n      return newMergedCell;\n    }\n    warn(MergedCellsCollection.IS_OVERLAPPING_WARNING(newMergedCell));\n    return false;\n  }\n\n  /**\n   * Remove a merged cell from the container. You can provide either the \"starting coordinates\"\n   * of a merged cell, or any coordinates from the body of the merged cell.\n   *\n   * @param {number} row Row index.\n   * @param {number} column Column index.\n   * @returns {MergedCellCoords|boolean} Returns the removed merged cell on success and `false` on failure.\n   */\n  remove(row, column) {\n    const mergedCells = this.mergedCells;\n    const wantedCollection = this.get(row, column);\n    const wantedCollectionIndex = wantedCollection ? this.mergedCells.indexOf(wantedCollection) : -1;\n    if (wantedCollection && wantedCollectionIndex !== -1) {\n      mergedCells.splice(wantedCollectionIndex, 1);\n      return wantedCollection;\n    }\n    return false;\n  }\n\n  /**\n   * Clear all the merged cells.\n   */\n  clear() {\n    const mergedCells = this.mergedCells;\n    const mergedCellParentsToClear = [];\n    const hiddenCollectionElements = [];\n    arrayEach(mergedCells, mergedCell => {\n      const TD = this.hot.getCell(mergedCell.row, mergedCell.col);\n      if (TD) {\n        mergedCellParentsToClear.push([TD, this.get(mergedCell.row, mergedCell.col), mergedCell.row, mergedCell.col]);\n      }\n    });\n    this.mergedCells.length = 0;\n    arrayEach(mergedCellParentsToClear, (mergedCell, i) => {\n      rangeEach(0, mergedCell.rowspan - 1, j => {\n        rangeEach(0, mergedCell.colspan - 1, k => {\n          if (k !== 0 || j !== 0) {\n            const TD = this.hot.getCell(mergedCell.row + j, mergedCell.col + k);\n            if (TD) {\n              hiddenCollectionElements.push([TD, null, null, null]);\n            }\n          }\n        });\n      });\n      mergedCellParentsToClear[i][1] = null;\n    });\n    arrayEach(mergedCellParentsToClear, mergedCellParents => {\n      applySpanProperties(...mergedCellParents);\n    });\n    arrayEach(hiddenCollectionElements, hiddenCollectionElement => {\n      applySpanProperties(...hiddenCollectionElement);\n    });\n  }\n\n  /**\n   * Check if the provided merged cell overlaps with the others in the container.\n   *\n   * @param {MergedCellCoords} mergedCell The merged cell to check against all others in the container.\n   * @returns {boolean} `true` if the provided merged cell overlaps with the others, `false` otherwise.\n   */\n  isOverlapping(mergedCell) {\n    const mergedCellRange = this.hot._createCellRange(this.hot._createCellCoords(0, 0), this.hot._createCellCoords(mergedCell.row, mergedCell.col), this.hot._createCellCoords(mergedCell.row + mergedCell.rowspan - 1, mergedCell.col + mergedCell.colspan - 1));\n    let result = false;\n    arrayEach(this.mergedCells, col => {\n      const currentRange = this.hot._createCellRange(this.hot._createCellCoords(0, 0), this.hot._createCellCoords(col.row, col.col), this.hot._createCellCoords(col.row + col.rowspan - 1, col.col + col.colspan - 1));\n      if (currentRange.overlaps(mergedCellRange)) {\n        result = true;\n        return false;\n      }\n      return true;\n    });\n    return result;\n  }\n\n  /**\n   * Check whether the provided row/col coordinates direct to a first not hidden cell within merge area.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  isFirstRenderableMergedCell(row, column) {\n    const mergeParent = this.get(row, column);\n\n    // Return if row and column indexes are within merge area and if they are first rendered indexes within the area.\n    return mergeParent && this.hot.rowIndexMapper.getNearestNotHiddenIndex(mergeParent.row, 1) === row && this.hot.columnIndexMapper.getNearestNotHiddenIndex(mergeParent.col, 1) === column;\n  }\n\n  /**\n   * Get the first renderable coords of the merged cell at the provided coordinates.\n   *\n   * @param {number} row Visual row index.\n   * @param {number} column Visual column index.\n   * @returns {CellCoords} A `CellCoords` object with the coordinates to the first renderable cell within the\n   *                        merged cell.\n   */\n  getFirstRenderableCoords(row, column) {\n    const mergeParent = this.get(row, column);\n    if (!mergeParent || this.isFirstRenderableMergedCell(row, column)) {\n      return this.hot._createCellCoords(row, column);\n    }\n    const firstRenderableRow = this.hot.rowIndexMapper.getNearestNotHiddenIndex(mergeParent.row, 1);\n    const firstRenderableColumn = this.hot.columnIndexMapper.getNearestNotHiddenIndex(mergeParent.col, 1);\n    return this.hot._createCellCoords(firstRenderableRow, firstRenderableColumn);\n  }\n\n  /**\n   * Shift the merged cell in the direction and by an offset defined in the arguments.\n   *\n   * @param {string} direction `right`, `left`, `up` or `down`.\n   * @param {number} index Index where the change, which caused the shifting took place.\n   * @param {number} count Number of rows/columns added/removed in the preceding action.\n   */\n  shiftCollections(direction, index, count) {\n    const shiftVector = [0, 0];\n    switch (direction) {\n      case 'right':\n        shiftVector[0] += count;\n        break;\n      case 'left':\n        shiftVector[0] -= count;\n        break;\n      case 'down':\n        shiftVector[1] += count;\n        break;\n      case 'up':\n        shiftVector[1] -= count;\n        break;\n      default:\n    }\n    arrayEach(this.mergedCells, currentMerge => {\n      currentMerge.shift(shiftVector, index);\n    });\n    rangeEachReverse(this.mergedCells.length - 1, 0, i => {\n      const currentMerge = this.mergedCells[i];\n      if (currentMerge && currentMerge.removed) {\n        this.mergedCells.splice(this.mergedCells.indexOf(currentMerge), 1);\n      }\n    });\n  }\n}\nexport default MergedCellsCollection;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\n/**\n * Class responsible for all of the Autofill-related operations on merged cells.\n *\n * @private\n * @class AutofillCalculations\n */\nclass AutofillCalculations {\n  constructor(plugin) {\n    /**\n     * Reference to the Merge Cells plugin.\n     *\n     * @type {MergeCells}\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Reference to the MergedCellsCollection class instance.\n     *\n     * @type {MergedCellsCollection}\n     */\n    _defineProperty(this, \"mergedCellsCollection\", void 0);\n    /**\n     * Cache of the currently processed autofill data.\n     *\n     * @private\n     * @type {object}\n     */\n    _defineProperty(this, \"currentFillData\", null);\n    this.plugin = plugin;\n    this.mergedCellsCollection = this.plugin.mergedCellsCollection;\n  }\n\n  /**\n   * Correct the provided selection area, so it's not selecting only a part of a merged cell.\n   *\n   * @param {Array} selectionArea The selection to correct.\n   */\n  correctSelectionAreaSize(selectionArea) {\n    if (selectionArea[0] === selectionArea[2] && selectionArea[1] === selectionArea[3]) {\n      const mergedCell = this.mergedCellsCollection.get(selectionArea[0], selectionArea[1]);\n      if (mergedCell) {\n        selectionArea[2] = selectionArea[0] + mergedCell.rowspan - 1;\n        selectionArea[3] = selectionArea[1] + mergedCell.colspan - 1;\n      }\n    }\n  }\n\n  /**\n   * Get the direction of the autofill process.\n   *\n   * @param {Array} selectionArea The selection area.\n   * @param {Array} finalArea The final area (base + drag).\n   * @returns {string} `up`, `down`, `left` or `right`.\n   */\n  getDirection(selectionArea, finalArea) {\n    let direction = null;\n    if (finalArea[0] === selectionArea[0] && finalArea[1] === selectionArea[1] && finalArea[3] === selectionArea[3]) {\n      direction = 'down';\n    } else if (finalArea[2] === selectionArea[2] && finalArea[1] === selectionArea[1] && finalArea[3] === selectionArea[3]) {\n      direction = 'up';\n    } else if (finalArea[1] === selectionArea[1] && finalArea[2] === selectionArea[2]) {\n      direction = 'right';\n    } else {\n      direction = 'left';\n    }\n    return direction;\n  }\n\n  /**\n   * Snap the drag area to the farthest merged cell, so it won't clip any of the merged cells.\n   *\n   * @param {Array} baseArea The base selected area.\n   * @param {Array} dragArea The drag area.\n   * @param {string} dragDirection The autofill drag direction.\n   * @param {Array} foundMergedCells MergeCellCoords found in the base selection area.\n   * @returns {Array} The new drag area.\n   */\n  snapDragArea(baseArea, dragArea, dragDirection, foundMergedCells) {\n    const newDragArea = dragArea.slice(0);\n    const fillSize = this.getAutofillSize(baseArea, dragArea, dragDirection);\n    const [baseAreaStartRow, baseAreaStartColumn, baseAreaEndRow, baseAreaEndColumn] = baseArea;\n    const verticalDirection = ['up', 'down'].indexOf(dragDirection) > -1;\n    const fullCycle = verticalDirection ? baseAreaEndRow - baseAreaStartRow + 1 : baseAreaEndColumn - baseAreaStartColumn + 1;\n    const fulls = Math.floor(fillSize / fullCycle) * fullCycle;\n    const partials = fillSize - fulls;\n    const farthestCollection = this.getFarthestCollection(baseArea, dragArea, dragDirection, foundMergedCells);\n    if (farthestCollection) {\n      if (dragDirection === 'down') {\n        const fill = farthestCollection.row + farthestCollection.rowspan - baseAreaStartRow - partials;\n        const newLimit = newDragArea[2] + fill;\n        if (newLimit >= this.plugin.hot.countRows()) {\n          newDragArea[2] -= partials;\n        } else {\n          newDragArea[2] += partials ? fill : 0;\n        }\n      } else if (dragDirection === 'right') {\n        const fill = farthestCollection.col + farthestCollection.colspan - baseAreaStartColumn - partials;\n        const newLimit = newDragArea[3] + fill;\n        if (newLimit >= this.plugin.hot.countCols()) {\n          newDragArea[3] -= partials;\n        } else {\n          newDragArea[3] += partials ? fill : 0;\n        }\n      } else if (dragDirection === 'up') {\n        const fill = baseAreaEndRow - partials - farthestCollection.row + 1;\n        const newLimit = newDragArea[0] + fill;\n        if (newLimit < 0) {\n          newDragArea[0] += partials;\n        } else {\n          newDragArea[0] -= partials ? fill : 0;\n        }\n      } else if (dragDirection === 'left') {\n        const fill = baseAreaEndColumn - partials - farthestCollection.col + 1;\n        const newLimit = newDragArea[1] + fill;\n        if (newLimit < 0) {\n          newDragArea[1] += partials;\n        } else {\n          newDragArea[1] -= partials ? fill : 0;\n        }\n      }\n    }\n    this.updateCurrentFillCache({\n      baseArea,\n      dragDirection,\n      foundMergedCells,\n      fillSize,\n      dragArea: newDragArea,\n      cycleLength: fullCycle\n    });\n    return newDragArea;\n  }\n\n  /**\n   * Update the current fill cache with the provided object.\n   *\n   * @private\n   * @param {object} updateObject The current filled object cache.\n   */\n  updateCurrentFillCache(updateObject) {\n    if (!this.currentFillData) {\n      this.currentFillData = {};\n    }\n    extend(this.currentFillData, updateObject);\n  }\n\n  /**\n   * Get the \"length\" of the drag area.\n   *\n   * @private\n   * @param {Array} baseArea The base selection area.\n   * @param {Array} dragArea The drag area (containing the base area).\n   * @param {string} direction The drag direction.\n   * @returns {number|null} The \"length\" (height or width, depending on the direction) of the drag.\n   */\n  getAutofillSize(baseArea, dragArea, direction) {\n    const [baseAreaStartRow, baseAreaStartColumn, baseAreaEndRow, baseAreaEndColumn] = baseArea;\n    const [dragAreaStartRow, dragAreaStartColumn, dragAreaEndRow, dragAreaEndColumn] = dragArea;\n    switch (direction) {\n      case 'up':\n        return baseAreaStartRow - dragAreaStartRow;\n      case 'down':\n        return dragAreaEndRow - baseAreaEndRow;\n      case 'left':\n        return baseAreaStartColumn - dragAreaStartColumn;\n      case 'right':\n        return dragAreaEndColumn - baseAreaEndColumn;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Trim the default drag area (containing the selection area) to the drag-only area.\n   *\n   * @private\n   * @param {Array} baseArea The base selection area.\n   * @param {Array} dragArea The base selection area extended by the drag area.\n   * @param {string} direction Drag direction.\n   * @returns {Array|null} Array representing the drag area coordinates.\n   */\n  getDragArea(baseArea, dragArea, direction) {\n    const [baseAreaStartRow, baseAreaStartColumn, baseAreaEndRow, baseAreaEndColumn] = baseArea;\n    const [dragAreaStartRow, dragAreaStartColumn, dragAreaEndRow, dragAreaEndColumn] = dragArea;\n    switch (direction) {\n      case 'up':\n        return [dragAreaStartRow, dragAreaStartColumn, baseAreaStartRow - 1, baseAreaEndColumn];\n      case 'down':\n        return [baseAreaEndRow + 1, baseAreaStartColumn, dragAreaEndRow, baseAreaEndColumn];\n      case 'left':\n        return [dragAreaStartRow, dragAreaStartColumn, baseAreaEndRow, baseAreaStartColumn - 1];\n      case 'right':\n        return [baseAreaStartRow, baseAreaEndColumn + 1, dragAreaEndRow, dragAreaEndColumn];\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get the to-be-farthest merged cell in the newly filled area.\n   *\n   * @private\n   * @param {Array} baseArea The base selection area.\n   * @param {Array} dragArea The drag area (containing the base area).\n   * @param {string} direction The drag direction.\n   * @param {Array} mergedCellArray Array of the merged cells found in the base area.\n   * @returns {MergedCellCoords|null}\n   */\n  getFarthestCollection(baseArea, dragArea, direction, mergedCellArray) {\n    const [baseAreaStartRow, baseAreaStartColumn, baseAreaEndRow, baseAreaEndColumn] = baseArea;\n    const verticalDirection = ['up', 'down'].indexOf(direction) > -1;\n    const baseEnd = verticalDirection ? baseAreaEndRow : baseAreaEndColumn;\n    const baseStart = verticalDirection ? baseAreaStartRow : baseAreaStartColumn;\n    const fillSize = this.getAutofillSize(baseArea, dragArea, direction);\n    const fullCycle = verticalDirection ? baseAreaEndRow - baseAreaStartRow + 1 : baseAreaEndColumn - baseAreaStartColumn + 1;\n    const fulls = Math.floor(fillSize / fullCycle) * fullCycle;\n    const partials = fillSize - fulls;\n    let inclusionFunctionName = null;\n    let farthestCollection = null;\n    let endOfDragRecreationIndex = null;\n    switch (direction) {\n      case 'up':\n        inclusionFunctionName = 'includesVertically';\n        endOfDragRecreationIndex = baseEnd - partials + 1;\n        break;\n      case 'left':\n        inclusionFunctionName = 'includesHorizontally';\n        endOfDragRecreationIndex = baseEnd - partials + 1;\n        break;\n      case 'down':\n        inclusionFunctionName = 'includesVertically';\n        endOfDragRecreationIndex = baseStart + partials - 1;\n        break;\n      case 'right':\n        inclusionFunctionName = 'includesHorizontally';\n        endOfDragRecreationIndex = baseStart + partials - 1;\n        break;\n      default:\n    }\n    arrayEach(mergedCellArray, currentCollection => {\n      if (currentCollection[inclusionFunctionName](endOfDragRecreationIndex) && currentCollection.isFarther(farthestCollection, direction)) {\n        farthestCollection = currentCollection;\n      }\n    });\n    return farthestCollection;\n  }\n\n  /**\n   * Recreate the merged cells after the autofill process.\n   *\n   * @param {Array} changes Changes made.\n   */\n  recreateAfterDataPopulation(changes) {\n    if (!this.currentFillData) {\n      return;\n    }\n    const fillRange = this.getRangeFromChanges(changes);\n    const foundMergedCells = this.currentFillData.foundMergedCells;\n    const dragDirection = this.currentFillData.dragDirection;\n    const inBounds = (current, offset) => {\n      switch (dragDirection) {\n        case 'up':\n          return current.row - offset >= fillRange.from.row;\n        case 'down':\n          return current.row + current.rowspan - 1 + offset <= fillRange.to.row;\n        case 'left':\n          return current.col - offset >= fillRange.from.column;\n        case 'right':\n          return current.col + current.colspan - 1 + offset <= fillRange.to.column;\n        default:\n          return null;\n      }\n    };\n    let fillOffset = 0;\n    let current = null;\n    let multiplier = 1;\n    do {\n      for (let j = 0; j < foundMergedCells.length; j += 1) {\n        current = foundMergedCells[j];\n        fillOffset = multiplier * this.currentFillData.cycleLength;\n        if (inBounds(current, fillOffset)) {\n          switch (dragDirection) {\n            case 'up':\n              this.plugin.mergedCellsCollection.add({\n                row: current.row - fillOffset,\n                rowspan: current.rowspan,\n                col: current.col,\n                colspan: current.colspan\n              });\n              break;\n            case 'down':\n              this.plugin.mergedCellsCollection.add({\n                row: current.row + fillOffset,\n                rowspan: current.rowspan,\n                col: current.col,\n                colspan: current.colspan\n              });\n              break;\n            case 'left':\n              this.plugin.mergedCellsCollection.add({\n                row: current.row,\n                rowspan: current.rowspan,\n                col: current.col - fillOffset,\n                colspan: current.colspan\n              });\n              break;\n            case 'right':\n              this.plugin.mergedCellsCollection.add({\n                row: current.row,\n                rowspan: current.rowspan,\n                col: current.col + fillOffset,\n                colspan: current.colspan\n              });\n              break;\n            default:\n          }\n        }\n        if (j === foundMergedCells.length - 1) {\n          multiplier += 1;\n        }\n      }\n    } while (inBounds(current, fillOffset));\n    this.currentFillData = null;\n    this.plugin.hot.render();\n    if (foundMergedCells.length > 0) {\n      this.plugin.ifChromeForceRepaint();\n    }\n  }\n\n  /**\n   * Get the drag range from the changes made.\n   *\n   * @private\n   * @param {Array} changes The changes made.\n   * @returns {object} Object with `from` and `to` properties, both containing `row` and `column` keys.\n   */\n  getRangeFromChanges(changes) {\n    const rows = {\n      min: null,\n      max: null\n    };\n    const columns = {\n      min: null,\n      max: null\n    };\n    arrayEach(changes, change => {\n      const rowIndex = change[0];\n      const columnIndex = this.plugin.hot.propToCol(change[1]);\n      if (rows.min === null || rowIndex < rows.min) {\n        rows.min = rowIndex;\n      }\n      if (rows.max === null || rowIndex > rows.max) {\n        rows.max = rowIndex;\n      }\n      if (columns.min === null || columnIndex < columns.min) {\n        columns.min = columnIndex;\n      }\n      if (columns.max === null || columnIndex > columns.max) {\n        columns.max = columnIndex;\n      }\n    });\n    return {\n      from: {\n        row: rows.min,\n        column: columns.min\n      },\n      to: {\n        row: rows.max,\n        column: columns.max\n      }\n    };\n  }\n\n  /**\n   * Check if the drag area contains any merged cells.\n   *\n   * @param {Array} baseArea The base selection area.\n   * @param {Array} fullArea The base area extended by the drag area.\n   * @param {string} direction Drag direction.\n   * @returns {boolean}\n   */\n  dragAreaOverlapsCollections(baseArea, fullArea, direction) {\n    const dragArea = this.getDragArea(baseArea, fullArea, direction);\n    const [dragAreaStartRow, dragAreaStartColumn, dragAreaEndRow, dragAreaEndColumn] = dragArea;\n    const topLeft = this.plugin.hot._createCellCoords(dragAreaStartRow, dragAreaStartColumn);\n    const bottomRight = this.plugin.hot._createCellCoords(dragAreaEndRow, dragAreaEndColumn);\n    const dragRange = this.plugin.hot._createCellRange(topLeft, topLeft, bottomRight);\n    return !!this.mergedCellsCollection.getWithinRange(dragRange, true);\n  }\n}\nexport default AutofillCalculations;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Class responsible for all of the Selection-related operations on merged cells.\n *\n * @private\n * @class SelectionCalculations\n */\nclass SelectionCalculations {\n  constructor(plugin) {\n    /**\n     * Reference to the Merge Cells plugin.\n     *\n     * @type {MergeCells}\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Reference to the Handsontable instance.\n     *\n     * @type {Handsontable}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Class name used for fully selected merged cells.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"fullySelectedMergedCellClassName\", 'fullySelectedMergedCell');\n    this.plugin = plugin;\n    this.hot = plugin.hot;\n  }\n\n  /**\n   * \"Snap\" the delta value according to defined merged cells. (In other words, compensate the rowspan -\n   * e.g. Going up with `delta.row = -1` over a merged cell with `rowspan = 3`, `delta.row` should change to `-3`.).\n   *\n   * @param {object} delta The delta object containing `row` and `col` properties.\n   * @param {CellRange} selectionRange The selection range.\n   * @param {object} mergedCell A merged cell object.\n   */\n  snapDelta(delta, selectionRange, mergedCell) {\n    const cellCoords = selectionRange.to;\n    const newRow = cellCoords.row + delta.row;\n    const newColumn = cellCoords.col + delta.col;\n    if (delta.row) {\n      this.jumpOverMergedCell(delta, mergedCell, newRow);\n    } else if (delta.col) {\n      this.jumpOverMergedCell(delta, mergedCell, newColumn);\n    }\n  }\n\n  /**\n   * \"Jump\" over the merged cell (compensate for the indexes within the merged cell to get past it).\n   *\n   * @private\n   * @param {object} delta The delta object.\n   * @param {MergedCellCoords} mergedCell The merge cell object.\n   * @param {number} newIndex New row/column index, created with the delta.\n   */\n  jumpOverMergedCell(delta, mergedCell, newIndex) {\n    let flatDelta = delta.row || delta.col;\n    let includesIndex = null;\n    let firstIndex = null;\n    let lastIndex = null;\n    if (delta.row) {\n      includesIndex = mergedCell.includesVertically(newIndex);\n      firstIndex = mergedCell.row;\n      lastIndex = mergedCell.getLastRow();\n    } else if (delta.col) {\n      includesIndex = mergedCell.includesHorizontally(newIndex);\n      firstIndex = mergedCell.col;\n      lastIndex = mergedCell.getLastColumn();\n    }\n    if (flatDelta === 0) {\n      return;\n    } else if (flatDelta > 0) {\n      if (includesIndex && newIndex !== firstIndex) {\n        flatDelta += lastIndex - newIndex + 1;\n      }\n    } else if (includesIndex && newIndex !== lastIndex) {\n      flatDelta -= newIndex - firstIndex + 1;\n    }\n    if (delta.row) {\n      delta.row = flatDelta;\n    } else if (delta.col) {\n      delta.col = flatDelta;\n    }\n  }\n\n  /**\n   * Get a selection range with `to` property incremented by the provided delta.\n   *\n   * @param {CellRange} oldSelectionRange The base selection range.\n   * @param {object} delta The delta object with `row` and `col` properties.\n   * @returns {CellRange} A new `CellRange` object.\n   */\n  getUpdatedSelectionRange(oldSelectionRange, delta) {\n    return this.hot._createCellRange(oldSelectionRange.highlight, oldSelectionRange.from, this.hot._createCellCoords(oldSelectionRange.to.row + delta.row, oldSelectionRange.to.col + delta.col));\n  }\n\n  /**\n   * Generate an additional class name for the entirely-selected merged cells.\n   *\n   * @param {number} currentRow Visual row index of the currently processed cell.\n   * @param {number} currentColumn Visual column index of the currently cell.\n   * @param {Array} cornersOfSelection Array of the current selection in a form of `[startRow, startColumn, endRow, endColumn]`.\n   * @param {number|undefined} layerLevel Number indicating which layer of selection is currently processed.\n   * @returns {string|undefined} A `String`, which will act as an additional `className` to be added to the currently processed cell.\n   */\n  getSelectedMergedCellClassName(currentRow, currentColumn, cornersOfSelection, layerLevel) {\n    const startRow = Math.min(cornersOfSelection[0], cornersOfSelection[2]);\n    const startColumn = Math.min(cornersOfSelection[1], cornersOfSelection[3]);\n    const endRow = Math.max(cornersOfSelection[0], cornersOfSelection[2]);\n    const endColumn = Math.max(cornersOfSelection[1], cornersOfSelection[3]);\n    if (layerLevel === undefined) {\n      return;\n    }\n    const isFirstRenderableMergedCell = this.plugin.mergedCellsCollection.isFirstRenderableMergedCell(currentRow, currentColumn);\n\n    // We add extra classes just to the first renderable merged cell.\n    if (!isFirstRenderableMergedCell) {\n      return;\n    }\n    const mergedCell = this.plugin.mergedCellsCollection.get(currentRow, currentColumn);\n    if (!mergedCell) {\n      return;\n    }\n    const mergeRowEnd = mergedCell.getLastRow();\n    const mergeColumnEnd = mergedCell.getLastColumn();\n    const fullMergeAreaWithinSelection = startRow <= mergedCell.row && startColumn <= mergedCell.col && endRow >= mergeRowEnd && endColumn >= mergeColumnEnd;\n    if (fullMergeAreaWithinSelection) {\n      return `${this.fullySelectedMergedCellClassName}-${layerLevel}`;\n    } else if (this.plugin.selectionCalculations.isMergeCellFullySelected(mergedCell, this.plugin.hot.getSelectedRange())) {\n      // eslint-disable-line max-len\n      return `${this.fullySelectedMergedCellClassName}-multiple`;\n    }\n  }\n\n  /**\n   * Check if the provided merged cell is fully selected (by one or many layers of selection).\n   *\n   * @param {MergedCellCoords} mergedCell The merged cell to be processed.\n   * @param {CellRange[]} selectionRangesArray Array of selection ranges.\n   * @returns {boolean}\n   */\n  isMergeCellFullySelected(mergedCell, selectionRangesArray) {\n    const mergedCellIndividualCoords = [];\n    if (!selectionRangesArray || !mergedCell) {\n      return false;\n    }\n    for (let r = 0; r < mergedCell.rowspan; r += 1) {\n      for (let c = 0; c < mergedCell.colspan; c += 1) {\n        mergedCellIndividualCoords.push(this.hot._createCellCoords(mergedCell.row + r, mergedCell.col + c));\n      }\n    }\n    for (let i = 0; i < mergedCellIndividualCoords.length; i += 1) {\n      const insideSelections = [];\n      for (let s = 0; s < selectionRangesArray.length; s += 1) {\n        insideSelections[s] = selectionRangesArray[s].includes(mergedCellIndividualCoords[i]);\n      }\n      if (!insideSelections.includes(true)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Generate an array of the entirely-selected merged cells' class names.\n   *\n   * @returns {string[]} An `Array` of `String`s. Each of these strings will act like class names to be removed from all the cells in the table.\n   */\n  getSelectedMergedCellClassNameToRemove() {\n    const classNames = [];\n    for (let i = 0; i <= 7; i += 1) {\n      classNames.push(`${this.fullySelectedMergedCellClassName}-${i}`);\n    }\n    classNames.push(`${this.fullySelectedMergedCellClassName}-multiple`);\n    return classNames;\n  }\n}\nexport default SelectionCalculations;", "import * as C from \"../../../i18n/constants.mjs\";\nimport MergedCellCoords from \"../cellCoords.mjs\";\n/**\n * @param {*} plugin The plugin instance.\n * @returns {object}\n */\nexport default function toggleMergeItem(plugin) {\n  return {\n    key: 'mergeCells',\n    name() {\n      const sel = this.getSelectedLast();\n      if (sel) {\n        const info = plugin.mergedCellsCollection.get(sel[0], sel[1]);\n        if (info.row === sel[0] && info.col === sel[1] && info.row + info.rowspan - 1 === sel[2] && info.col + info.colspan - 1 === sel[3]) {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_UNMERGE_CELLS);\n        }\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_MERGE_CELLS);\n    },\n    callback() {\n      plugin.toggleMergeOnSelection();\n    },\n    disabled() {\n      const sel = this.getSelectedLast();\n      if (!sel) {\n        return true;\n      }\n      const isSingleCell = MergedCellCoords.isSingleCell({\n        row: sel[0],\n        col: sel[1],\n        rowspan: sel[2] - sel[0] + 1,\n        colspan: sel[3] - sel[1] + 1\n      });\n      return isSingleCell || this.selection.isSelectedByCorner();\n    },\n    hidden: false\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport MergedCellsCollection from \"./cellsCollection.mjs\";\nimport MergedCellCoords from \"./cellCoords.mjs\";\nimport AutofillCalculations from \"./calculations/autofill.mjs\";\nimport SelectionCalculations from \"./calculations/selection.mjs\";\nimport toggleMergeItem from \"./contextMenuItem/toggleMerge.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { isObject, clone } from \"../../helpers/object.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { applySpanProperties } from \"./utils.mjs\";\nimport { getStyle } from \"../../helpers/dom/element.mjs\";\nimport { isChrome } from \"../../helpers/browser.mjs\";\nHooks.getSingleton().register('beforeMergeCells');\nHooks.getSingleton().register('afterMergeCells');\nHooks.getSingleton().register('beforeUnmergeCells');\nHooks.getSingleton().register('afterUnmergeCells');\nexport const PLUGIN_KEY = 'mergeCells';\nexport const PLUGIN_PRIORITY = 150;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin MergeCells\n * @class MergeCells\n *\n * @description\n * Plugin, which allows merging cells in the table (using the initial configuration, API or context menu).\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *  data: getData(),\n *  mergeCells: [\n *    {row: 0, col: 3, rowspan: 3, colspan: 3},\n *    {row: 2, col: 6, rowspan: 2, colspan: 2},\n *    {row: 4, col: 8, rowspan: 3, colspan: 3}\n *  ],\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   mergeCells={[\n *    {row: 0, col: 3, rowspan: 3, colspan: 3},\n *    {row: 2, col: 6, rowspan: 2, colspan: 2},\n *    {row: 4, col: 8, rowspan: 3, colspan: 3}\n *   ]}\n * />\n * ```\n * :::\n */\nvar _lastDesiredCoords = /*#__PURE__*/new WeakMap();\nvar _onAfterInit = /*#__PURE__*/new WeakSet();\nvar _onAfterIsMultipleSelection = /*#__PURE__*/new WeakSet();\nvar _onModifyTransformStart = /*#__PURE__*/new WeakSet();\nvar _onModifyTransformEnd = /*#__PURE__*/new WeakSet();\nvar _onModifyGetCellCoords = /*#__PURE__*/new WeakSet();\nvar _addMergeActionsToContextMenu = /*#__PURE__*/new WeakSet();\nvar _onAfterRenderer = /*#__PURE__*/new WeakSet();\nvar _onBeforeSetRangeStart = /*#__PURE__*/new WeakSet();\nvar _onBeforeSetRangeEnd = /*#__PURE__*/new WeakSet();\nvar _onAfterGetCellMeta = /*#__PURE__*/new WeakSet();\nvar _onAfterViewportRowCalculatorOverride = /*#__PURE__*/new WeakSet();\nvar _onAfterViewportColumnCalculatorOverride = /*#__PURE__*/new WeakSet();\nvar _onModifyAutofillRange = /*#__PURE__*/new WeakSet();\nvar _onAfterCreateCol = /*#__PURE__*/new WeakSet();\nvar _onAfterRemoveCol = /*#__PURE__*/new WeakSet();\nvar _onAfterCreateRow = /*#__PURE__*/new WeakSet();\nvar _onAfterRemoveRow = /*#__PURE__*/new WeakSet();\nvar _onAfterChange = /*#__PURE__*/new WeakSet();\nvar _onBeforeDrawAreaBorders = /*#__PURE__*/new WeakSet();\nvar _onAfterModifyTransformStart = /*#__PURE__*/new WeakSet();\nvar _onAfterDrawSelection = /*#__PURE__*/new WeakSet();\nvar _onBeforeRemoveCellClassNames = /*#__PURE__*/new WeakSet();\nexport class MergeCells extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * `beforeRemoveCellClassNames` hook callback. Used to remove additional class name from all cells in the table.\n     *\n     * @returns {string[]} An `Array` of `String`s. Each of these strings will act like class names to be removed from\n     *   all the cells in the table.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRemoveCellClassNames);\n    /**\n     * `afterDrawSelection` hook callback. Used to add the additional class name for the entirely-selected merged cells.\n     *\n     * @param {number} currentRow Visual row index of the currently processed cell.\n     * @param {number} currentColumn Visual column index of the currently cell.\n     * @param {Array} cornersOfSelection Array of the current selection in a form of `[startRow, startColumn, endRow,\n     *   endColumn]`.\n     * @param {number|undefined} layerLevel Number indicating which layer of selection is currently processed.\n     * @returns {string|undefined} A `String`, which will act as an additional `className` to be added to the currently\n     *   processed cell.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDrawSelection);\n    /**\n     * `afterModifyTransformStart` hook callback. Fixes a problem with navigating through merged cells at the edges of\n     * the table with the <kbd>**Enter**</kbd>/<kbd>**Shift**</kbd>+<kbd>**Enter**</kbd>/<kbd>**Tab**</kbd>/<kbd>**Shift**</kbd>+<kbd>**Tab**</kbd> keys.\n     *\n     * @param {CellCoords} coords Coordinates of the to-be-selected cell.\n     * @param {number} rowTransformDir Row transformation direction (negative value = up, 0 = none, positive value =\n     *   down).\n     * @param {number} colTransformDir Column transformation direction (negative value = up, 0 = none, positive value =\n     *   down).\n     */\n    _classPrivateMethodInitSpec(this, _onAfterModifyTransformStart);\n    /**\n     * `beforeDrawAreaBorders` hook callback.\n     *\n     * @param {Array} corners Visual coordinates of the area corners.\n     * @param {string} className Class name for the area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeDrawAreaBorders);\n    /**\n     * `afterChange` hook callback. Used to propagate merged cells after using Autofill.\n     *\n     * @param {Array} changes The changes array.\n     * @param {string} source Determines the source of the change.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterChange);\n    /**\n     * `afterRemoveRow` hook callback.\n     *\n     * @param {number} row Row index.\n     * @param {number} count Number of removed rows.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRemoveRow);\n    /**\n     * `afterCreateRow` hook callback.\n     *\n     * @param {number} row Row index.\n     * @param {number} count Number of created rows.\n     * @param {string} source Source of change.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCreateRow);\n    /**\n     * `afterRemoveCol` hook callback.\n     *\n     * @param {number} column Column index.\n     * @param {number} count Number of removed columns.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRemoveCol);\n    /**\n     * `afterCreateCol` hook callback.\n     *\n     * @param {number} column Column index.\n     * @param {number} count Number of created columns.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCreateCol);\n    /**\n     * The `modifyAutofillRange` hook callback.\n     *\n     * @param {Array} drag The drag area coordinates.\n     * @param {Array} select The selection information.\n     * @returns {Array} The new drag area.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyAutofillRange);\n    /**\n     * `afterViewportColumnCalculatorOverride` hook callback.\n     *\n     * @param {object} calc The column calculator object.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterViewportColumnCalculatorOverride);\n    /**\n     * `afterViewportRowCalculatorOverride` hook callback.\n     *\n     * @param {object} calc The row calculator object.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterViewportRowCalculatorOverride);\n    /**\n     * The `afterGetCellMeta` hook callback.\n     *\n     * @param {number} row Row index.\n     * @param {number} col Column index.\n     * @param {object} cellProperties The cell properties object.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetCellMeta);\n    /**\n     * `beforeSetRangeEnd` hook callback.\n     * While selecting cells with keyboard or mouse, make sure that rectangular area is expanded to the extent of the\n     * merged cell.\n     *\n     * Note: Please keep in mind that callback may modify both start and end range coordinates by the reference.\n     *\n     * @param {object} coords Cell coords.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeSetRangeEnd);\n    /**\n     * `beforeSetRangeStart` and `beforeSetRangeStartOnly` hook callback.\n     * A selection within merge area should be rewritten to the start of merge area.\n     *\n     * @param {object} coords Cell coords.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeSetRangeStart);\n    /**\n     * `afterRenderer` hook callback.\n     *\n     * @param {HTMLElement} TD The cell to be modified.\n     * @param {number} row Row index.\n     * @param {number} col Visual column index.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRenderer);\n    /**\n     * `afterContextMenuDefaultOptions` hook callback.\n     *\n     * @param {object} defaultOptions The default context menu options.\n     */\n    _classPrivateMethodInitSpec(this, _addMergeActionsToContextMenu);\n    /**\n     * `modifyGetCellCoords` hook callback. Swaps the `getCell` coords with the merged parent coords.\n     *\n     * @param {number} row Row index.\n     * @param {number} column Visual column index.\n     * @returns {Array|undefined} Visual coordinates of the merge.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyGetCellCoords);\n    /**\n     * `modifyTransformEnd` hook callback. Needed to handle \"jumping over\" merged merged cells, while selecting.\n     *\n     * @param {object} delta The transformation delta.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyTransformEnd);\n    /**\n     * `modifyTransformStart` hook callback.\n     *\n     * @param {object} delta The transformation delta.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyTransformStart);\n    /**\n     * Modifies the information on whether the current selection contains multiple cells. The `afterIsMultipleSelection`\n     * hook callback.\n     *\n     * @param {boolean} isMultiple Determines whether the current selection contains multiple cells.\n     * @returns {boolean}\n     */\n    _classPrivateMethodInitSpec(this, _onAfterIsMultipleSelection);\n    /**\n     * `afterInit` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterInit);\n    /**\n     * A container for all the merged cells.\n     *\n     * @private\n     * @type {MergedCellsCollection}\n     */\n    _defineProperty(this, \"mergedCellsCollection\", null);\n    /**\n     * Instance of the class responsible for all the autofill-related calculations.\n     *\n     * @private\n     * @type {AutofillCalculations}\n     */\n    _defineProperty(this, \"autofillCalculations\", null);\n    /**\n     * Instance of the class responsible for the selection-related calculations.\n     *\n     * @private\n     * @type {SelectionCalculations}\n     */\n    _defineProperty(this, \"selectionCalculations\", null);\n    /**\n     * @type {CellCoords}\n     */\n    _classPrivateFieldInitSpec(this, _lastDesiredCoords, {\n      writable: true,\n      value: null\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link MergeCells#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.mergedCellsCollection = new MergedCellsCollection(this);\n    this.autofillCalculations = new AutofillCalculations(this);\n    this.selectionCalculations = new SelectionCalculations(this);\n    this.addHook('afterInit', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterInit, _onAfterInit2).call(_this, ...args);\n    });\n    this.addHook('modifyTransformStart', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onModifyTransformStart, _onModifyTransformStart2).call(_this, ...args);\n    });\n    this.addHook('afterModifyTransformStart', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterModifyTransformStart, _onAfterModifyTransformStart2).call(_this, ...args);\n    });\n    this.addHook('modifyTransformEnd', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _classPrivateMethodGet(_this, _onModifyTransformEnd, _onModifyTransformEnd2).call(_this, ...args);\n    });\n    this.addHook('modifyGetCellCoords', function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      return _classPrivateMethodGet(_this, _onModifyGetCellCoords, _onModifyGetCellCoords2).call(_this, ...args);\n    });\n    this.addHook('beforeSetRangeStart', function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeSetRangeStart, _onBeforeSetRangeStart2).call(_this, ...args);\n    });\n    this.addHook('beforeSetRangeStartOnly', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeSetRangeStart, _onBeforeSetRangeStart2).call(_this, ...args);\n    });\n    this.addHook('beforeSetRangeEnd', function () {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeSetRangeEnd, _onBeforeSetRangeEnd2).call(_this, ...args);\n    });\n    this.addHook('afterIsMultipleSelection', function () {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      return _classPrivateMethodGet(_this, _onAfterIsMultipleSelection, _onAfterIsMultipleSelection2).call(_this, ...args);\n    });\n    this.addHook('afterRenderer', function () {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      return _classPrivateMethodGet(_this, _onAfterRenderer, _onAfterRenderer2).call(_this, ...args);\n    });\n    this.addHook('afterContextMenuDefaultOptions', function () {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      return _classPrivateMethodGet(_this, _addMergeActionsToContextMenu, _addMergeActionsToContextMenu2).call(_this, ...args);\n    });\n    this.addHook('afterGetCellMeta', function () {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      return _classPrivateMethodGet(_this, _onAfterGetCellMeta, _onAfterGetCellMeta2).call(_this, ...args);\n    });\n    this.addHook('afterViewportRowCalculatorOverride', function () {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n      return _classPrivateMethodGet(_this, _onAfterViewportRowCalculatorOverride, _onAfterViewportRowCalculatorOverride2).call(_this, ...args);\n    });\n    this.addHook('afterViewportColumnCalculatorOverride', function () {\n      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n        args[_key14] = arguments[_key14];\n      }\n      return _classPrivateMethodGet(_this, _onAfterViewportColumnCalculatorOverride, _onAfterViewportColumnCalculatorOverride2).call(_this, ...args);\n    });\n    this.addHook('modifyAutofillRange', function () {\n      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n        args[_key15] = arguments[_key15];\n      }\n      return _classPrivateMethodGet(_this, _onModifyAutofillRange, _onModifyAutofillRange2).call(_this, ...args);\n    });\n    this.addHook('afterCreateCol', function () {\n      for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n        args[_key16] = arguments[_key16];\n      }\n      return _classPrivateMethodGet(_this, _onAfterCreateCol, _onAfterCreateCol2).call(_this, ...args);\n    });\n    this.addHook('afterRemoveCol', function () {\n      for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n        args[_key17] = arguments[_key17];\n      }\n      return _classPrivateMethodGet(_this, _onAfterRemoveCol, _onAfterRemoveCol2).call(_this, ...args);\n    });\n    this.addHook('afterCreateRow', function () {\n      for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n        args[_key18] = arguments[_key18];\n      }\n      return _classPrivateMethodGet(_this, _onAfterCreateRow, _onAfterCreateRow2).call(_this, ...args);\n    });\n    this.addHook('afterRemoveRow', function () {\n      for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n        args[_key19] = arguments[_key19];\n      }\n      return _classPrivateMethodGet(_this, _onAfterRemoveRow, _onAfterRemoveRow2).call(_this, ...args);\n    });\n    this.addHook('afterChange', function () {\n      for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n        args[_key20] = arguments[_key20];\n      }\n      return _classPrivateMethodGet(_this, _onAfterChange, _onAfterChange2).call(_this, ...args);\n    });\n    this.addHook('beforeDrawBorders', function () {\n      for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n        args[_key21] = arguments[_key21];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeDrawAreaBorders, _onBeforeDrawAreaBorders2).call(_this, ...args);\n    });\n    this.addHook('afterDrawSelection', function () {\n      for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n        args[_key22] = arguments[_key22];\n      }\n      return _classPrivateMethodGet(_this, _onAfterDrawSelection, _onAfterDrawSelection2).call(_this, ...args);\n    });\n    this.addHook('beforeRemoveCellClassNames', function () {\n      for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeRemoveCellClassNames, _onBeforeRemoveCellClassNames2).call(_this, ...args);\n    });\n    this.addHook('beforeUndoStackChange', (action, source) => {\n      if (source === 'MergeCells') {\n        return false;\n      }\n    });\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.clearCollections();\n    this.unregisterShortcuts();\n    this.hot.render();\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the\n   * following configuration options:\n   *  - [`mergeCells`](@/api/options.md#mergecells)\n   */\n  updatePlugin() {\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    this.disablePlugin();\n    this.enablePlugin();\n    this.generateFromSettings(settings);\n    super.updatePlugin();\n  }\n\n  /**\n   * If the browser is recognized as Chrome, force an additional repaint to prevent showing the effects of a Chrome bug.\n   *\n   * Issue described in https://github.com/handsontable/dev-handsontable/issues/521.\n   *\n   * @private\n   */\n  ifChromeForceRepaint() {\n    if (!isChrome()) {\n      return;\n    }\n    const rowsToRefresh = [];\n    let rowIndexesToRefresh = [];\n    this.mergedCellsCollection.mergedCells.forEach(mergedCell => {\n      const {\n        row,\n        rowspan\n      } = mergedCell;\n      for (let r = row + 1; r < row + rowspan; r++) {\n        rowIndexesToRefresh.push(r);\n      }\n    });\n\n    // Remove duplicates\n    rowIndexesToRefresh = [...new Set(rowIndexesToRefresh)];\n    rowIndexesToRefresh.forEach(rowIndex => {\n      const renderableRowIndex = this.hot.rowIndexMapper.getRenderableFromVisualIndex(rowIndex);\n      this.hot.view._wt.wtOverlays.getOverlays(true).map(overlay => (overlay === null || overlay === void 0 ? void 0 : overlay.name) === 'master' ? overlay : overlay.clone.wtTable).forEach(wtTableRef => {\n        const rowToRefresh = wtTableRef.getRow(renderableRowIndex);\n        if (rowToRefresh) {\n          // Modify the TR's `background` property to later modify it asynchronously.\n          // The background color is getting modified only with the alpha, so the change should not be visible (and is\n          // covered by the TDs' background color).\n          rowToRefresh.style.background = getStyle(rowToRefresh, 'backgroundColor').replace(')', ', 0.99)');\n          rowsToRefresh.push(rowToRefresh);\n        }\n      });\n    });\n\n    // Asynchronously revert the TRs' `background` property to force a fresh repaint.\n    this.hot._registerTimeout(() => {\n      rowsToRefresh.forEach(rowElement => {\n        rowElement.style.background = getStyle(rowElement, 'backgroundColor').replace(', 0.99)', ')');\n      });\n    }, 1);\n  }\n\n  /**\n   * Validates a single setting object, represented by a single merged cell information object.\n   *\n   * @private\n   * @param {object} setting An object with `row`, `col`, `rowspan` and `colspan` properties.\n   * @returns {boolean}\n   */\n  validateSetting(setting) {\n    let valid = true;\n    if (!setting) {\n      return false;\n    }\n    if (MergedCellCoords.containsNegativeValues(setting)) {\n      warn(MergedCellCoords.NEGATIVE_VALUES_WARNING(setting));\n      valid = false;\n    } else if (MergedCellCoords.isOutOfBounds(setting, this.hot.countRows(), this.hot.countCols())) {\n      warn(MergedCellCoords.IS_OUT_OF_BOUNDS_WARNING(setting));\n      valid = false;\n    } else if (MergedCellCoords.isSingleCell(setting)) {\n      warn(MergedCellCoords.IS_SINGLE_CELL(setting));\n      valid = false;\n    } else if (MergedCellCoords.containsZeroSpan(setting)) {\n      warn(MergedCellCoords.ZERO_SPAN_WARNING(setting));\n      valid = false;\n    }\n    return valid;\n  }\n\n  /**\n   * Generates the merged cells from the settings provided to the plugin.\n   *\n   * @private\n   * @param {Array|boolean} settings The settings provided to the plugin.\n   */\n  generateFromSettings(settings) {\n    if (Array.isArray(settings)) {\n      const populatedNulls = [];\n      arrayEach(settings, setting => {\n        if (!this.validateSetting(setting)) {\n          return;\n        }\n        const highlight = this.hot._createCellCoords(setting.row, setting.col);\n        const rangeEnd = this.hot._createCellCoords(setting.row + setting.rowspan - 1, setting.col + setting.colspan - 1);\n        const mergeRange = this.hot._createCellRange(highlight, highlight, rangeEnd);\n\n        // Merging without data population.\n        this.mergeRange(mergeRange, true, true);\n        rangeEach(setting.row, setting.row + setting.rowspan - 1, rowIndex => {\n          rangeEach(setting.col, setting.col + setting.colspan - 1, columnIndex => {\n            // Not resetting a cell representing a merge area's value.\n            if ((rowIndex === setting.row && columnIndex === setting.col) === false) {\n              populatedNulls.push([rowIndex, columnIndex, null]);\n            }\n          });\n        });\n      });\n\n      // There are no merged cells. Thus, no data population is needed.\n      if (populatedNulls.length === 0) {\n        return;\n      }\n      this.hot.setDataAtCell(populatedNulls);\n    }\n  }\n\n  /**\n   * Clears the merged cells from the merged cell container.\n   */\n  clearCollections() {\n    this.mergedCellsCollection.clear();\n  }\n\n  /**\n   * Returns `true` if a range is mergeable.\n   *\n   * @private\n   * @param {object} newMergedCellInfo Merged cell information object to test.\n   * @param {boolean} [auto=false] `true` if triggered at initialization.\n   * @returns {boolean}\n   */\n  canMergeRange(newMergedCellInfo) {\n    let auto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return auto ? true : this.validateSetting(newMergedCellInfo);\n  }\n\n  /**\n   * Merge or unmerge, based on last selected range.\n   *\n   * @private\n   */\n  toggleMergeOnSelection() {\n    const currentRange = this.hot.getSelectedRangeLast();\n    if (!currentRange) {\n      return;\n    }\n    currentRange.setDirection(this.hot.isRtl() ? 'NE-SW' : 'NW-SE');\n    const {\n      from,\n      to\n    } = currentRange;\n    this.toggleMerge(currentRange);\n    this.hot.selectCell(from.row, from.col, to.row, to.col, false);\n  }\n\n  /**\n   * Merges the selection provided as a cell range.\n   *\n   * @param {CellRange} [cellRange] Selection cell range.\n   */\n  mergeSelection() {\n    let cellRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.hot.getSelectedRangeLast();\n    if (!cellRange) {\n      return;\n    }\n    cellRange.setDirection(this.hot.isRtl() ? 'NE-SW' : 'NW-SE');\n    const {\n      from,\n      to\n    } = cellRange;\n    this.unmergeRange(cellRange, true);\n    this.mergeRange(cellRange);\n    this.hot.selectCell(from.row, from.col, to.row, to.col, false);\n  }\n\n  /**\n   * Unmerges the selection provided as a cell range.\n   *\n   * @param {CellRange} [cellRange] Selection cell range.\n   */\n  unmergeSelection() {\n    let cellRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.hot.getSelectedRangeLast();\n    if (!cellRange) {\n      return;\n    }\n    const {\n      from,\n      to\n    } = cellRange;\n    this.unmergeRange(cellRange, true);\n    this.hot.selectCell(from.row, from.col, to.row, to.col, false);\n  }\n\n  /**\n   * Merges cells in the provided cell range.\n   *\n   * @private\n   * @param {CellRange} cellRange Cell range to merge.\n   * @param {boolean} [auto=false] `true` if is called automatically, e.g. At initialization.\n   * @param {boolean} [preventPopulation=false] `true`, if the method should not run `populateFromArray` at the end,\n   *   but rather return its arguments.\n   * @returns {Array|boolean} Returns an array of [row, column, dataUnderCollection] if preventPopulation is set to\n   *   true. If the the merging process went successful, it returns `true`, otherwise - `false`.\n   * @fires Hooks#beforeMergeCells\n   * @fires Hooks#afterMergeCells\n   */\n  mergeRange(cellRange) {\n    let auto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let preventPopulation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const topStart = cellRange.getTopStartCorner();\n    const bottomEnd = cellRange.getBottomEndCorner();\n    const mergeParent = {\n      row: topStart.row,\n      col: topStart.col,\n      rowspan: bottomEnd.row - topStart.row + 1,\n      colspan: bottomEnd.col - topStart.col + 1\n    };\n    const clearedData = [];\n    let populationInfo = null;\n    if (!this.canMergeRange(mergeParent, auto)) {\n      return false;\n    }\n    this.hot.runHooks('beforeMergeCells', cellRange, auto);\n    rangeEach(0, mergeParent.rowspan - 1, i => {\n      rangeEach(0, mergeParent.colspan - 1, j => {\n        let clearedValue = null;\n        if (!clearedData[i]) {\n          clearedData[i] = [];\n        }\n        if (i === 0 && j === 0) {\n          clearedValue = this.hot.getSourceDataAtCell(this.hot.toPhysicalRow(mergeParent.row), this.hot.toPhysicalColumn(mergeParent.col));\n        } else {\n          this.hot.setCellMeta(mergeParent.row + i, mergeParent.col + j, 'hidden', true);\n        }\n        clearedData[i][j] = clearedValue;\n      });\n    });\n    this.hot.setCellMeta(mergeParent.row, mergeParent.col, 'spanned', true);\n    const mergedCellAdded = this.mergedCellsCollection.add(mergeParent);\n    if (mergedCellAdded) {\n      if (preventPopulation) {\n        populationInfo = [mergeParent.row, mergeParent.col, clearedData];\n      } else {\n        this.hot.populateFromArray(mergeParent.row, mergeParent.col, clearedData, undefined, undefined, this.pluginName);\n      }\n      if (!auto) {\n        this.ifChromeForceRepaint();\n      }\n      this.hot.runHooks('afterMergeCells', cellRange, mergeParent, auto);\n      return populationInfo;\n    }\n    return true;\n  }\n\n  /**\n   * Unmerges the selection provided as a cell range. If no cell range is provided, it uses the current selection.\n   *\n   * @private\n   * @param {CellRange} cellRange Selection cell range.\n   * @param {boolean} [auto=false] `true` if called automatically by the plugin.\n   *\n   * @fires Hooks#beforeUnmergeCells\n   * @fires Hooks#afterUnmergeCells\n   */\n  unmergeRange(cellRange) {\n    let auto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const mergedCells = this.mergedCellsCollection.getWithinRange(cellRange);\n    if (!mergedCells) {\n      return;\n    }\n    this.hot.runHooks('beforeUnmergeCells', cellRange, auto);\n    arrayEach(mergedCells, currentCollection => {\n      this.mergedCellsCollection.remove(currentCollection.row, currentCollection.col);\n      rangeEach(0, currentCollection.rowspan - 1, i => {\n        rangeEach(0, currentCollection.colspan - 1, j => {\n          this.hot.removeCellMeta(currentCollection.row + i, currentCollection.col + j, 'hidden');\n          this.hot.removeCellMeta(currentCollection.row + i, currentCollection.col + j, 'copyable');\n        });\n      });\n      this.hot.removeCellMeta(currentCollection.row, currentCollection.col, 'spanned');\n    });\n    this.hot.runHooks('afterUnmergeCells', cellRange, auto);\n    this.hot.render();\n  }\n\n  /**\n   * Merges or unmerges, based on the cell range provided as `cellRange`.\n   *\n   * @private\n   * @param {CellRange} cellRange The cell range to merge or unmerged.\n   */\n  toggleMerge(cellRange) {\n    const mergedCell = this.mergedCellsCollection.get(cellRange.from.row, cellRange.from.col);\n    const mergedCellCoversWholeRange = mergedCell.row === cellRange.from.row && mergedCell.col === cellRange.from.col && mergedCell.row + mergedCell.rowspan - 1 === cellRange.to.row && mergedCell.col + mergedCell.colspan - 1 === cellRange.to.col;\n    if (mergedCellCoversWholeRange) {\n      this.unmergeRange(cellRange);\n    } else {\n      this.mergeSelection(cellRange);\n    }\n  }\n\n  /**\n   * Merges the specified range.\n   *\n   * @param {number} startRow Start row of the merged cell.\n   * @param {number} startColumn Start column of the merged cell.\n   * @param {number} endRow End row of the merged cell.\n   * @param {number} endColumn End column of the merged cell.\n   * @fires Hooks#beforeMergeCells\n   * @fires Hooks#afterMergeCells\n   */\n  merge(startRow, startColumn, endRow, endColumn) {\n    const start = this.hot._createCellCoords(startRow, startColumn);\n    const end = this.hot._createCellCoords(endRow, endColumn);\n    this.mergeRange(this.hot._createCellRange(start, start, end));\n  }\n\n  /**\n   * Unmerges the merged cell in the provided range.\n   *\n   * @param {number} startRow Start row of the merged cell.\n   * @param {number} startColumn Start column of the merged cell.\n   * @param {number} endRow End row of the merged cell.\n   * @param {number} endColumn End column of the merged cell.\n   * @fires Hooks#beforeUnmergeCells\n   * @fires Hooks#afterUnmergeCells\n   */\n  unmerge(startRow, startColumn, endRow, endColumn) {\n    const start = this.hot._createCellCoords(startRow, startColumn);\n    const end = this.hot._createCellCoords(endRow, endColumn);\n    this.unmergeRange(this.hot._createCellRange(start, start, end));\n  }\n  /**\n   * Register shortcuts responsible for toggling a merge.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const shortcutManager = this.hot.getShortcutManager();\n    const gridContext = shortcutManager.getContext('grid');\n    gridContext.addShortcut({\n      keys: [['Control', 'm']],\n      callback: () => {\n        const range = this.hot.getSelectedRangeLast();\n        if (range && !range.isSingleHeader()) {\n          this.toggleMerge(range);\n          this.hot.render();\n        }\n      },\n      runOnlyIf: event => !event.altKey,\n      // right ALT in some systems triggers ALT+CTRL\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling a merge.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    const shortcutManager = this.hot.getShortcutManager();\n    const gridContext = shortcutManager.getContext('grid');\n    gridContext.removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n  /**\n   * Modify viewport start when needed. We extend viewport when merged cells aren't fully visible.\n   *\n   * @private\n   * @param {object} calc The row calculator object.\n   * @param {number} nrOfColumns Number of visual columns.\n   */\n  modifyViewportRowStart(calc, nrOfColumns) {\n    const rowMapper = this.hot.rowIndexMapper;\n    const visualStartRow = rowMapper.getVisualFromRenderableIndex(calc.startRow);\n    for (let visualColumnIndex = 0; visualColumnIndex < nrOfColumns; visualColumnIndex += 1) {\n      const mergeParentForViewportStart = this.mergedCellsCollection.get(visualStartRow, visualColumnIndex);\n      if (isObject(mergeParentForViewportStart)) {\n        const renderableIndexAtMergeStart = rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(mergeParentForViewportStart.row, 1));\n\n        // Merge start is out of the viewport (i.e. when we scrolled to the bottom and we can see just part of a merge).\n        if (renderableIndexAtMergeStart < calc.startRow) {\n          // We extend viewport when some rows have been merged.\n          calc.startRow = renderableIndexAtMergeStart;\n          // We are looking for next merges inside already extended viewport (starting again from row equal to 0).\n          this.modifyViewportRowStart(calc, nrOfColumns); // recursively search upwards\n\n          return; // Finish the current loop. Everything will be checked from the beginning by above recursion.\n        }\n      }\n    }\n  }\n\n  /**\n   *  Modify viewport end when needed. We extend viewport when merged cells aren't fully visible.\n   *\n   * @private\n   * @param {object} calc The row calculator object.\n   * @param {number} nrOfColumns Number of visual columns.\n   */\n  modifyViewportRowEnd(calc, nrOfColumns) {\n    const rowMapper = this.hot.rowIndexMapper;\n    const visualEndRow = rowMapper.getVisualFromRenderableIndex(calc.endRow);\n    for (let visualColumnIndex = 0; visualColumnIndex < nrOfColumns; visualColumnIndex += 1) {\n      const mergeParentForViewportEnd = this.mergedCellsCollection.get(visualEndRow, visualColumnIndex);\n      if (isObject(mergeParentForViewportEnd)) {\n        const mergeEnd = mergeParentForViewportEnd.row + mergeParentForViewportEnd.rowspan - 1;\n        const renderableIndexAtMergeEnd = rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(mergeEnd, -1));\n\n        // Merge end is out of the viewport.\n        if (renderableIndexAtMergeEnd > calc.endRow) {\n          // We extend the viewport when some rows have been merged.\n          calc.endRow = renderableIndexAtMergeEnd;\n          // We are looking for next merges inside already extended viewport (starting again from row equal to 0).\n          this.modifyViewportRowEnd(calc, nrOfColumns); // recursively search upwards\n\n          return; // Finish the current loop. Everything will be checked from the beginning by above recursion.\n        }\n      }\n    }\n  }\n\n  /**\n   * Modify viewport start when needed. We extend viewport when merged cells aren't fully visible.\n   *\n   * @private\n   * @param {object} calc The column calculator object.\n   * @param {number} nrOfRows Number of visual rows.\n   */\n  modifyViewportColumnStart(calc, nrOfRows) {\n    const columnMapper = this.hot.columnIndexMapper;\n    const visualStartCol = columnMapper.getVisualFromRenderableIndex(calc.startColumn);\n    for (let visualRowIndex = 0; visualRowIndex < nrOfRows; visualRowIndex += 1) {\n      const mergeParentForViewportStart = this.mergedCellsCollection.get(visualRowIndex, visualStartCol);\n      if (isObject(mergeParentForViewportStart)) {\n        const renderableIndexAtMergeStart = columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(mergeParentForViewportStart.col, 1));\n\n        // Merge start is out of the viewport (i.e. when we scrolled to the right and we can see just part of a merge).\n        if (renderableIndexAtMergeStart < calc.startColumn) {\n          // We extend viewport when some columns have been merged.\n          calc.startColumn = renderableIndexAtMergeStart;\n          // We are looking for next merges inside already extended viewport (starting again from column equal to 0).\n          this.modifyViewportColumnStart(calc, nrOfRows); // recursively search upwards\n\n          return; // Finish the current loop. Everything will be checked from the beginning by above recursion.\n        }\n      }\n    }\n  }\n\n  /**\n   *  Modify viewport end when needed. We extend viewport when merged cells aren't fully visible.\n   *\n   * @private\n   * @param {object} calc The column calculator object.\n   * @param {number} nrOfRows Number of visual rows.\n   */\n  modifyViewportColumnEnd(calc, nrOfRows) {\n    const columnMapper = this.hot.columnIndexMapper;\n    const visualEndCol = columnMapper.getVisualFromRenderableIndex(calc.endColumn);\n    for (let visualRowIndex = 0; visualRowIndex < nrOfRows; visualRowIndex += 1) {\n      const mergeParentForViewportEnd = this.mergedCellsCollection.get(visualRowIndex, visualEndCol);\n      if (isObject(mergeParentForViewportEnd)) {\n        const mergeEnd = mergeParentForViewportEnd.col + mergeParentForViewportEnd.colspan - 1;\n        const renderableIndexAtMergeEnd = columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(mergeEnd, -1));\n\n        // Merge end is out of the viewport.\n        if (renderableIndexAtMergeEnd > calc.endColumn) {\n          // We extend the viewport when some columns have been merged.\n          calc.endColumn = renderableIndexAtMergeEnd;\n          // We are looking for next merges inside already extended viewport (starting again from column equal to 0).\n          this.modifyViewportColumnEnd(calc, nrOfRows); // recursively search upwards\n\n          return; // Finish the current loop. Everything will be checked from the beginning by above recursion.\n        }\n      }\n    }\n  }\n\n  /**\n   * Translates merged cell coordinates to renderable indexes.\n   *\n   * @private\n   * @param {number} parentRow Visual row index.\n   * @param {number} rowspan Rowspan which describes shift which will be applied to parent row\n   *                         to calculate renderable index which points to the most bottom\n   *                         index position. Pass rowspan as `0` to calculate the most top\n   *                         index position.\n   * @param {number} parentColumn Visual column index.\n   * @param {number} colspan Colspan which describes shift which will be applied to parent column\n   *                         to calculate renderable index which points to the most right\n   *                         index position. Pass colspan as `0` to calculate the most left\n   *                         index position.\n   * @returns {number[]}\n   */\n  translateMergedCellToRenderable(parentRow, rowspan, parentColumn, colspan) {\n    const {\n      rowIndexMapper: rowMapper,\n      columnIndexMapper: columnMapper\n    } = this.hot;\n    let firstNonHiddenRow;\n    let firstNonHiddenColumn;\n    if (rowspan === 0) {\n      firstNonHiddenRow = rowMapper.getNearestNotHiddenIndex(parentRow, 1);\n    } else {\n      firstNonHiddenRow = rowMapper.getNearestNotHiddenIndex(parentRow + rowspan - 1, -1);\n    }\n    if (colspan === 0) {\n      firstNonHiddenColumn = columnMapper.getNearestNotHiddenIndex(parentColumn, 1);\n    } else {\n      firstNonHiddenColumn = columnMapper.getNearestNotHiddenIndex(parentColumn + colspan - 1, -1);\n    }\n    const renderableRow = parentRow >= 0 ? rowMapper.getRenderableFromVisualIndex(firstNonHiddenRow) : parentRow;\n    const renderableColumn = parentColumn >= 0 ? columnMapper.getRenderableFromVisualIndex(firstNonHiddenColumn) : parentColumn;\n    return [renderableRow, renderableColumn];\n  }\n}\nfunction _onAfterInit2() {\n  this.generateFromSettings(this.hot.getSettings()[PLUGIN_KEY]);\n  this.hot.render();\n}\nfunction _onAfterIsMultipleSelection2(isMultiple) {\n  if (isMultiple) {\n    const mergedCells = this.mergedCellsCollection.mergedCells;\n    const selectionRange = this.hot.getSelectedRangeLast();\n    for (let group = 0; group < mergedCells.length; group += 1) {\n      if (selectionRange.from.row === mergedCells[group].row && selectionRange.from.col === mergedCells[group].col && selectionRange.to.row === mergedCells[group].row + mergedCells[group].rowspan - 1 && selectionRange.to.col === mergedCells[group].col + mergedCells[group].colspan - 1) {\n        return false;\n      }\n    }\n  }\n  return isMultiple;\n}\nfunction _onModifyTransformStart2(delta) {\n  const currentlySelectedRange = this.hot.getSelectedRangeLast();\n  let newDelta = {\n    row: delta.row,\n    col: delta.col\n  };\n  let nextPosition = null;\n  const currentPosition = this.hot._createCellCoords(currentlySelectedRange.highlight.row, currentlySelectedRange.highlight.col);\n  const mergedParent = this.mergedCellsCollection.get(currentPosition.row, currentPosition.col);\n  if (!_classPrivateFieldGet(this, _lastDesiredCoords)) {\n    _classPrivateFieldSet(this, _lastDesiredCoords, this.hot._createCellCoords(null, null));\n  }\n  if (mergedParent) {\n    // only merge selected\n    const mergeTopLeft = this.hot._createCellCoords(mergedParent.row, mergedParent.col);\n    const mergeBottomRight = this.hot._createCellCoords(mergedParent.row + mergedParent.rowspan - 1, mergedParent.col + mergedParent.colspan - 1);\n    const mergeRange = this.hot._createCellRange(mergeTopLeft, mergeTopLeft, mergeBottomRight);\n    if (!mergeRange.includes(_classPrivateFieldGet(this, _lastDesiredCoords))) {\n      _classPrivateFieldSet(this, _lastDesiredCoords, this.hot._createCellCoords(null, null)); // reset outdated version of lastDesiredCoords\n    }\n\n    newDelta.row = _classPrivateFieldGet(this, _lastDesiredCoords).row ? _classPrivateFieldGet(this, _lastDesiredCoords).row - currentPosition.row : newDelta.row;\n    newDelta.col = _classPrivateFieldGet(this, _lastDesiredCoords).col ? _classPrivateFieldGet(this, _lastDesiredCoords).col - currentPosition.col : newDelta.col;\n    if (delta.row > 0) {\n      // moving down\n      newDelta.row = mergedParent.row + mergedParent.rowspan - 1 - currentPosition.row + delta.row;\n    } else if (delta.row < 0) {\n      // moving up\n      newDelta.row = currentPosition.row - mergedParent.row + delta.row;\n    }\n    if (delta.col > 0) {\n      // moving right\n      newDelta.col = mergedParent.col + mergedParent.colspan - 1 - currentPosition.col + delta.col;\n    } else if (delta.col < 0) {\n      // moving left\n      newDelta.col = currentPosition.col - mergedParent.col + delta.col;\n    }\n  }\n  nextPosition = this.hot._createCellCoords(currentlySelectedRange.highlight.row + newDelta.row, currentlySelectedRange.highlight.col + newDelta.col);\n  const nextPositionMergedCell = this.mergedCellsCollection.get(nextPosition.row, nextPosition.col);\n  if (nextPositionMergedCell) {\n    // skipping the invisible cells in the merge range\n    const firstRenderableCoords = this.mergedCellsCollection.getFirstRenderableCoords(nextPositionMergedCell.row, nextPositionMergedCell.col);\n    _classPrivateFieldSet(this, _lastDesiredCoords, nextPosition);\n    newDelta = {\n      row: firstRenderableCoords.row - currentPosition.row,\n      col: firstRenderableCoords.col - currentPosition.col\n    };\n  }\n  if (newDelta.row !== 0) {\n    delta.row = newDelta.row;\n  }\n  if (newDelta.col !== 0) {\n    delta.col = newDelta.col;\n  }\n}\nfunction _onModifyTransformEnd2(delta) {\n  const currentSelectionRange = this.hot.getSelectedRangeLast();\n  const newDelta = clone(delta);\n  const newSelectionRange = this.selectionCalculations.getUpdatedSelectionRange(currentSelectionRange, delta);\n  let tempDelta = clone(newDelta);\n  const mergedCellsWithinRange = this.mergedCellsCollection.getWithinRange(newSelectionRange, true);\n  do {\n    tempDelta = clone(newDelta);\n    this.selectionCalculations.getUpdatedSelectionRange(currentSelectionRange, newDelta);\n    arrayEach(mergedCellsWithinRange, mergedCell => {\n      this.selectionCalculations.snapDelta(newDelta, currentSelectionRange, mergedCell);\n    });\n  } while (newDelta.row !== tempDelta.row || newDelta.col !== tempDelta.col);\n  delta.row = newDelta.row;\n  delta.col = newDelta.col;\n}\nfunction _onModifyGetCellCoords2(row, column) {\n  if (row < 0 || column < 0) {\n    return;\n  }\n  const mergeParent = this.mergedCellsCollection.get(row, column);\n  if (!mergeParent) {\n    return;\n  }\n  const {\n    row: mergeRow,\n    col: mergeColumn,\n    colspan,\n    rowspan\n  } = mergeParent;\n  return [\n  // Most top-left merged cell coords.\n  mergeRow, mergeColumn,\n  // Most bottom-right merged cell coords.\n  mergeRow + rowspan - 1, mergeColumn + colspan - 1];\n}\nfunction _addMergeActionsToContextMenu2(defaultOptions) {\n  defaultOptions.items.push({\n    name: '---------'\n  }, toggleMergeItem(this));\n}\nfunction _onAfterRenderer2(TD, row, col) {\n  const mergedCell = this.mergedCellsCollection.get(row, col);\n  // We shouldn't override data in the collection.\n  const mergedCellCopy = isObject(mergedCell) ? clone(mergedCell) : undefined;\n  if (isObject(mergedCellCopy)) {\n    const {\n      rowIndexMapper: rowMapper,\n      columnIndexMapper: columnMapper\n    } = this.hot;\n    const {\n      row: mergeRow,\n      col: mergeColumn,\n      colspan,\n      rowspan\n    } = mergedCellCopy;\n    const [lastMergedRowIndex, lastMergedColumnIndex] = this.translateMergedCellToRenderable(mergeRow, rowspan, mergeColumn, colspan);\n    const renderedRowIndex = rowMapper.getRenderableFromVisualIndex(row);\n    const renderedColumnIndex = columnMapper.getRenderableFromVisualIndex(col);\n    const maxRowSpan = lastMergedRowIndex - renderedRowIndex + 1; // Number of rendered columns.\n    const maxColSpan = lastMergedColumnIndex - renderedColumnIndex + 1; // Number of rendered columns.\n\n    // We just try to determine some values basing on the actual number of rendered indexes (some columns may be hidden).\n    mergedCellCopy.row = rowMapper.getNearestNotHiddenIndex(mergedCellCopy.row, 1);\n    // We just try to determine some values basing on the actual number of rendered indexes (some columns may be hidden).\n    mergedCellCopy.col = columnMapper.getNearestNotHiddenIndex(mergedCellCopy.col, 1);\n    // The `rowSpan` property for a `TD` element should be at most equal to number of rendered rows in the merge area.\n    mergedCellCopy.rowspan = Math.min(mergedCellCopy.rowspan, maxRowSpan);\n    // The `colSpan` property for a `TD` element should be at most equal to number of rendered columns in the merge area.\n    mergedCellCopy.colspan = Math.min(mergedCellCopy.colspan, maxColSpan);\n  }\n  applySpanProperties(TD, mergedCellCopy, row, col);\n}\nfunction _onBeforeSetRangeStart2(coords) {\n  // TODO: It is a workaround, but probably this hook may be needed. Every selection on the merge area\n  // could set start point of the selection to the start of the merge area. However, logic inside `expandByRange` need\n  // an initial start point. Click on the merge cell when there are some hidden indexes break the logic in some cases.\n  // Please take a look at #7010 for more information. I'm not sure if selection directions are calculated properly\n  // and what was idea for flipping direction inside `expandByRange` method.\n  if (this.mergedCellsCollection.isFirstRenderableMergedCell(coords.row, coords.col)) {\n    const mergeParent = this.mergedCellsCollection.get(coords.row, coords.col);\n    [coords.row, coords.col] = [mergeParent.row, mergeParent.col];\n  }\n}\nfunction _onBeforeSetRangeEnd2(coords) {\n  const selRange = this.hot.getSelectedRangeLast();\n  selRange.highlight = this.hot._createCellCoords(selRange.highlight.row, selRange.highlight.col); // clone in case we will modify its reference\n  selRange.to = coords;\n  let rangeExpanded = false;\n  if (this.hot.selection.isSelectedByColumnHeader() || this.hot.selection.isSelectedByRowHeader()) {\n    return;\n  }\n  do {\n    rangeExpanded = false;\n    for (let i = 0; i < this.mergedCellsCollection.mergedCells.length; i += 1) {\n      const cellInfo = this.mergedCellsCollection.mergedCells[i];\n      const mergedCellRange = cellInfo.getRange();\n      if (selRange.expandByRange(mergedCellRange)) {\n        coords.row = selRange.to.row;\n        coords.col = selRange.to.col;\n        rangeExpanded = true;\n      }\n    }\n  } while (rangeExpanded);\n}\nfunction _onAfterGetCellMeta2(row, col, cellProperties) {\n  const mergeParent = this.mergedCellsCollection.get(row, col);\n  if (mergeParent) {\n    if (mergeParent.row !== row || mergeParent.col !== col) {\n      cellProperties.copyable = false;\n    } else {\n      cellProperties.rowspan = mergeParent.rowspan;\n      cellProperties.colspan = mergeParent.colspan;\n    }\n  }\n}\nfunction _onAfterViewportRowCalculatorOverride2(calc) {\n  const nrOfColumns = this.hot.countCols();\n  this.modifyViewportRowStart(calc, nrOfColumns);\n  this.modifyViewportRowEnd(calc, nrOfColumns);\n}\nfunction _onAfterViewportColumnCalculatorOverride2(calc) {\n  const nrOfRows = this.hot.countRows();\n  this.modifyViewportColumnStart(calc, nrOfRows);\n  this.modifyViewportColumnEnd(calc, nrOfRows);\n}\nfunction _onModifyAutofillRange2(drag, select) {\n  this.autofillCalculations.correctSelectionAreaSize(select);\n  const dragDirection = this.autofillCalculations.getDirection(select, drag);\n  let dragArea = drag;\n  if (this.autofillCalculations.dragAreaOverlapsCollections(select, dragArea, dragDirection)) {\n    dragArea = select;\n    return dragArea;\n  }\n  const mergedCellsWithinSelectionArea = this.mergedCellsCollection.getWithinRange({\n    from: {\n      row: select[0],\n      col: select[1]\n    },\n    to: {\n      row: select[2],\n      col: select[3]\n    }\n  });\n  if (!mergedCellsWithinSelectionArea) {\n    return dragArea;\n  }\n  dragArea = this.autofillCalculations.snapDragArea(select, dragArea, dragDirection, mergedCellsWithinSelectionArea);\n  return dragArea;\n}\nfunction _onAfterCreateCol2(column, count) {\n  this.mergedCellsCollection.shiftCollections('right', column, count);\n}\nfunction _onAfterRemoveCol2(column, count) {\n  this.mergedCellsCollection.shiftCollections('left', column, count);\n}\nfunction _onAfterCreateRow2(row, count, source) {\n  if (source === 'auto') {\n    return;\n  }\n  this.mergedCellsCollection.shiftCollections('down', row, count);\n}\nfunction _onAfterRemoveRow2(row, count) {\n  this.mergedCellsCollection.shiftCollections('up', row, count);\n}\nfunction _onAfterChange2(changes, source) {\n  if (source !== 'Autofill.fill') {\n    return;\n  }\n  this.autofillCalculations.recreateAfterDataPopulation(changes);\n}\nfunction _onBeforeDrawAreaBorders2(corners, className) {\n  if (className && className === 'area') {\n    const selectedRange = this.hot.getSelectedRangeLast();\n    const mergedCellsWithinRange = this.mergedCellsCollection.getWithinRange(selectedRange);\n    arrayEach(mergedCellsWithinRange, mergedCell => {\n      if (selectedRange.getBottomEndCorner().row === mergedCell.getLastRow() && selectedRange.getBottomEndCorner().col === mergedCell.getLastColumn()) {\n        corners[2] = mergedCell.row;\n        corners[3] = mergedCell.col;\n      }\n    });\n  }\n}\nfunction _onAfterModifyTransformStart2(coords, rowTransformDir, colTransformDir) {\n  if (!this.enabled) {\n    return;\n  }\n  const mergedCellAtCoords = this.mergedCellsCollection.get(coords.row, coords.col);\n  if (!mergedCellAtCoords) {\n    return;\n  }\n  const goingDown = rowTransformDir > 0;\n  const goingUp = rowTransformDir < 0;\n  const goingLeft = colTransformDir < 0;\n  const goingRight = colTransformDir > 0;\n  const mergedCellOnBottomEdge = mergedCellAtCoords.row + mergedCellAtCoords.rowspan - 1 === this.hot.countRows() - 1;\n  const mergedCellOnTopEdge = mergedCellAtCoords.row === 0;\n  const mergedCellOnRightEdge = mergedCellAtCoords.col + mergedCellAtCoords.colspan - 1 === this.hot.countCols() - 1;\n  const mergedCellOnLeftEdge = mergedCellAtCoords.col === 0;\n  if (goingDown && mergedCellOnBottomEdge || goingUp && mergedCellOnTopEdge || goingRight && mergedCellOnRightEdge || goingLeft && mergedCellOnLeftEdge) {\n    coords.row = mergedCellAtCoords.row;\n    coords.col = mergedCellAtCoords.col;\n  }\n}\nfunction _onAfterDrawSelection2(currentRow, currentColumn, cornersOfSelection, layerLevel) {\n  // Nothing's selected (hook might be triggered by the custom borders)\n  if (!cornersOfSelection) {\n    return;\n  }\n  return this.selectionCalculations.getSelectedMergedCellClassName(currentRow, currentColumn, cornersOfSelection, layerLevel);\n}\nfunction _onBeforeRemoveCellClassNames2() {\n  return this.selectionCalculations.getSelectedMergedCellClassNameToRemove();\n}", "import { getCompareFunctionFactory, DO_NOT_SWAP } from \"../columnSorting/sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    const [, ...values] = rowIndexWithValues;\n    const [, ...nextValues] = nextRowIndexWithValues;\n    return function getCompareResult(column) {\n      const sortingOrder = sortingOrders[column];\n      const columnMeta = columnMetas[column];\n      const value = values[column];\n      const nextValue = nextValues[column];\n      const pluginSettings = columnMeta.multiColumnSorting;\n      const compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      const compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue);\n      if (compareResult === DO_NOT_SWAP) {\n        const nextSortedColumn = column + 1;\n        if (typeof columnMetas[nextSortedColumn] !== 'undefined') {\n          return getCompareResult(nextSortedColumn);\n        }\n      }\n      return compareResult;\n    }(0);\n  };\n}", "import { warn } from \"../../helpers/console.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\n/**\n * Warn users about problems when using `columnSorting` and `multiColumnSorting` plugins simultaneously.\n */\nexport function warnAboutPluginsConflict() {\n  warn(toSingleLine`Plugins \\`columnSorting\\` and \\`multiColumnSorting\\` should not be enabled simultaneously. \n    Only \\`multiColumnSorting\\` will work.`);\n}", "import \"core-js/modules/es.array.push.js\";\nconst COLUMN_ORDER_PREFIX = 'sort';\n\n/**\n * Get CSS classes which should be added to particular column header.\n *\n * @param {object} columnStatesManager Instance of column state manager.\n * @param {number} column Visual column index.\n * @param {boolean} showSortIndicator Indicates if indicator should be shown for the particular column.\n * @returns {Array} Array of CSS classes.\n */\nexport function getClassesToAdd(columnStatesManager, column, showSortIndicator) {\n  const cssClasses = [];\n  if (showSortIndicator === false) {\n    return cssClasses;\n  }\n  if (columnStatesManager.isColumnSorted(column) && columnStatesManager.getNumberOfSortedColumns() > 1) {\n    cssClasses.push(`${COLUMN_ORDER_PREFIX}-${columnStatesManager.getIndexOfColumnInSortQueue(column) + 1}`);\n  }\n  return cssClasses;\n}\n\n/**\n * Get CSS classes which should be removed from column header.\n *\n * @param {HTMLElement} htmlElement An element to process.\n * @returns {Array} Array of CSS classes.\n */\nexport function getClassesToRemove(htmlElement) {\n  const cssClasses = htmlElement.className.split(' ');\n  const sortSequenceRegExp = new RegExp(`^${COLUMN_ORDER_PREFIX}-[0-9]{1,2}$`);\n  return cssClasses.filter(cssClass => sortSequenceRegExp.test(cssClass));\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { APPEND_COLUMN_CONFIG_STRATEGY, ColumnSorting } from \"../columnSorting/index.mjs\";\nimport { registerRootComparator } from \"../columnSorting/sortService/index.mjs\";\nimport { wasHeaderClickedProperly } from \"../columnSorting/utils.mjs\";\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { rootComparator } from \"./rootComparator.mjs\";\nimport { warnAboutPluginsConflict } from \"./utils.mjs\";\nimport { getClassesToAdd, getClassesToRemove } from \"./domHelpers.mjs\";\nexport const PLUGIN_KEY = 'multiColumnSorting';\nexport const PLUGIN_PRIORITY = 170;\nconst CONFLICTED_PLUGIN_KEY = 'columnSorting';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nregisterRootComparator(PLUGIN_KEY, rootComparator);\n\n/**\n * @plugin MultiColumnSorting\n * @class MultiColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#multiColumnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * multiColumnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1 and then sort descending for column at index 0)\n * multiColumnSorting: {\n *   initialConfig: [{\n *     column: 1,\n *     sortOrder: 'asc'\n *   }, {\n *     column: 0,\n *     sortOrder: 'desc'\n *   }]\n * }\n *\n * // as an object which define specific sorting options for all columns\n * multiColumnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: {@link Options#columns}\n * columns: [{\n *   multiColumnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]\n * ```\n */\nexport class MultiColumnSorting extends ColumnSorting {\n  constructor() {\n    super(...arguments);\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {string}\n     */\n    _defineProperty(this, \"pluginKey\", PLUGIN_KEY);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link MultiColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return super.isEnabled();\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (!this.enabled && this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n      warnAboutPluginsConflict();\n    }\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling column sorting functionality.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    super.registerShortcuts();\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Shift', 'Enter']],\n      callback: () => {\n        const {\n          highlight\n        } = this.hot.getSelectedRangeLast();\n        if (highlight.row === -1 && highlight.col >= 0) {\n          this.sort(this.getNextSortConfig(highlight.col, APPEND_COLUMN_CONFIG_STRATEGY));\n        }\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling column sorting functionality.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    super.unregisterShortcuts();\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Sorts the table by chosen columns and orders.\n   *\n   * @param {undefined|object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n   * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n   * sort order (`asc` for ascending, `desc` for descending).\n   *\n   * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n   *\n   * @example\n   * ```js\n   * // sort ascending first visual column\n   * hot.getPlugin('multiColumnSorting').sort({ column: 0, sortOrder: 'asc' });\n   *\n   * // sort first two visual column in the defined sequence\n   * hot.getPlugin('multiColumnSorting').sort([{\n   *   column: 1, sortOrder: 'asc'\n   * }, {\n   *   column: 0, sortOrder: 'desc'\n   * }]);\n   * ```\n   *\n   * @fires Hooks#beforeColumnSort\n   * @fires Hooks#afterColumnSort\n   */\n  sort(sortConfig) {\n    super.sort(sortConfig);\n  }\n\n  /**\n   * Clear the sort performed on the table.\n   */\n  clearSort() {\n    super.clearSort();\n  }\n\n  /**\n   * Checks if the table is sorted (any column have to be sorted).\n   *\n   * @returns {boolean}\n   */\n  isSorted() {\n    return super.isSorted();\n  }\n\n  /**\n   * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n   *\n   * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n   *\n   * @param {number} [column] Visual column index.\n   * @returns {undefined|object|Array}\n   */\n  getSortConfig(column) {\n    return super.getSortConfig(column);\n  }\n\n  /**\n   * @description\n   * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n   * Note: Please keep in mind that this method doesn't re-render the table.\n   *\n   * @example\n   * ```js\n   * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n   *   const columnSortPlugin = this.getPlugin('multiColumnSorting');\n   *\n   *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n   *\n   *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n   *\n   *   this.loadData(newData); // Load new data set and re-render the table.\n   *\n   *   return false; // The blockade for the default sort action.\n   * }\n   * ```\n   *\n   * @param {undefined|object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n   * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n   * sort order (`asc` for ascending, `desc` for descending).\n   */\n  setSortConfig(sortConfig) {\n    super.setSortConfig(sortConfig);\n  }\n\n  /**\n   * Get normalized sort configs.\n   *\n   * @private\n   * @param {object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n   * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n   * sort order (`asc` for ascending, `desc` for descending).\n   * @returns {Array}\n   */\n  getNormalizedSortConfigs() {\n    let sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (Array.isArray(sortConfig)) {\n      return sortConfig;\n    }\n    return [sortConfig];\n  }\n\n  /**\n   * Update header classes.\n   *\n   * @private\n   * @param {HTMLElement} headerSpanElement Header span element.\n   * @param {...*} args Extra arguments for helpers.\n   */\n  updateHeaderClasses(headerSpanElement) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    super.updateHeaderClasses(headerSpanElement, ...args);\n    removeClass(headerSpanElement, getClassesToRemove(headerSpanElement));\n    if (this.enabled !== false) {\n      addClass(headerSpanElement, getClassesToAdd(...args));\n    }\n  }\n\n  /**\n   * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n   * for `updateSettings` in specific situations.\n   *\n   * @private\n   * @param {object} newSettings New settings object.\n   */\n  onUpdateSettings(newSettings) {\n    if (this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n      warnAboutPluginsConflict();\n    }\n    super.onUpdateSettings(newSettings);\n  }\n\n  /**\n   * Callback for the `onAfterOnCellMouseDown` hook.\n   *\n   * @private\n   * @param {Event} event Event which are provided by hook.\n   * @param {CellCoords} coords Visual coords of the selected cell.\n   */\n  onAfterOnCellMouseDown(event, coords) {\n    if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n      return;\n    }\n    if (this.wasClickableHeaderClicked(event, coords.col)) {\n      if (this.hot.getShortcutManager().isCtrlPressed()) {\n        this.hot.deselectCell();\n        this.hot.selectColumns(coords.col);\n        this.sort(this.getNextSortConfig(coords.col, APPEND_COLUMN_CONFIG_STRATEGY));\n      } else {\n        this.sort(this.getColumnNextConfig(coords.col));\n      }\n    }\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nimport { isMobileBrowser } from \"../../helpers/browser.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nexport const PLUGIN_KEY = 'multipleSelectionHandles';\nexport const PLUGIN_PRIORITY = 160;\n\n/**\n * @private\n * @plugin MultipleSelectionHandles\n * @class MultipleSelectionHandles\n */\nexport class MultipleSelectionHandles extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * @type {Array}\n     */\n    _defineProperty(this, \"dragged\", []);\n    /**\n     * @type {null}\n     */\n    _defineProperty(this, \"lastSetCell\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Check if the plugin is enabled in the handsontable settings.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return isMobileBrowser();\n  }\n\n  /**\n   * Enable plugin for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.registerListeners();\n    super.enablePlugin();\n  }\n\n  /**\n   * Bind the touch events.\n   *\n   * @private\n   */\n  registerListeners() {\n    const _this = this;\n    const {\n      rootElement\n    } = this.hot;\n\n    /**\n     * @private\n     * @param {string} query Query for the position.\n     * @returns {boolean}\n     */\n    function removeFromDragged(query) {\n      if (_this.dragged.length === 1) {\n        // clear array\n        _this.dragged.splice(0, _this.dragged.length);\n        return true;\n      }\n      const entryPosition = _this.dragged.indexOf(query);\n      if (entryPosition === -1) {\n        return false;\n      } else if (entryPosition === 0) {\n        _this.dragged = _this.dragged.slice(0, 1);\n      } else if (entryPosition === 1) {\n        _this.dragged = _this.dragged.slice(-1);\n      }\n    }\n    this.eventManager.addEventListener(rootElement, 'touchstart', event => {\n      let selectedRange;\n      if (hasClass(event.target, 'topSelectionHandle-HitArea')) {\n        selectedRange = _this.hot.getSelectedRangeLast();\n        _this.dragged.push('top');\n        _this.touchStartRange = {\n          width: selectedRange.getWidth(),\n          height: selectedRange.getHeight(),\n          direction: selectedRange.getDirection()\n        };\n        event.preventDefault();\n        return false;\n      } else if (hasClass(event.target, 'bottomSelectionHandle-HitArea')) {\n        selectedRange = _this.hot.getSelectedRangeLast();\n        _this.dragged.push('bottom');\n        _this.touchStartRange = {\n          width: selectedRange.getWidth(),\n          height: selectedRange.getHeight(),\n          direction: selectedRange.getDirection()\n        };\n        event.preventDefault();\n        return false;\n      }\n    });\n    this.eventManager.addEventListener(rootElement, 'touchend', event => {\n      if (hasClass(event.target, 'topSelectionHandle-HitArea')) {\n        removeFromDragged.call(_this, 'top');\n        _this.touchStartRange = undefined;\n        event.preventDefault();\n        return false;\n      } else if (hasClass(event.target, 'bottomSelectionHandle-HitArea')) {\n        removeFromDragged.call(_this, 'bottom');\n        _this.touchStartRange = undefined;\n        event.preventDefault();\n        return false;\n      }\n    });\n    this.eventManager.addEventListener(rootElement, 'touchmove', event => {\n      const {\n        rootDocument\n      } = this.hot;\n      let targetCoords;\n      let selectedRange;\n      let rangeWidth;\n      let rangeHeight;\n      let rangeDirection;\n      let newRangeCoords;\n      if (_this.dragged.length === 0) {\n        return;\n      }\n      const endTarget = rootDocument.elementFromPoint(event.touches[0].clientX, event.touches[0].clientY);\n      if (!endTarget || endTarget === _this.lastSetCell) {\n        return;\n      }\n      if (endTarget.nodeName === 'TD' || endTarget.nodeName === 'TH') {\n        targetCoords = _this.hot.getCoords(endTarget);\n        if (targetCoords.col === -1) {\n          targetCoords.col = 0;\n        }\n        selectedRange = _this.hot.getSelectedRangeLast();\n        rangeWidth = selectedRange.getWidth();\n        rangeHeight = selectedRange.getHeight();\n        rangeDirection = selectedRange.getDirection();\n        if (rangeWidth === 1 && rangeHeight === 1) {\n          _this.hot.selection.setRangeEnd(targetCoords);\n        }\n        newRangeCoords = _this.getCurrentRangeCoords(selectedRange, targetCoords, _this.touchStartRange.direction, rangeDirection, _this.dragged[0]);\n        if (newRangeCoords.start !== null) {\n          _this.hot.selection.setRangeStart(newRangeCoords.start);\n        }\n        _this.hot.selection.setRangeEnd(newRangeCoords.end);\n        _this.lastSetCell = endTarget;\n      }\n      event.preventDefault();\n    });\n  }\n  getCurrentRangeCoords(selectedRange, currentTouch, touchStartDirection, currentDirection, draggedHandle) {\n    const topStartCorner = selectedRange.getTopStartCorner();\n    const bottomEndCorner = selectedRange.getBottomEndCorner();\n    const bottomStartCorner = selectedRange.getBottomStartCorner();\n    const topEndCorner = selectedRange.getTopEndCorner();\n    let newCoords = {\n      start: null,\n      end: null\n    };\n    switch (touchStartDirection) {\n      case 'NE-SW':\n        switch (currentDirection) {\n          case 'NE-SW':\n          case 'NW-SE':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: this.hot._createCellCoords(currentTouch.row, selectedRange.highlight.col),\n                end: this.hot._createCellCoords(bottomStartCorner.row, currentTouch.col)\n              };\n            } else {\n              newCoords = {\n                start: this.hot._createCellCoords(selectedRange.highlight.row, currentTouch.col),\n                end: this.hot._createCellCoords(currentTouch.row, topStartCorner.col)\n              };\n            }\n            break;\n          case 'SE-NW':\n            if (draggedHandle === 'bottom') {\n              newCoords = {\n                start: this.hot._createCellCoords(bottomEndCorner.row, currentTouch.col),\n                end: this.hot._createCellCoords(currentTouch.row, topStartCorner.col)\n              };\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'NW-SE':\n        switch (currentDirection) {\n          case 'NE-SW':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: currentTouch,\n                end: bottomStartCorner\n              };\n            } else {\n              newCoords.end = currentTouch;\n            }\n            break;\n          case 'NW-SE':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: currentTouch,\n                end: bottomEndCorner\n              };\n            } else {\n              newCoords.end = currentTouch;\n            }\n            break;\n          case 'SE-NW':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: currentTouch,\n                end: topStartCorner\n              };\n            } else {\n              newCoords.end = currentTouch;\n            }\n            break;\n          case 'SW-NE':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: currentTouch,\n                end: topEndCorner\n              };\n            } else {\n              newCoords.end = currentTouch;\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'SW-NE':\n        switch (currentDirection) {\n          case 'NW-SE':\n            if (draggedHandle === 'bottom') {\n              newCoords = {\n                start: this.hot._createCellCoords(currentTouch.row, topStartCorner.col),\n                end: this.hot._createCellCoords(bottomStartCorner.row, currentTouch.col)\n              };\n            } else {\n              newCoords = {\n                start: this.hot._createCellCoords(topStartCorner.row, currentTouch.col),\n                end: this.hot._createCellCoords(currentTouch.row, bottomEndCorner.col)\n              };\n            }\n            break;\n          // case 'NE-SW':\n          //\n          //  break;\n          case 'SW-NE':\n            if (draggedHandle === 'top') {\n              newCoords = {\n                start: this.hot._createCellCoords(selectedRange.highlight.row, currentTouch.col),\n                end: this.hot._createCellCoords(currentTouch.row, bottomEndCorner.col)\n              };\n            } else {\n              newCoords = {\n                start: this.hot._createCellCoords(currentTouch.row, topStartCorner.col),\n                end: this.hot._createCellCoords(topStartCorner.row, currentTouch.col)\n              };\n            }\n            break;\n          case 'SE-NW':\n            if (draggedHandle === 'bottom') {\n              newCoords = {\n                start: this.hot._createCellCoords(currentTouch.row, topEndCorner.col),\n                end: this.hot._createCellCoords(topStartCorner.row, currentTouch.col)\n              };\n            } else if (draggedHandle === 'top') {\n              newCoords = {\n                start: bottomStartCorner,\n                end: currentTouch\n              };\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'SE-NW':\n        switch (currentDirection) {\n          case 'NW-SE':\n          case 'NE-SW':\n          case 'SW-NE':\n            if (draggedHandle === 'top') {\n              newCoords.end = currentTouch;\n            }\n            break;\n          case 'SE-NW':\n            if (draggedHandle === 'top') {\n              newCoords.end = currentTouch;\n            } else {\n              newCoords = {\n                start: currentTouch,\n                end: topStartCorner\n              };\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    return newCoords;\n  }\n\n  /**\n   * Check if user is currently dragging the handle.\n   *\n   * @returns {boolean} Dragging state.\n   */\n  isDragged() {\n    return this.dragged.length > 0;\n  }\n}", "/**\n * @typedef {object} DefaultHeaderSettings\n * @property {string} label The name/label of the column header.\n * @property {number} colspan Current calculated colspan value of the rendered column header element.\n * @property {number} origColspan Original colspan value, set once while parsing user-defined nested header settings.\n * @property {boolean} collapsible The flag determines whether the node is collapsible (can be collapsed/expanded).\n * @property {number[]} crossHiddenColumns The list of visual column indexes which indicates that the specified columns within\n *                                         the header settings are hidden.\n * @property {boolean} isCollapsed The flag determines whether the node is collapsed.\n * @property {boolean} isHidden The flag determines whether the column header at specified index is hidden. If true\n *                              the TH element will be rendered as hidden (display: none).\n * @property {boolean} isRoot The flag which determines whether the column header settings is actually not renderable. That kind\n *                            of objects are generated after colspaned header to fill an array to correct size.\n *                            For example for header with colspan = 8 the 7 blank objects are generated to fill the array settings\n *                            to length = 8.\n * @property {boolean} isPlaceholder The flag determines whether the column header at the specified index is non-renderable.\n */\n\n/**\n * Creates the header settings object with default values.\n *\n * @param {DefaultHeaderSettings} initialValues The initial values for the header settings object.\n * @returns {DefaultHeaderSettings}\n */\nexport function createDefaultHeaderSettings() {\n  let {\n    label = '',\n    colspan = 1,\n    origColspan = 1,\n    collapsible = false,\n    crossHiddenColumns = [],\n    isCollapsed = false,\n    isHidden = false,\n    isRoot = false,\n    isPlaceholder = false\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    label,\n    colspan,\n    origColspan,\n    collapsible,\n    isCollapsed,\n    crossHiddenColumns,\n    isHidden,\n    isRoot,\n    isPlaceholder\n  };\n}\n\n/**\n * Creates the placeholder header settings object. Those settings tell the header renderers\n * that this TH element should not be rendered (the node will be overlapped by the previously\n * created node with colspan bigger than 1).\n *\n * @returns {object}\n */\nexport function createPlaceholderHeaderSettings() {\n  return {\n    label: '',\n    isPlaceholder: true\n  };\n}", "import \"core-js/modules/es.array.push.js\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport { isObject } from \"../../../helpers/object.mjs\";\nimport { stringify } from \"../../../helpers/mixed.mjs\";\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\n/**\n * A function that normalizes user-defined settings into one predictable\n * structure. Currently, the developer can declare nested headers by passing\n * the following unstructured (and sometimes uncompleted) array.\n *   [\n *     [{ label: 'A1', colspan: 2 }],\n *     [{ label: true }, 'B2', 4],\n *     [],\n *   ]\n *\n * The normalization process equalizes the length of columns to each header\n * layers to the same length and generates object settings with a common shape.\n * So the above mentioned example will be normalized into this:\n *   [\n *     [\n *       { label: 'A1', colspan: 2, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: true, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: 'true', colspan: 1, isHidden: false, ... },\n *       { label: 'B2', colspan: 1, isHidden: false, ... },\n *       { label: '4', colspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, isHidden: false, ... },\n *     ],\n *   ]\n *\n * @param {Array[]} sourceSettings An array with defined nested headers settings.\n * @param {number} [columnsLimit=Infinity] A number of columns to which the structure\n *                                         will be trimmed. While trimming the colspan\n *                                         values are adjusted to preserve the original\n *                                         structure.\n * @returns {Array[]}\n */\nexport function normalizeSettings(sourceSettings) {\n  let columnsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  const normalizedSettings = [];\n  if (columnsLimit === 0) {\n    return normalizedSettings;\n  }\n\n  // Normalize array items (header settings) into one shape - literal object with default props.\n  arrayEach(sourceSettings, headersSettings => {\n    const columns = [];\n    let columnIndex = 0;\n    normalizedSettings.push(columns);\n    arrayEach(headersSettings, sourceHeaderSettings => {\n      const headerSettings = createDefaultHeaderSettings();\n      if (isObject(sourceHeaderSettings)) {\n        const {\n          label,\n          colspan\n        } = sourceHeaderSettings;\n        headerSettings.label = stringify(label);\n        if (typeof colspan === 'number' && colspan > 1) {\n          headerSettings.colspan = colspan;\n          headerSettings.origColspan = colspan;\n        }\n      } else {\n        headerSettings.label = stringify(sourceHeaderSettings);\n      }\n      columnIndex += headerSettings.origColspan;\n      let cancelProcessing = false;\n      if (columnIndex >= columnsLimit) {\n        // Adjust the colspan value to not overlap the columns limit.\n        headerSettings.colspan = headerSettings.origColspan - (columnIndex - columnsLimit);\n        headerSettings.origColspan = headerSettings.colspan;\n        cancelProcessing = true;\n      }\n      columns.push(headerSettings);\n      if (headerSettings.colspan > 1) {\n        for (let i = 0; i < headerSettings.colspan - 1; i++) {\n          columns.push(createPlaceholderHeaderSettings());\n        }\n      }\n      return !cancelProcessing;\n    });\n  });\n  const columnsLength = Math.max(...arrayMap(normalizedSettings, headersSettings => headersSettings.length));\n\n  // Normalize the length of each header layer to the same columns length.\n  arrayEach(normalizedSettings, headersSettings => {\n    if (headersSettings.length < columnsLength) {\n      const defaultSettings = arrayMap(new Array(columnsLength - headersSettings.length), () => createDefaultHeaderSettings());\n      headersSettings.splice(headersSettings.length, 0, ...defaultSettings);\n    }\n  });\n  return normalizedSettings;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { extend, isObject } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { normalizeSettings } from \"./settingsNormalizer.mjs\";\n/**\n * List of properties which are configurable. That properties can be changed using public API.\n *\n * @type {string[]}\n */\nexport const HEADER_CONFIGURABLE_PROPS = ['label', 'collapsible'];\n\n/**\n * The class manages and normalizes settings passed by the developer\n * into the nested headers plugin. The SourceSettings class is a\n * source of truth for tree builder (HeaderTree) module.\n *\n * @private\n * @class SourceSettings\n */\nvar _data = /*#__PURE__*/new WeakMap();\nvar _dataLength = /*#__PURE__*/new WeakMap();\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\nexport default class SourceSettings {\n  constructor() {\n    /**\n     * The normalized source data (normalized user-defined settings for nested headers).\n     *\n     * @private\n     * @type {Array[]}\n     */\n    _classPrivateFieldInitSpec(this, _data, {\n      writable: true,\n      value: []\n    });\n    /**\n     * The total length of the nested header layers.\n     *\n     * @private\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _dataLength, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * Columns count limit value trims source settings to that value. If columns\n     * count limit intersects nested header, the header's colspan value is reduced\n     * to keep the whole structure stable (trimmed precisely where the limit is set).\n     *\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _columnsLimit, {\n      writable: true,\n      value: Infinity\n    });\n  }\n  /**\n   * Sets columns limit to the source settings will be trimmed. All headers which\n   * overlap the column limit will be reduced to keep the structure solid.\n   *\n   * @param {number} columnsCount The number of columns to limit to.\n   */\n  setColumnsLimit(columnsCount) {\n    _classPrivateFieldSet(this, _columnsLimit, columnsCount);\n  }\n\n  /**\n   * Sets a new nested header configuration.\n   *\n   * @param {Array[]} [nestedHeadersSettings=[]] The user-defined nested headers settings.\n   */\n  setData() {\n    let nestedHeadersSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classPrivateFieldSet(this, _data, normalizeSettings(nestedHeadersSettings, _classPrivateFieldGet(this, _columnsLimit)));\n    _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _data).length);\n  }\n\n  /**\n   * Gets normalized source settings.\n   *\n   * @returns {Array[]}\n   */\n  getData() {\n    return _classPrivateFieldGet(this, _data);\n  }\n\n  /**\n   * Merges settings with current source settings.\n   *\n   * @param {object[]} additionalSettings An array of objects with `row`, `col` and additional\n   *                                      properties to merge with current source settings.\n   */\n  mergeWith(additionalSettings) {\n    arrayEach(additionalSettings, _ref => {\n      let {\n        row,\n        col,\n        ...rest\n      } = _ref;\n      const headerSettings = this.getHeaderSettings(row, col);\n      if (headerSettings !== null) {\n        extend(headerSettings, rest, HEADER_CONFIGURABLE_PROPS);\n      }\n    });\n  }\n\n  /**\n   * Maps the current state with a callback. For each source settings the callback function\n   * is called. If the function returns value that value is merged with the source settings.\n   *\n   * @param {Function} callback A function that is called for every header settings.\n   *                            Each time the callback is called, the returned value extends\n   *                            header settings.\n   */\n  map(callback) {\n    arrayEach(_classPrivateFieldGet(this, _data), header => {\n      arrayEach(header, headerSettings => {\n        const propsToExtend = callback({\n          ...headerSettings\n        });\n        if (isObject(propsToExtend)) {\n          extend(headerSettings, propsToExtend, HEADER_CONFIGURABLE_PROPS);\n        }\n      });\n    });\n  }\n\n  /**\n   * Gets source column header settings for a specified header. The returned\n   * object contains information about the header label, its colspan length,\n   * or if it is hidden in the header renderers.\n   *\n   * @param {number} headerLevel Header level (0 = most distant to the table).\n   * @param {number} columnIndex A visual column index.\n   * @returns {object|null}\n   */\n  getHeaderSettings(headerLevel, columnIndex) {\n    var _headersSettings$colu;\n    if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n      return null;\n    }\n    const headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n    if (columnIndex >= headersSettings.length) {\n      return null;\n    }\n    return (_headersSettings$colu = headersSettings[columnIndex]) !== null && _headersSettings$colu !== void 0 ? _headersSettings$colu : null;\n  }\n\n  /**\n   * Gets source of column headers settings for specified headers. If the retrieved column\n   * settings overlap the range \"box\" determined by \"columnIndex\" and \"columnsLength\"\n   * the exception will be thrown.\n   *\n   * @param {number} headerLevel Header level (0 = most distant to the table).\n   * @param {number} columnIndex A visual column index from which the settings will be extracted.\n   * @param {number} [columnsLength=1] The number of columns involved in the extraction of settings.\n   * @returns {object}\n   */\n  getHeadersSettings(headerLevel, columnIndex) {\n    let columnsLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    const headersSettingsChunks = [];\n    if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n      return headersSettingsChunks;\n    }\n    const headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n    let currentLength = 0;\n    for (let i = columnIndex; i < headersSettings.length; i++) {\n      const headerSettings = headersSettings[i];\n      if (headerSettings.isPlaceholder) {\n        throw new Error('The first column settings cannot overlap the other header layers');\n      }\n      currentLength += headerSettings.colspan;\n      headersSettingsChunks.push(headerSettings);\n      if (headerSettings.colspan > 1) {\n        i += headerSettings.colspan - 1;\n      }\n\n      // We met the current sum of the child colspans\n      if (currentLength === columnsLength) {\n        break;\n      }\n      // We exceeds the current sum of the child colspans, the last columns colspan overlaps the \"columnsLength\" length.\n      if (currentLength > columnsLength) {\n        throw new Error('The last column settings cannot overlap the other header layers');\n      }\n    }\n    return headersSettingsChunks;\n  }\n\n  /**\n   * Gets a total number of headers levels.\n   *\n   * @returns {number}\n   */\n  getLayersCount() {\n    return _classPrivateFieldGet(this, _dataLength);\n  }\n\n  /**\n   * Gets a total number of columns count.\n   *\n   * @returns {number}\n   */\n  getColumnsCount() {\n    return _classPrivateFieldGet(this, _dataLength) > 0 ? _classPrivateFieldGet(this, _data)[0].length : 0;\n  }\n\n  /**\n   * Clears the data.\n   */\n  clear() {\n    _classPrivateFieldSet(this, _data, []);\n    _classPrivateFieldSet(this, _dataLength, 0);\n  }\n}", "function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\n/**\n * Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR)).\n *\n * @type {string}\n */\nexport const TRAVERSAL_DF_PRE = 'DF-pre-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nexport function depthFirstPreOrder(callback, context) {\n  let continueTraverse = callback.call(context, this);\n  for (let i = 0; i < this.childs.length; i++) {\n    if (continueTraverse === false) {\n      return false;\n    }\n    continueTraverse = depthFirstPreOrder.call(this.childs[i], callback, context);\n  }\n  return continueTraverse;\n}\n\n/**\n * Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR)).\n *\n * @type {string}\n */\nexport const TRAVERSAL_DF_POST = 'DF-post-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nfunction depthFirstPostOrder(callback, context) {\n  for (let i = 0; i < this.childs.length; i++) {\n    const continueTraverse = depthFirstPostOrder.call(this.childs[i], callback, context);\n    if (continueTraverse === false) {\n      return false;\n    }\n  }\n  return callback.call(context, this);\n}\n\n/**\n * Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n *\n * @type {string}\n */\nexport const TRAVERSAL_BF = 'BF';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n */\nfunction breadthFirst(callback, context) {\n  const queue = [this];\n\n  /**\n   * Internal processor.\n   */\n  function process() {\n    if (queue.length === 0) {\n      return;\n    }\n    const node = queue.shift();\n    queue.push(...node.childs);\n    if (callback.call(context, node) !== false) {\n      process();\n    }\n  }\n  process();\n}\n\n/**\n * Default strategy for tree traversal.\n *\n * @type {string}\n */\nconst DEFAULT_TRAVERSAL_STRATEGY = TRAVERSAL_BF;\n/**\n * Collection of all available tree traversal strategies.\n *\n * @type {Map<string, Function>}\n */\nconst TRAVERSAL_STRATEGIES = new Map([[TRAVERSAL_DF_PRE, depthFirstPreOrder], [TRAVERSAL_DF_POST, depthFirstPostOrder], [TRAVERSAL_BF, breadthFirst]]);\n\n/**\n *\n */\nexport default class TreeNode {\n  constructor(data) {\n    /**\n     * A tree data.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"data\", {});\n    /**\n     * A parent node.\n     *\n     * @type {TreeNode}\n     */\n    _defineProperty(this, \"parent\", null);\n    /**\n     * A tree leaves.\n     *\n     * @type {TreeNode[]}\n     */\n    _defineProperty(this, \"childs\", []);\n    this.data = data;\n  }\n\n  /**\n   * Adds a node to tree leaves. Added node is linked with the parent node through \"parent\" property.\n   *\n   * @param {TreeNode} node A TreeNode to add.\n   */\n  addChild(node) {\n    node.parent = this;\n    this.childs.push(node);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof TreeNode#\n   * @function cloneTree\n   *\n   * Clones a tree structure deeply.\n   *\n   * For example, for giving a tree structure:\n   *      .--(B1)--.\n   *   .-(C1)   .-(C2)-.----.\n   *  (D1)     (D2)   (D3) (D4)\n   *\n   * Cloning a tree starting from C2 node creates a mirrored tree structure.\n   *     .-(C2')-.-----.\n   *    (D2')   (D3') (D4')\n   *\n   * The cloned tree can be safely modified without affecting the original structure.\n   * After modification, the clone can be merged with a tree using the \"replaceTreeWith\" method.\n   *\n   * @param {TreeNode} [nodeTree=this] A TreeNode to clone.\n   * @returns {TreeNode}\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  cloneTree() {\n    let nodeTree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n    const clonedNode = new TreeNode({\n      ...nodeTree.data\n    });\n    for (let i = 0; i < nodeTree.childs.length; i++) {\n      clonedNode.addChild(this.cloneTree(nodeTree.childs[i]));\n    }\n    return clonedNode;\n  }\n\n  /**\n   * Replaces the current node with a passed tree structure.\n   *\n   * @param {TreeNode} nodeTree A TreeNode to replace with.\n   */\n  replaceTreeWith(nodeTree) {\n    this.data = {\n      ...nodeTree.data\n    };\n    this.childs = [];\n    for (let i = 0; i < nodeTree.childs.length; i++) {\n      this.addChild(nodeTree.childs[i]);\n    }\n  }\n\n  /**\n   * Traverses the tree structure through node childs. The walk down traversing supports\n   * a three different strategies.\n   *  - Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR));\n   *  - Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR));\n   *  - Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n   *\n   * @param {Function} callback The callback function which will be called for each node.\n   * @param {string} [traversalStrategy=DEFAULT_TRAVERSAL_STRATEGY] Traversing strategy.\n   */\n  walkDown(callback) {\n    let traversalStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_TRAVERSAL_STRATEGY;\n    if (!TRAVERSAL_STRATEGIES.has(traversalStrategy)) {\n      throw new Error(`Traversal strategy \"${traversalStrategy}\" does not exist`);\n    }\n    TRAVERSAL_STRATEGIES.get(traversalStrategy).call(this, callback, this);\n  }\n\n  /**\n   * Traverses the tree structure through node parents.\n   *\n   * @param {Function} callback The callback function which will be called for each node.\n   */\n  walkUp(callback) {\n    const context = this;\n    const process = node => {\n      const continueTraverse = callback.call(context, node);\n      if (continueTraverse !== false && node.parent !== null) {\n        process(node.parent);\n      }\n    };\n    process(this);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport TreeNode from \"../../../utils/dataStructures/tree.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @private\n * @class HeadersTree\n *\n * The header tree class keeps nested header settings in the tree\n * structure for easier node manipulation (e.q collapse or expand column).\n * That trees represent the current state of the nested headers. From the\n * trees, the matrix is generated for nested header renderers.\n *\n * The second role of the module is validation. While building the tree,\n * there is check whether the configuration contains overlapping\n * headers. If true, then the exception is thrown.\n *\n * The tree is static; it means that its column indexing never changes\n * even when a collapsing header is performed. The structure is based\n * on visual column indexes.\n *\n * For example, for that header configuration:\n *   +----+----+----+----+----+\n *   │ A1                │ A2 │\n *   +----+----+----+----+----+\n *   │ B1           │ B2 │ B3 │\n *   +----+----+----+----+----+\n *   │ C1      │ C2 │ C3 │ C4 │\n *   +----+----+----+----+----+\n *\n * The tree structures look like:\n *                (0)                      (4)           // a visual column index\n *                 │                        │\n *        .------(A1)------.              (A2)--.\n *   .--(B1)--.           (B2)--.              (B3)--.\n *  (C1)     (C2)              (C3)                 (C4)\n *\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nvar _rootNodes = /*#__PURE__*/new WeakMap();\nvar _rootsIndex = /*#__PURE__*/new WeakMap();\nvar _sourceSettings = /*#__PURE__*/new WeakMap();\nexport default class HeadersTree {\n  constructor(sourceSettings) {\n    /**\n     * The collection of nested headers settings structured into trees. The root trees are stored\n     * under the visual column index.\n     *\n     * @private\n     * @type {Map<number, TreeNode>}\n     */\n    _classPrivateFieldInitSpec(this, _rootNodes, {\n      writable: true,\n      value: new Map()\n    });\n    /**\n     * A map that translates the visual column indexes that intersect the range\n     * defined by the header colspan width to the root index.\n     *\n     * @private\n     * @type {Map<number, number>}\n     */\n    _classPrivateFieldInitSpec(this, _rootsIndex, {\n      writable: true,\n      value: new Map()\n    });\n    /**\n     * The instance of the SourceSettings class.\n     *\n     * @private\n     * @type {SourceSettings}\n     */\n    _classPrivateFieldInitSpec(this, _sourceSettings, {\n      writable: true,\n      value: null\n    });\n    _classPrivateFieldSet(this, _sourceSettings, sourceSettings);\n  }\n\n  /**\n   * Gets an array of the all root nodes.\n   *\n   * @returns {TreeNode[]}\n   */\n  getRoots() {\n    return Array.from(_classPrivateFieldGet(this, _rootNodes).values());\n  }\n\n  /**\n   * Gets a root node by specified visual column index.\n   *\n   * @param {number} columnIndex A visual column index.\n   * @returns {TreeNode|undefined}\n   */\n  getRootByColumn(columnIndex) {\n    let node;\n    if (_classPrivateFieldGet(this, _rootsIndex).has(columnIndex)) {\n      node = _classPrivateFieldGet(this, _rootNodes).get(_classPrivateFieldGet(this, _rootsIndex).get(columnIndex));\n    }\n    return node;\n  }\n\n  /**\n   * Gets a tree node by its position in the grid settings.\n   *\n   * @param {number} headerLevel Header level index (there is support only for positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {TreeNode|undefined}\n   */\n  getNode(headerLevel, columnIndex) {\n    const rootNode = this.getRootByColumn(columnIndex);\n    if (!rootNode) {\n      return;\n    }\n\n    // Normalize the visual column index to a 0-based system for a specific \"box\" defined\n    // by root node colspan width.\n    const normColumnIndex = columnIndex - _classPrivateFieldGet(this, _rootsIndex).get(columnIndex);\n    let columnCursor = 0;\n    let treeNode;\n\n    // Collect all parent nodes that depend on the collapsed node.\n    rootNode.walkDown(node => {\n      const {\n        data: {\n          origColspan,\n          headerLevel: nodeHeaderLevel\n        }\n      } = node;\n      if (headerLevel === nodeHeaderLevel) {\n        if (normColumnIndex >= columnCursor && normColumnIndex <= columnCursor + origColspan - 1) {\n          treeNode = node;\n          treeNode.data.isRoot = columnIndex === treeNode.data.columnIndex;\n          return false; // Cancel tree traversing.\n        }\n\n        columnCursor += origColspan;\n      }\n    });\n    return treeNode;\n  }\n\n  /**\n   * Builds (or rebuilds if called again) root nodes indexes.\n   */\n  rebuildTreeIndex() {\n    let columnIndex = 0;\n    _classPrivateFieldGet(this, _rootsIndex).clear();\n    arrayEach(_classPrivateFieldGet(this, _rootNodes), _ref => {\n      let [, {\n        data: {\n          colspan\n        }\n      }] = _ref;\n      // Map tree range (colspan range/width) into visual column index of the root node.\n      for (let i = columnIndex; i < columnIndex + colspan; i++) {\n        _classPrivateFieldGet(this, _rootsIndex).set(i, columnIndex);\n      }\n      columnIndex += colspan;\n    });\n  }\n\n  /**\n   * Builds trees based on SourceSettings class. Calling a method causes clearing the tree state built\n   * from the previous call.\n   */\n  buildTree() {\n    this.clear();\n    const columnsCount = _classPrivateFieldGet(this, _sourceSettings).getColumnsCount();\n    let columnIndex = 0;\n    while (columnIndex < columnsCount) {\n      const columnSettings = _classPrivateFieldGet(this, _sourceSettings).getHeaderSettings(0, columnIndex);\n      const rootNode = new TreeNode();\n      _classPrivateFieldGet(this, _rootNodes).set(columnIndex, rootNode);\n      this.buildLeaves(rootNode, columnIndex, 0, columnSettings.origColspan);\n      columnIndex += columnSettings.origColspan;\n    }\n    this.rebuildTreeIndex();\n  }\n\n  /**\n   * Builds leaves for specified tree node.\n   *\n   * @param {TreeNode} parentNode A node to which the leaves applies.\n   * @param {number} columnIndex A visual column index.\n   * @param {number} headerLevel Currently processed header level.\n   * @param {number} [extractionLength=1] Determines column extraction length for node children.\n   */\n  buildLeaves(parentNode, columnIndex, headerLevel) {\n    let extractionLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    const columnsSettings = _classPrivateFieldGet(this, _sourceSettings).getHeadersSettings(headerLevel, columnIndex, extractionLength);\n    headerLevel += 1;\n    arrayEach(columnsSettings, columnSettings => {\n      const nodeData = {\n        ...columnSettings,\n        /**\n         * The header level (tree node depth level).\n         *\n         * @type {number}\n         */\n        headerLevel: headerLevel - 1,\n        /**\n         * A visual column index.\n         *\n         * @type {number}\n         */\n        columnIndex\n      };\n      let node;\n      if (headerLevel === 1) {\n        // fill the root node\n        parentNode.data = nodeData;\n        node = parentNode;\n      } else {\n        node = new TreeNode(nodeData);\n        parentNode.addChild(node);\n      }\n      if (headerLevel < _classPrivateFieldGet(this, _sourceSettings).getLayersCount()) {\n        this.buildLeaves(node, columnIndex, headerLevel, columnSettings.origColspan);\n      }\n      columnIndex += columnSettings.origColspan;\n    });\n  }\n\n  /**\n   * Clears the tree to the initial state.\n   */\n  clear() {\n    _classPrivateFieldGet(this, _rootNodes).clear();\n    _classPrivateFieldGet(this, _rootsIndex).clear();\n  }\n}", "/**\n * Traverses the tree nodes and calls a callback when no hidden node is found. The callback\n * is called with visual column index then.\n *\n * @param {TreeNode} node A tree node to traverse.\n * @param {Function} callback The callback function which will be called for each node.\n */\nexport function traverseHiddenNodeColumnIndexes(node, callback) {\n  node.walkDown(_ref => {\n    let {\n      data,\n      childs\n    } = _ref;\n    if (!data.isHidden) {\n      callback(data.columnIndex);\n      if (childs.length === 0) {\n        for (let i = 1; i < data.colspan; i++) {\n          callback(data.columnIndex + i);\n        }\n      }\n    }\n  });\n}\n\n/**\n * A tree helper for retrieving a data from the first child.\n *\n * @param {TreeNode} node A tree node to check.\n * @param {string} propertyName A name of the property whose value you want to get.\n * @returns {*}\n */\nexport function getFirstChildProperty(_ref2, propertyName) {\n  let {\n    childs\n  } = _ref2;\n  if (childs.length === 0) {\n    return;\n  }\n  return childs[0].data[propertyName];\n}\n\n/**\n * A tree helper which checks if passed node has the same original colspan as its\n * first child. In that case the node is treated as \"mirrored\" or \"reflected\" every\n * action performed on one of that nodes should be reflected to other \"mirrored\" node.\n *\n * In that case nodes A1 and A2 are \"reflected\"\n *   +----+----+----+----+\n *   | A1      | B1      |\n *   +----+----+----+----+\n *   | A2      | B2 | B3 |\n *   +----+----+----+----+.\n *\n * @param {TreeNode} node A tree node to check.\n * @returns {boolean}\n */\nexport function isNodeReflectsFirstChildColspan(node) {\n  return getFirstChildProperty(node, 'origColspan') === node.data.origColspan;\n}", "import { arrayEach } from \"../../../../helpers/array.mjs\";\nimport { collapseNode } from \"./collapse.mjs\";\nimport { getFirstChildProperty, isNodeReflectsFirstChildColspan, traverseHiddenNodeColumnIndexes } from \"./utils/tree.mjs\";\n/**\n * Expanding a node is a process where the processing node is expanded to\n * its original colspan width. To restore an original state of all node\n * children on the right, the modified nodes are replaced with the cloned\n * nodes (they were cloned while collapsing).\n *\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @returns {object} Returns an object with properties:\n *                    - rollbackModification: The function that rollbacks\n *                      the tree to the previous state.\n *                    - affectedColumns: The list of the visual column\n *                      indexes which are affected. That list is passed\n *                      to the hiddens column logic.\n *                    - colspanCompensation: The number of colspan by\n *                      which the processed node colspan was increased.\n */\nexport function expandNode(nodeToProcess) {\n  const {\n    data: nodeData,\n    childs: nodeChilds\n  } = nodeToProcess;\n  if (!nodeData.isCollapsed || nodeData.isHidden || nodeData.origColspan <= 1) {\n    return {\n      rollbackModification: () => {},\n      affectedColumns: [],\n      colspanCompensation: 0\n    };\n  }\n  const isNodeReflected = isNodeReflectsFirstChildColspan(nodeToProcess);\n  if (isNodeReflected) {\n    return expandNode(nodeChilds[0]);\n  }\n  nodeData.isCollapsed = false;\n  const allLeavesExceptMostLeft = nodeChilds.slice(1);\n  const affectedColumns = new Set();\n  let colspanCompensation = 0;\n  if (allLeavesExceptMostLeft.length > 0) {\n    arrayEach(allLeavesExceptMostLeft, node => {\n      // Restore original state of the collapsed headers.\n      node.replaceTreeWith(node.data.clonedTree);\n      node.data.clonedTree = null;\n      const leafData = node.data;\n\n      // Calculate by how many colspan it needs to increase the headings to match them to\n      // the colspan width of all its children.\n      colspanCompensation += leafData.colspan;\n      traverseHiddenNodeColumnIndexes(node, gridColumnIndex => {\n        affectedColumns.add(gridColumnIndex);\n      });\n    });\n  } else {\n    const {\n      colspan,\n      origColspan,\n      columnIndex\n    } = nodeData;\n\n    // In a case when the node doesn't have any children restore the colspan width to\n    // its original state.\n    colspanCompensation = origColspan - colspan;\n\n    // Add column to \"affected\" started from 1. The header without children can not be\n    // collapsed so the first column is already visible and we shouldn't touch it.\n    for (let i = 1; i < origColspan; i++) {\n      affectedColumns.add(columnIndex + i);\n    }\n  }\n  nodeToProcess.walkUp(node => {\n    const {\n      data\n    } = node;\n    data.colspan += colspanCompensation;\n    if (data.colspan >= data.origColspan) {\n      data.colspan = data.origColspan;\n      data.isCollapsed = false;\n    } else if (isNodeReflectsFirstChildColspan(node)) {\n      data.isCollapsed = getFirstChildProperty(node, 'isCollapsed');\n    }\n  });\n  return {\n    rollbackModification: () => collapseNode(nodeToProcess),\n    affectedColumns: Array.from(affectedColumns),\n    colspanCompensation\n  };\n}", "import { arrayEach } from \"../../../../helpers/array.mjs\";\nimport { expandNode } from \"./expand.mjs\";\nimport { getFirstChildProperty, isNodeReflectsFirstChildColspan, traverseHiddenNodeColumnIndexes } from \"./utils/tree.mjs\";\n/**\n * Collapsing a node is a process where the processing node is collapsed\n * to the colspan width of the first child. All node children, except the\n * first one, are hidden. To prevent losing a current state of node children\n * on the right, all nodes are cloned (and restored while expanding), and\n * only then original nodes are modified (hidden in this case).\n *\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @returns {object} Returns an object with properties:\n *                    - rollbackModification: The function that rollbacks\n *                      the tree to the previous state.\n *                    - affectedColumns: The list of the visual column\n *                      indexes which are affected. That list is passed\n *                      to the hiddens column logic.\n *                    - colspanCompensation: The number of colspan by\n *                      which the processed node colspan was reduced.\n */\nexport function collapseNode(nodeToProcess) {\n  var _getFirstChildPropert;\n  const {\n    data: nodeData,\n    childs: nodeChilds\n  } = nodeToProcess;\n  if (nodeData.isCollapsed || nodeData.isHidden || nodeData.origColspan <= 1) {\n    return {\n      rollbackModification: () => {},\n      affectedColumns: [],\n      colspanCompensation: 0\n    };\n  }\n  const isNodeReflected = isNodeReflectsFirstChildColspan(nodeToProcess);\n  if (isNodeReflected) {\n    return collapseNode(nodeChilds[0]);\n  }\n  nodeData.isCollapsed = true;\n  const allLeavesExceptMostLeft = nodeChilds.slice(1);\n  const affectedColumns = new Set();\n  if (allLeavesExceptMostLeft.length > 0) {\n    arrayEach(allLeavesExceptMostLeft, node => {\n      traverseHiddenNodeColumnIndexes(node, gridColumnIndex => {\n        affectedColumns.add(gridColumnIndex);\n      });\n\n      // Clone the tree to preserve original tree state after header expanding.\n      node.data.clonedTree = node.cloneTree();\n\n      // Hide all leaves except the first leaf on the left (on headers context hide all\n      // headers on the right).\n      node.walkDown(_ref => {\n        let {\n          data\n        } = _ref;\n        data.isHidden = true;\n      });\n    });\n  } else {\n    const {\n      origColspan,\n      columnIndex\n    } = nodeData;\n\n    // Add column to \"affected\" started from 1. The header without children can not be\n    // collapsed so the first have to be visible (untouched).\n    for (let i = 1; i < origColspan; i++) {\n      const gridColumnIndex = columnIndex + i;\n      affectedColumns.add(gridColumnIndex);\n    }\n  }\n\n  // Calculate by how many colspan it needs to reduce the headings to match them to\n  // the first child colspan width.\n  const colspanCompensation = nodeData.colspan - ((_getFirstChildPropert = getFirstChildProperty(nodeToProcess, 'colspan')) !== null && _getFirstChildPropert !== void 0 ? _getFirstChildPropert : 1);\n  nodeToProcess.walkUp(node => {\n    const {\n      data\n    } = node;\n    data.colspan -= colspanCompensation;\n    if (data.colspan <= 1) {\n      data.colspan = 1;\n      data.isCollapsed = true;\n    } else if (isNodeReflectsFirstChildColspan(node)) {\n      data.isCollapsed = getFirstChildProperty(node, 'isCollapsed');\n    }\n  });\n  return {\n    rollbackModification: () => expandNode(nodeToProcess),\n    affectedColumns: Array.from(affectedColumns),\n    colspanCompensation\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { toSingleLine } from \"../../../../helpers/templateLiteralTag.mjs\";\n/**\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @param {number} gridColumnIndex The visual column index that triggers the node modification.\n *                                 The index can be between the root node column index and\n *                                 column index plus node colspan length.\n */\nexport function hideColumn(nodeToProcess, gridColumnIndex) {\n  if (!Number.isInteger(gridColumnIndex)) {\n    throw new Error('The passed gridColumnIndex argument has invalid type.');\n  }\n  if (nodeToProcess.childs.length > 0) {\n    throw new Error(toSingleLine`The passed node is not the last node on the tree. Only for\\x20\nthe last node, the hide column modification can be applied.`);\n  }\n  const {\n    crossHiddenColumns\n  } = nodeToProcess.data;\n  if (crossHiddenColumns.includes(gridColumnIndex)) {\n    return;\n  }\n  let isCollapsibleNode = false;\n  nodeToProcess.walkUp(node => {\n    const {\n      data: {\n        collapsible\n      }\n    } = node;\n    if (collapsible) {\n      isCollapsibleNode = true;\n      return false; // Cancel tree traversing\n    }\n  });\n\n  // TODO: When the node is collapsible do not hide the column. Currently collapsible headers\n  // does not work with hidden columns (hidden index map types).\n  if (isCollapsibleNode) {\n    return;\n  }\n  nodeToProcess.walkUp(node => {\n    const {\n      data\n    } = node;\n    data.crossHiddenColumns.push(gridColumnIndex);\n    if (data.colspan > 1) {\n      data.colspan -= 1;\n    } else {\n      data.isHidden = true;\n    }\n  });\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { toSingleLine } from \"../../../../helpers/templateLiteralTag.mjs\";\n/**\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @param {number} gridColumnIndex The visual column index that triggers the node modification.\n *                                 The index can be between the root node column index and\n *                                 column index plus node colspan length.\n */\nexport function showColumn(nodeToProcess, gridColumnIndex) {\n  if (!Number.isInteger(gridColumnIndex)) {\n    throw new Error('The passed gridColumnIndex argument has invalid type.');\n  }\n  if (nodeToProcess.childs.length > 0) {\n    throw new Error(toSingleLine`The passed node is not the last node on the tree. Only for\\x20\nthe last node, the show column modification can be applied.`);\n  }\n  const {\n    crossHiddenColumns\n  } = nodeToProcess.data;\n  if (!crossHiddenColumns.includes(gridColumnIndex)) {\n    return;\n  }\n  let isCollapsibleNode = false;\n  nodeToProcess.walkUp(node => {\n    const {\n      data: {\n        collapsible\n      }\n    } = node;\n    if (collapsible) {\n      isCollapsibleNode = true;\n      return false; // Cancel tree traversing\n    }\n  });\n\n  // TODO: When the node is collapsible do not show the column. Currently collapsible headers\n  // does not work with hidden columns (hidden index map types).\n  if (isCollapsibleNode) {\n    return;\n  }\n  nodeToProcess.walkUp(node => {\n    const {\n      data\n    } = node;\n    data.crossHiddenColumns.splice(data.crossHiddenColumns.indexOf(gridColumnIndex), 1);\n    if (!data.isHidden && data.colspan < data.origColspan) {\n      data.colspan += 1;\n    }\n    data.isHidden = false;\n  });\n}", "import \"core-js/modules/es.error.cause.js\";\n/**\n * The NodeModifiers module is responsible for the modification of a tree structure\n * in a way to achieve new column headers state.\n */\nimport { collapseNode } from \"./collapse.mjs\";\nimport { expandNode } from \"./expand.mjs\";\nimport { hideColumn } from \"./hideColumn.mjs\";\nimport { showColumn } from \"./showColumn.mjs\";\nconst availableModifiers = new Map([['collapse', collapseNode], ['expand', expandNode], ['hide-column', hideColumn], ['show-column', showColumn]]);\n\n/**\n * An entry point for triggering a node modifiers. If the triggered action\n * does not exist the exception is thrown.\n *\n * @param {string} actionName An action name to trigger.\n * @param {TreeNode} nodeToProcess A tree node to process.\n * @param {number} gridColumnIndex The visual column index that comes from the nested headers grid.\n *                                 The index, as opposed to the `columnIndex` in the tree node\n *                                 (which describes the column index of the root node of the header\n *                                 element), describes the index passed from the grid. Hence, the\n *                                 index can be between the column index of the node and its colspan\n *                                 width.\n * @returns {object}\n */\nexport function triggerNodeModification(actionName, nodeToProcess, gridColumnIndex) {\n  if (!availableModifiers.has(actionName)) {\n    throw new Error(`The node modifier action (\"${actionName}\") does not exist.`);\n  }\n  return availableModifiers.get(actionName)(nodeToProcess, gridColumnIndex);\n}", "import \"core-js/modules/es.array.push.js\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\n/**\n * A function that dump a tree structure into multidimensional array. That structure is\n * later processed by header renderers to modify TH elements to achieve a proper\n * DOM structure.\n *\n * That structure contains settings object for every TH element generated by Walkontable.\n * The matrix operates on visual column index.\n *\n * Output example:\n *   [\n *     [\n *       { label: 'A1', colspan: 2, origColspan: 2, isHidden: false, ... },\n *       { label: '', colspan: 1, origColspan: 1, isHidden: true, ... },\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: 'true', colspan: 1, origColspan: 1, isHidden: false, ... },\n *       { label: 'B2', colspan: 1, origColspan: 1, isHidden: false, ... },\n *       { label: '4', colspan: 1, origColspan: 1, isHidden: false, ... },\n *     ],\n *     [\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\n *     ],\n *   ]\n *\n * @param {TreeNode[]} headerRoots An array of root nodes.\n * @returns {Array[]}\n */\nexport function generateMatrix(headerRoots) {\n  const matrix = [];\n  arrayEach(headerRoots, rootNode => {\n    rootNode.walkDown(node => {\n      const nodeData = node.data;\n      const {\n        origColspan,\n        columnIndex,\n        headerLevel,\n        crossHiddenColumns\n      } = nodeData;\n      const colspanHeaderLayer = createNestedArrayIfNecessary(matrix, headerLevel);\n      let isRootSettingsFound = false;\n      for (let i = columnIndex; i < columnIndex + origColspan; i++) {\n        const isColumnHidden = crossHiddenColumns.includes(i);\n        if (isColumnHidden || isRootSettingsFound) {\n          colspanHeaderLayer.push(createPlaceholderHeaderSettings(nodeData));\n        } else {\n          const headerRootSettings = createHeaderSettings(nodeData);\n          headerRootSettings.isRoot = true;\n          colspanHeaderLayer.push(headerRootSettings);\n          isRootSettingsFound = true;\n        }\n      }\n    });\n  });\n  return matrix;\n}\n\n/**\n * Creates header settings object.\n *\n * @param {object} nodeData The tree data object.\n * @returns {object}\n */\nfunction createHeaderSettings(nodeData) {\n  // For the matrix module we do not need to export \"crossHiddenColumns\" key. It's redundant here.\n  const {\n    crossHiddenColumns,\n    ...headerRootSettings\n  } = createDefaultHeaderSettings(nodeData);\n  return headerRootSettings;\n}\n\n/**\n * Internal helper which ensures that subarray exists under specified index.\n *\n * @param {Array[]} array An array to check.\n * @param {number} index An array index under the subarray should be checked.\n * @returns {Array}\n */\nfunction createNestedArrayIfNecessary(array, index) {\n  let subArray;\n  if (Array.isArray(array[index])) {\n    subArray = array[index];\n  } else {\n    subArray = [];\n    array[index] = subArray;\n  }\n  return subArray;\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { arrayMap, arrayReduce } from \"../../../helpers/array.mjs\";\nimport SourceSettings from \"./sourceSettings.mjs\";\nimport HeadersTree from \"./headersTree.mjs\";\nimport { triggerNodeModification } from \"./nodeModifiers/index.mjs\";\nimport { generateMatrix } from \"./matrixGenerator.mjs\";\nimport { TRAVERSAL_DF_PRE } from \"../../../utils/dataStructures/tree.mjs\";\n/**\n * The state manager is a source of truth for nested headers configuration.\n * The state generation process is divided into three stages.\n *\n *   +---------------------+  1. User-defined configuration normalization;\n *   │                     │  The source settings class normalizes and shares API for\n *   │   SourceSettings    │  raw settings passed by the developer. It is only consumed by\n *   │                     │  the header tree module.\n *   +---------------------+\n *             │\n *            \\│/\n *   +---------------------+  2. Building a tree structure for validation and easier node manipulation;\n *   │                     │  The header tree generates a tree based on source settings for future\n *   │     HeadersTree     │  node manipulation (such as collapsible columns feature). While generating a tree\n *   │                     │  the source settings is checked to see if the configuration has overlapping headers.\n *   +---------------------+  If `true` the colspan matrix generation is skipped, overlapped headers are not supported.\n *             │\n *            \\│/\n *   +---------------------+  3. Matrix generation;\n *   │                     │  Based on built trees the matrix generation is performed. That part of code\n *   │  matrix generation  │  generates an array structure similar to normalized data from the SourceSettings\n *   │                     │  but with the difference that this structure contains column settings which changed\n *   +---------------------+  during runtime (after the tree manipulation) e.q after collapse or expand column.\n *                            That settings describes how the TH element should be modified (colspan attribute,\n *                            CSS classes, etc) for a specific column and layer level.\n *\n * @class StateManager\n */\nvar _sourceSettings = /*#__PURE__*/new WeakMap();\nvar _headersTree = /*#__PURE__*/new WeakMap();\nvar _stateMatrix = /*#__PURE__*/new WeakMap();\nexport default class StateManager {\n  constructor() {\n    /**\n     * The instance of the source settings class.\n     *\n     * @private\n     * @type {SourceSettings}\n     */\n    _classPrivateFieldInitSpec(this, _sourceSettings, {\n      writable: true,\n      value: new SourceSettings()\n    });\n    /**\n     * The instance of the headers tree. The tree is generated after setting new configuration data.\n     *\n     * @private\n     * @type {HeadersTree}\n     */\n    _classPrivateFieldInitSpec(this, _headersTree, {\n      writable: true,\n      value: new HeadersTree(_classPrivateFieldGet(this, _sourceSettings))\n    });\n    /**\n     * Cached matrix which is generated from the tree structure.\n     *\n     * @private\n     * @type {Array[]}\n     */\n    _classPrivateFieldInitSpec(this, _stateMatrix, {\n      writable: true,\n      value: [[]]\n    });\n  }\n  /**\n   * Sets a new state for the nested headers plugin based on settings passed\n   * directly to the plugin.\n   *\n   * @param {Array[]} nestedHeadersSettings The user-defined settings.\n   * @returns {boolean} Returns `true` if the settings are processed correctly, `false` otherwise.\n   */\n  setState(nestedHeadersSettings) {\n    _classPrivateFieldGet(this, _sourceSettings).setData(nestedHeadersSettings);\n    let hasError = false;\n    try {\n      _classPrivateFieldGet(this, _headersTree).buildTree();\n    } catch (ex) {\n      _classPrivateFieldGet(this, _headersTree).clear();\n      _classPrivateFieldGet(this, _sourceSettings).clear();\n      hasError = true;\n    }\n    _classPrivateFieldSet(this, _stateMatrix, generateMatrix(_classPrivateFieldGet(this, _headersTree).getRoots()));\n    return hasError;\n  }\n\n  /**\n   * Sets columns limit to the state will be trimmed. All headers (colspans) which\n   * overlap the column limit will be reduced to keep the structure solid.\n   *\n   * @param {number} columnsCount The number of columns to limit to.\n   */\n  setColumnsLimit(columnsCount) {\n    _classPrivateFieldGet(this, _sourceSettings).setColumnsLimit(columnsCount);\n  }\n\n  /**\n   * Merges settings with current plugin state.\n   *\n   * By default only foreign keys are merged with source state and passed to the tree. But only\n   * known keys are exported to matrix.\n   *\n   * @param {object[]} settings An array of objects to merge with the current source settings.\n   *                            It is a requirement that every object has `row` and `col` properties\n   *                            which points to the specific header settings object.\n   */\n  mergeStateWith(settings) {\n    const transformedSettings = arrayMap(settings, _ref => {\n      let {\n        row,\n        ...rest\n      } = _ref;\n      return {\n        row: row < 0 ? this.rowCoordsToLevel(row) : row,\n        ...rest\n      };\n    });\n    _classPrivateFieldGet(this, _sourceSettings).mergeWith(transformedSettings);\n    _classPrivateFieldGet(this, _headersTree).buildTree();\n    _classPrivateFieldSet(this, _stateMatrix, generateMatrix(_classPrivateFieldGet(this, _headersTree).getRoots()));\n  }\n\n  /**\n   * Maps the current state with a callback. For each header settings the callback function\n   * is called. If the function returns value that value is merged with the state.\n   *\n   * By default only foreign keys are merged with source state and passed to the tree. But only\n   * known keys are exported to matrix.\n   *\n   * @param {Function} callback A function that is called for every header source settings.\n   *                            Each time the callback is called, the returned value extends\n   *                            header settings.\n   */\n  mapState(callback) {\n    _classPrivateFieldGet(this, _sourceSettings).map(callback);\n    _classPrivateFieldGet(this, _headersTree).buildTree();\n    _classPrivateFieldSet(this, _stateMatrix, generateMatrix(_classPrivateFieldGet(this, _headersTree).getRoots()));\n  }\n\n  /**\n   * Maps the current tree nodes with a callback. For each node the callback function\n   * is called. If the function returns value that value is added to returned array.\n   *\n   * @param {Function} callback A function that is called for every tree node.\n   *                            Each time the callback is called, the returned value is\n   *                            added to returned array.\n   * @returns {Array}\n   */\n  mapNodes(callback) {\n    return arrayReduce(_classPrivateFieldGet(this, _headersTree).getRoots(), (acc, rootNode) => {\n      rootNode.walkDown(node => {\n        const result = callback(node.data);\n        if (result !== undefined) {\n          acc.push(result);\n        }\n      });\n      return acc;\n    }, []);\n  }\n\n  /**\n   * Triggers an action (e.g. \"collapse\") from the NodeModifiers module. The module\n   * modifies a tree structure in such a way as to obtain the correct structure consistent with the\n   * called action.\n   *\n   * @param {string} action An action name to trigger.\n   * @param {number} headerLevel Header level index (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {object|undefined}\n   */\n  triggerNodeModification(action, headerLevel, columnIndex) {\n    if (headerLevel < 0) {\n      headerLevel = this.rowCoordsToLevel(headerLevel);\n    }\n    const nodeToProcess = _classPrivateFieldGet(this, _headersTree).getNode(headerLevel, columnIndex);\n    let actionResult;\n    if (nodeToProcess) {\n      actionResult = triggerNodeModification(action, nodeToProcess, columnIndex);\n\n      // TODO (perf-tip): Trigger matrix generation once after multiple node modifications.\n      _classPrivateFieldSet(this, _stateMatrix, generateMatrix(_classPrivateFieldGet(this, _headersTree).getRoots()));\n    }\n    return actionResult;\n  }\n\n  /**\n   * Triggers an action (e.g. \"hide-column\") from the NodeModifiers module. The action is\n   * triggered starting from the lowest header. The module modifies a tree structure in\n   * such a way as to obtain the correct structure consistent with the called action.\n   *\n   * @param {string} action An action name to trigger.\n   * @param {number} columnIndex A visual column index.\n   * @returns {object|undefined}\n   */\n  triggerColumnModification(action, columnIndex) {\n    return this.triggerNodeModification(action, -1, columnIndex);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof StateManager#\n   * @function rowCoordsToLevel\n   *\n   * Translates row coordinates into header level. The row coordinates counts from -1 to -N\n   * and describes headers counting from most closest to most distant from the table.\n   * The header levels are counted from 0 to N where 0 describes most distant header\n   * from the table.\n   *\n   *  Row coords             Header level\n   *           +--------------+\n   *       -3  │ A1 │ A1      │  0\n   *           +--------------+\n   *       -2  │ B1 │ B2 │ B3 │  1\n   *           +--------------+\n   *       -1  │ C1 │ C2 │ C3 │  2\n   *           +==============+\n   *           │    │    │    │\n   *           +--------------+\n   *           │    │    │    │\n   *\n   * @param {number} rowIndex A visual row index.\n   * @returns {number|null} Returns unsigned number.\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  rowCoordsToLevel(rowIndex) {\n    if (rowIndex >= 0) {\n      return null;\n    }\n    const headerLevel = rowIndex + Math.max(this.getLayersCount(), 1);\n    if (headerLevel < 0) {\n      return null;\n    }\n    return headerLevel;\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof StateManager#\n   * @function levelToRowCoords\n   *\n   * Translates header level into row coordinates. The row coordinates counts from -1 to -N\n   * and describes headers counting from most closest to most distant from the table.\n   * The header levels are counted from 0 to N where 0 describes most distant header\n   * from the table.\n   *\n   *  Header level            Row coords\n   *           +--------------+\n   *        0  │ A1 │ A1      │  -3\n   *           +--------------+\n   *        1  │ B1 │ B2 │ B3 │  -2\n   *           +--------------+\n   *        2  │ C1 │ C2 │ C3 │  -1\n   *           +==============+\n   *           │    │    │    │\n   *           +--------------+\n   *           │    │    │    │\n   *\n   * @param {number} headerLevel Header level index.\n   * @returns {number} Returns negative number.\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  levelToRowCoords(headerLevel) {\n    if (headerLevel < 0) {\n      return null;\n    }\n    const rowIndex = headerLevel - Math.max(this.getLayersCount(), 1);\n    if (rowIndex >= 0) {\n      return null;\n    }\n    return rowIndex;\n  }\n\n  /**\n   * Gets column header settings for a specified column and header index. The returned object contains\n   * all information necessary for header renderers. It contains header label, colspan length, or hidden\n   * flag.\n   *\n   * @param {number} headerLevel Header level (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {object|null}\n   */\n  getHeaderSettings(headerLevel, columnIndex) {\n    var _classPrivateFieldGet2, _classPrivateFieldGet3;\n    if (headerLevel < 0) {\n      headerLevel = this.rowCoordsToLevel(headerLevel);\n    }\n    if (headerLevel === null || headerLevel >= this.getLayersCount()) {\n      return null;\n    }\n    return (_classPrivateFieldGet2 = (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _stateMatrix)[headerLevel]) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3[columnIndex]) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : null;\n  }\n\n  /**\n   * Gets tree data that is connected to the column header. The returned object contains all information\n   * necessary for modifying tree structure (column collapsing, hiding, etc.). It contains a header\n   * label, colspan length, or visual column index that indicates which column index the node is rendered from.\n   *\n   * @param {number} headerLevel Header level (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {object|null}\n   */\n  getHeaderTreeNodeData(headerLevel, columnIndex) {\n    const node = this.getHeaderTreeNode(headerLevel, columnIndex);\n    if (!node) {\n      return null;\n    }\n    return {\n      ...node.data\n    };\n  }\n\n  /**\n   * Gets tree node that is connected to the column header.\n   *\n   * @param {number} headerLevel Header level (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {TreeNode|null}\n   */\n  getHeaderTreeNode(headerLevel, columnIndex) {\n    if (headerLevel < 0) {\n      headerLevel = this.rowCoordsToLevel(headerLevel);\n    }\n    if (headerLevel === null || headerLevel >= this.getLayersCount()) {\n      return null;\n    }\n    const node = _classPrivateFieldGet(this, _headersTree).getNode(headerLevel, columnIndex);\n    if (!node) {\n      return null;\n    }\n    return node;\n  }\n\n  /**\n   * Finds the most top header level of the column header that is rendered entirely within\n   * the passed visual columns range. If multiple columns headers are found within the range the\n   * most top header level value will be returned.\n   *\n   * @param {number} columnIndexFrom A visual column index.\n   * @param {number} [columnIndexTo] A visual column index.\n   * @returns {number} Returns a header level in format -1 to -N.\n   */\n  findTopMostEntireHeaderLevel(columnIndexFrom) {\n    var _headerLevel;\n    let columnIndexTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : columnIndexFrom;\n    const columnsWidth = columnIndexTo - columnIndexFrom + 1;\n    let atLeastOneRootFound = false;\n    let headerLevel = null;\n    for (let columnIndex = columnIndexFrom; columnIndex <= columnIndexTo; columnIndex++) {\n      const rootNode = _classPrivateFieldGet(this, _headersTree).getRootByColumn(columnIndex);\n      if (!rootNode) {\n        break;\n      }\n      atLeastOneRootFound = true;\n\n      // eslint-disable-next-line\n      rootNode.walkDown(node => {\n        const {\n          columnIndex: nodeColumnIndex,\n          headerLevel: nodeHeaderLevel,\n          origColspan,\n          isHidden\n        } = node.data;\n        if (isHidden) {\n          return;\n        }\n\n        // if the header fits entirely within the columns range get and save the node header level\n        if (origColspan <= columnsWidth && nodeColumnIndex >= columnIndexFrom && nodeColumnIndex + origColspan - 1 <= columnIndexTo && (headerLevel === null || nodeHeaderLevel < headerLevel)) {\n          headerLevel = nodeHeaderLevel;\n        }\n      }, TRAVERSAL_DF_PRE);\n    }\n    if (atLeastOneRootFound && headerLevel === null) {\n      return -1;\n    }\n    return this.levelToRowCoords((_headerLevel = headerLevel) !== null && _headerLevel !== void 0 ? _headerLevel : 0);\n  }\n\n  /**\n   * The method is helpful in cases where the column index targets in-between currently\n   * collapsed column. In that case, the method returns the left-most column index\n   * where the nested header begins.\n   *\n   * @param {number} headerLevel Header level (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {number}\n   */\n  findLeftMostColumnIndex(headerLevel, columnIndex) {\n    var _this$getHeaderSettin;\n    const {\n      isRoot\n    } = (_this$getHeaderSettin = this.getHeaderSettings(headerLevel, columnIndex)) !== null && _this$getHeaderSettin !== void 0 ? _this$getHeaderSettin : {\n      isRoot: true\n    };\n    if (isRoot) {\n      return columnIndex;\n    }\n    let stepBackColumn = columnIndex - 1;\n    while (stepBackColumn >= 0) {\n      var _this$getHeaderSettin2;\n      const {\n        isRoot: isRootNode\n      } = (_this$getHeaderSettin2 = this.getHeaderSettings(headerLevel, stepBackColumn)) !== null && _this$getHeaderSettin2 !== void 0 ? _this$getHeaderSettin2 : {\n        isRoot: true\n      };\n      if (isRootNode) {\n        break;\n      }\n      stepBackColumn -= 1;\n    }\n    return stepBackColumn;\n  }\n\n  /**\n   * The method is helpful in cases where the column index targets in-between currently\n   * collapsed column. In that case, the method returns the right-most column index\n   * where the nested header ends.\n   *\n   * @param {number} headerLevel Header level (there is support for negative and positive values).\n   * @param {number} columnIndex A visual column index.\n   * @returns {number}\n   */\n  findRightMostColumnIndex(headerLevel, columnIndex) {\n    var _this$getHeaderSettin3;\n    const {\n      isRoot,\n      origColspan\n    } = (_this$getHeaderSettin3 = this.getHeaderSettings(headerLevel, columnIndex)) !== null && _this$getHeaderSettin3 !== void 0 ? _this$getHeaderSettin3 : {\n      isRoot: true,\n      origColspan: 1\n    };\n    if (isRoot) {\n      return columnIndex + origColspan - 1;\n    }\n    let stepForthColumn = columnIndex + 1;\n    while (stepForthColumn < this.getColumnsCount()) {\n      var _this$getHeaderSettin4;\n      const {\n        isRoot: isRootNode\n      } = (_this$getHeaderSettin4 = this.getHeaderSettings(headerLevel, stepForthColumn)) !== null && _this$getHeaderSettin4 !== void 0 ? _this$getHeaderSettin4 : {\n        isRoot: true\n      };\n      if (isRootNode) {\n        break;\n      }\n      stepForthColumn += 1;\n    }\n    return stepForthColumn - 1;\n  }\n\n  /**\n   * Gets a total number of headers levels.\n   *\n   * @returns {number}\n   */\n  getLayersCount() {\n    return _classPrivateFieldGet(this, _sourceSettings).getLayersCount();\n  }\n\n  /**\n   * Gets a total number of columns count.\n   *\n   * @returns {number}\n   */\n  getColumnsCount() {\n    return _classPrivateFieldGet(this, _sourceSettings).getColumnsCount();\n  }\n\n  /**\n   * Clears the column state manager to the initial state.\n   */\n  clear() {\n    _classPrivateFieldSet(this, _stateMatrix, []);\n    _classPrivateFieldGet(this, _sourceSettings).clear();\n    _classPrivateFieldGet(this, _headersTree).clear();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { fastInnerHTML } from \"../../../helpers/dom/element.mjs\";\n/**\n * The class generates the nested headers structure in the DOM and reads the column width for\n * each column. The hierarchy is built only for visible, non-hidden columns. Each time the\n * column is shown or hidden, the structure is rebuilt, and the width of the columns in the\n * map updated.\n *\n * @private\n */\nclass GhostTable {\n  constructor(hot, nestedHeaderSettingsGetter) {\n    /**\n     * Reference to the Handsontable instance.\n     *\n     * @private\n     * @type {Handsontable}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * The function for retrieving the nested headers settings.\n     *\n     * @private\n     * @type {Function}\n     */\n    _defineProperty(this, \"nestedHeaderSettingsGetter\", void 0);\n    /**\n     * The value that holds information about the number of the nested header layers (header rows).\n     *\n     * @private\n     * @type {number}\n     */\n    _defineProperty(this, \"layersCount\", 0);\n    /**\n     * Temporary element created to get minimal headers widths.\n     *\n     * @private\n     * @type {*}\n     */\n    _defineProperty(this, \"container\", void 0);\n    /**\n     * PhysicalIndexToValueMap to keep and track of the columns' widths.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _defineProperty(this, \"widthsMap\", void 0);\n    this.hot = hot;\n    this.nestedHeaderSettingsGetter = nestedHeaderSettingsGetter;\n    this.widthsMap = this.hot.columnIndexMapper.createAndRegisterIndexMap('nestedHeaders.widthsMap', 'physicalIndexToValue');\n  }\n\n  /**\n   * Sets the number of nested headers layers count.\n   *\n   * @param {number} layersCount Total number of headers levels.\n   * @returns {GhostTable}\n   */\n  setLayersCount(layersCount) {\n    this.layersCount = layersCount;\n    return this;\n  }\n\n  /**\n   * Gets the column width based on the visual column index.\n   *\n   * @param {number} visualColumn Visual column index.\n   * @returns {number|null}\n   */\n  getWidth(visualColumn) {\n    return this.widthsMap.getValueAtIndex(this.hot.toPhysicalColumn(visualColumn));\n  }\n\n  /**\n   * Build cache of the headers widths.\n   */\n  buildWidthsMap() {\n    this.container = this.hot.rootDocument.createElement('div');\n    this.container.classList.add('handsontable', 'htGhostTable', 'htAutoSize');\n    this._buildGhostTable(this.container);\n    this.hot.rootDocument.body.appendChild(this.container);\n    const columns = this.container.querySelectorAll('tr:last-of-type th');\n    const maxColumns = columns.length;\n    this.widthsMap.clear();\n    for (let column = 0; column < maxColumns; column++) {\n      const visualColumnsIndex = this.hot.columnIndexMapper.getVisualFromRenderableIndex(column);\n      const physicalColumnIndex = this.hot.toPhysicalColumn(visualColumnsIndex);\n      this.widthsMap.setValueAtIndex(physicalColumnIndex, columns[column].offsetWidth);\n    }\n    this.container.parentNode.removeChild(this.container);\n    this.container = null;\n  }\n\n  /**\n   * Build temporary table for getting minimal columns widths.\n   *\n   * @private\n   * @param {HTMLElement} container The element where the DOM nodes are injected.\n   */\n  _buildGhostTable(container) {\n    const {\n      rootDocument,\n      columnIndexMapper\n    } = this.hot;\n    const fragment = rootDocument.createDocumentFragment();\n    const table = rootDocument.createElement('table');\n    const isDropdownEnabled = !!this.hot.getSettings().dropdownMenu;\n    const maxRenderedCols = columnIndexMapper.getRenderableIndexesLength();\n    for (let row = 0; row < this.layersCount; row++) {\n      const tr = rootDocument.createElement('tr');\n      for (let col = 0; col < maxRenderedCols; col++) {\n        let visualColumnsIndex = columnIndexMapper.getVisualFromRenderableIndex(col);\n        if (visualColumnsIndex === null) {\n          visualColumnsIndex = col;\n        }\n        const th = rootDocument.createElement('th');\n        const headerSettings = this.nestedHeaderSettingsGetter(row, visualColumnsIndex);\n        if (headerSettings && (!headerSettings.isPlaceholder || headerSettings.isHidden)) {\n          let label = headerSettings.label;\n          if (isDropdownEnabled) {\n            label += '<button class=\"changeType\"></button>';\n          }\n          fastInnerHTML(th, label);\n          th.colSpan = headerSettings.colspan;\n          tr.appendChild(th);\n        }\n      }\n      table.appendChild(tr);\n    }\n    fragment.appendChild(table);\n    container.appendChild(fragment);\n  }\n\n  /**\n   * Clear the widths cache.\n   */\n  clear() {\n    this.widthsMap.clear();\n    this.container = null;\n  }\n}\nexport default GhostTable;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isNumeric, clamp } from \"../../helpers/number.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { isLeftClick, isRightClick } from \"../../helpers/dom/event.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { ACTIVE_HEADER_TYPE, HEADER_TYPE } from \"../../selection/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport StateManager from \"./stateManager/index.mjs\";\nimport GhostTable from \"./utils/ghostTable.mjs\";\nexport const PLUGIN_KEY = 'nestedHeaders';\nexport const PLUGIN_PRIORITY = 280;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin NestedHeaders\n * @class NestedHeaders\n *\n * @description\n * The plugin allows to create a nested header structure, using the HTML's colspan attribute.\n *\n * To make any header wider (covering multiple table columns), it's corresponding configuration array element should be\n * provided as an object with `label` and `colspan` properties. The `label` property defines the header's label,\n * while the `colspan` property defines a number of columns that the header should cover.\n *\n * __Note__ that the plugin supports a *nested* structure, which means, any header cannot be wider than it's \"parent\". In\n * other words, headers cannot overlap each other.\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   nestedHeaders: [\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ],\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   nestedHeaders={[\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ]}\n * />\n * ```\n * :::\n */\nvar _stateManager = /*#__PURE__*/new WeakMap();\nvar _hidingIndexMapObserver = /*#__PURE__*/new WeakMap();\nvar _focusInitialCoords = /*#__PURE__*/new WeakMap();\nvar _isColumnsSelectionInProgress = /*#__PURE__*/new WeakMap();\nvar _updateFocusHighlightPosition = /*#__PURE__*/new WeakSet();\nvar _onBeforeViewportScrollHorizontally = /*#__PURE__*/new WeakSet();\nvar _onBeforeHighlightingColumnHeader = /*#__PURE__*/new WeakSet();\nvar _onBeforeCopy = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onAfterOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseUp = /*#__PURE__*/new WeakSet();\nvar _onBeforeSelectionHighlightSet = /*#__PURE__*/new WeakSet();\nvar _onModifyTransformStart = /*#__PURE__*/new WeakSet();\nvar _onBeforeSelectColumns = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColumnHeaderRenderers = /*#__PURE__*/new WeakSet();\nvar _onAfterViewportColumnCalculatorOverride = /*#__PURE__*/new WeakSet();\nvar _onModifyColWidth = /*#__PURE__*/new WeakSet();\nvar _onModifyColumnHeaderValue = /*#__PURE__*/new WeakSet();\nvar _onModifyFocusedElement = /*#__PURE__*/new WeakSet();\nvar _onInit = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class NestedHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Updates the plugin state after new dataset load.\n     *\n     * @param {Array[]} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded\n     *                              during the initialization.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * Updates the plugin state after HoT initialization.\n     */\n    _classPrivateMethodInitSpec(this, _onInit);\n    /**\n     * `modifyFocusedElement` hook callback.\n     *\n     * @param {number} row Row index.\n     * @param {number} column Column index.\n     * @returns {HTMLTableCellElement} The `TH` element to be focused.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyFocusedElement);\n    /**\n     * Listens the `modifyColumnHeaderValue` hook that overwrites the column headers values based on\n     * the internal state and settings of the plugin.\n     *\n     * @param {string} value The column header value.\n     * @param {number} visualColumnIndex The visual column index.\n     * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n     *                             and negative (-1 to -N) values. For positive values, 0 points to the\n     *                             top most header, and for negative direction, -1 points to the most bottom\n     *                             header (the header closest to the cells).\n     * @returns {string} Returns the column header value to update.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColumnHeaderValue);\n    /**\n     * `modifyColWidth` hook callback - returns width from cache, when is greater than incoming from hook.\n     *\n     * @param {number} width Width from hook.\n     * @param {number} column Visual index of an column.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColWidth);\n    /**\n     * Make the renderer render the first nested column in its entirety.\n     *\n     * @param {object} calc Viewport column calculator.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterViewportColumnCalculatorOverride);\n    /**\n     * `afterGetColumnHeader` hook callback - prepares the header structure.\n     *\n     * @param {Array} renderersArray Array of renderers.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColumnHeaderRenderers);\n    /**\n     * The hook observes the column selection from the Selection API and modifies the column range to\n     * ensure that the whole nested column will be covered.\n     *\n     * @param {CellCoords} from The coords object where the selection starts.\n     * @param {CellCoords} to The coords object where the selection ends.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeSelectColumns);\n    /**\n     * `modifyTransformStart` hook is called every time the keyboard navigation is used.\n     *\n     * @param {object} delta The transformation delta.\n     */\n    _classPrivateMethodInitSpec(this, _onModifyTransformStart);\n    /**\n     * The hook checks and ensures that the focus position that depends on the selected columns\n     * range is always positioned within the range.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeSelectionHighlightSet);\n    /**\n     * Switches internal flag about selection progress to `false`.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseUp);\n    /**\n     * Makes the header-selection properly select the nested headers.\n     *\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseOver);\n    /**\n     * Allows to control how the column selection based on the coordinates and the nested headers is made.\n     *\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterOnCellMouseDown);\n    /**\n     * Allows blocking the column selection that is controlled by the core Selection module.\n     *\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {CellCoords} TD The table cell or header element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Listens the `beforeCopy` hook that allows processing the copied column headers so that the\n     * merged column headers do not propagate the value for each column but only once at the beginning\n     * of the column.\n     *\n     * @private\n     * @param {Array[]} data An array of arrays which contains data to copied.\n     * @param {object[]} copyableRanges An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\n     *                                  which will copied.\n     * @param {{ columnHeadersCount: number }} copiedHeadersCount An object with keys that holds information with\n     *                                                            the number of copied headers.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeCopy);\n    /**\n     * Allows to control which header DOM element will be used to highlight.\n     *\n     * @param {number} visualColumn A visual column index of the highlighted row header.\n     * @param {number} headerLevel A row header level that is currently highlighted.\n     * @param {object} highlightMeta An object with meta data that describes the highlight state.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeHighlightingColumnHeader);\n    /**\n     * Allows to control to which column index the viewport will be scrolled. To ensure that the viewport\n     * is scrolled to the correct column for the nested header the most left and the most right visual column\n     * indexes are used.\n     *\n     * @param {number} visualColumn A visual column index to which the viewport will be scrolled.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeViewportScrollHorizontally);\n    /**\n     * Updates the selection focus highlight position to point to the nested header root element (TH)\n     * even when the logical coordinates point in-between the header.\n     */\n    _classPrivateMethodInitSpec(this, _updateFocusHighlightPosition);\n    /**\n     * The state manager for the nested headers.\n     *\n     * @type {StateManager}\n     */\n    _classPrivateFieldInitSpec(this, _stateManager, {\n      writable: true,\n      value: new StateManager()\n    });\n    /**\n     * The instance of the ChangesObservable class that allows track the changes that happens in the\n     * column indexes.\n     *\n     * @type {ChangesObservable}\n     */\n    _classPrivateFieldInitSpec(this, _hidingIndexMapObserver, {\n      writable: true,\n      value: null\n    });\n    /**\n     * Holds the coords that points to the place where the column selection starts.\n     *\n     * @type {number|null}\n     */\n    _classPrivateFieldInitSpec(this, _focusInitialCoords, {\n      writable: true,\n      value: null\n    });\n    /**\n     * Determines if there is performed the column selection.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isColumnsSelectionInProgress, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Custom helper for getting widths of the nested headers.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n    // @TODO This should be changed after refactor handsontable/utils/ghostTable.\n    _defineProperty(this, \"ghostTable\", new GhostTable(this.hot, (row, column) => this.getHeaderSettings(row, column)));\n    /**\n     * The flag which determines that the nested header settings contains overlapping headers\n     * configuration.\n     *\n     * @type {boolean}\n     */\n    _defineProperty(this, \"detectedOverlappedHeaders\", false);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Check if plugin is enabled.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const {\n      nestedHeaders\n    } = this.hot.getSettings();\n    if (!Array.isArray(nestedHeaders) || !Array.isArray(nestedHeaders[0])) {\n      warn(toSingleLine`Your Nested Headers plugin configuration is invalid. The settings has to be\\x20\n                        passed as an array of arrays e.q. [['A1', { label: 'A2', colspan: 2 }]]`);\n    }\n    this.addHook('init', () => _classPrivateMethodGet(this, _onInit, _onInit2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('afterOnCellMouseDown', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterOnCellMouseDown, _onAfterOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseOver', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseOver, _onBeforeOnCellMouseOver2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseUp', function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseUp, _onBeforeOnCellMouseUp2).call(_this, ...args);\n    });\n    this.addHook('beforeSelectionHighlightSet', function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeSelectionHighlightSet, _onBeforeSelectionHighlightSet2).call(_this, ...args);\n    });\n    this.addHook('modifyTransformStart', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _classPrivateMethodGet(_this, _onModifyTransformStart, _onModifyTransformStart2).call(_this, ...args);\n    });\n    this.addHook('afterSelection', () => _classPrivateMethodGet(this, _updateFocusHighlightPosition, _updateFocusHighlightPosition2).call(this));\n    this.addHook('beforeViewportScrollHorizontally', function () {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeViewportScrollHorizontally, _onBeforeViewportScrollHorizontally2).call(_this, ...args);\n    });\n    this.addHook('afterGetColumnHeaderRenderers', array => _classPrivateMethodGet(this, _onAfterGetColumnHeaderRenderers, _onAfterGetColumnHeaderRenderers2).call(this, array));\n    this.addHook('modifyColWidth', function () {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      return _classPrivateMethodGet(_this, _onModifyColWidth, _onModifyColWidth2).call(_this, ...args);\n    });\n    this.addHook('modifyColumnHeaderValue', function () {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      return _classPrivateMethodGet(_this, _onModifyColumnHeaderValue, _onModifyColumnHeaderValue2).call(_this, ...args);\n    });\n    this.addHook('beforeHighlightingColumnHeader', function () {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeHighlightingColumnHeader, _onBeforeHighlightingColumnHeader2).call(_this, ...args);\n    });\n    this.addHook('beforeCopy', function () {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeCopy, _onBeforeCopy2).call(_this, ...args);\n    });\n    this.addHook('beforeSelectColumns', function () {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeSelectColumns, _onBeforeSelectColumns2).call(_this, ...args);\n    });\n    this.addHook('afterViewportColumnCalculatorOverride', function () {\n      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n        args[_key14] = arguments[_key14];\n      }\n      return _classPrivateMethodGet(_this, _onAfterViewportColumnCalculatorOverride, _onAfterViewportColumnCalculatorOverride2).call(_this, ...args);\n    });\n    this.addHook('modifyFocusedElement', function () {\n      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n        args[_key15] = arguments[_key15];\n      }\n      return _classPrivateMethodGet(_this, _onModifyFocusedElement, _onModifyFocusedElement2).call(_this, ...args);\n    });\n    this.hot.columnIndexMapper.addLocalHook('cacheUpdated', () => _classPrivateMethodGet(this, _updateFocusHighlightPosition, _updateFocusHighlightPosition2).call(this));\n    this.hot.rowIndexMapper.addLocalHook('cacheUpdated', () => _classPrivateMethodGet(this, _updateFocusHighlightPosition, _updateFocusHighlightPosition2).call(this));\n    super.enablePlugin();\n    this.updatePlugin(); // @TODO: Workaround for broken plugin initialization abstraction.\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`nestedHeaders`](@/api/options.md#nestedheaders)\n   */\n  updatePlugin() {\n    if (!this.hot.view) {\n      // @TODO: Workaround for broken plugin initialization abstraction.\n      return;\n    }\n    const {\n      nestedHeaders\n    } = this.hot.getSettings();\n    _classPrivateFieldGet(this, _stateManager).setColumnsLimit(this.hot.countCols());\n    if (Array.isArray(nestedHeaders)) {\n      this.detectedOverlappedHeaders = _classPrivateFieldGet(this, _stateManager).setState(nestedHeaders);\n    }\n    if (this.detectedOverlappedHeaders) {\n      warn(toSingleLine`Your Nested Headers plugin setup contains overlapping headers. This kind of configuration\\x20\n                        is currently not supported.`);\n    }\n    if (this.enabled) {\n      // This line covers the case when a developer uses the external hiding maps to manipulate\n      // the columns' visibility. The tree state built from the settings - which is always built\n      // as if all the columns are visible, needs to be modified to be in sync with a dataset.\n      this.hot.columnIndexMapper.hidingMapsCollection.getMergedValues().forEach((isColumnHidden, physicalColumnIndex) => {\n        const actionName = isColumnHidden === true ? 'hide-column' : 'show-column';\n        _classPrivateFieldGet(this, _stateManager).triggerColumnModification(actionName, physicalColumnIndex);\n      });\n    }\n    if (!_classPrivateFieldGet(this, _hidingIndexMapObserver) && this.enabled) {\n      _classPrivateFieldSet(this, _hidingIndexMapObserver, this.hot.columnIndexMapper.createChangesObserver('hiding').subscribe(changes => {\n        changes.forEach(_ref => {\n          let {\n            op,\n            index: columnIndex,\n            newValue\n          } = _ref;\n          if (op === 'replace') {\n            const actionName = newValue === true ? 'hide-column' : 'show-column';\n            _classPrivateFieldGet(this, _stateManager).triggerColumnModification(actionName, columnIndex);\n          }\n        });\n        this.ghostTable.buildWidthsMap();\n      }));\n    }\n    this.ghostTable.setLayersCount(this.getLayersCount()).buildWidthsMap();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.clearColspans();\n    _classPrivateFieldGet(this, _stateManager).clear();\n    _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n    _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n    this.ghostTable.clear();\n    super.disablePlugin();\n  }\n\n  /**\n   * Returns an instance of the internal state manager of the plugin.\n   *\n   * @private\n   * @returns {StateManager}\n   */\n  getStateManager() {\n    return _classPrivateFieldGet(this, _stateManager);\n  }\n\n  /**\n   * Gets a total number of headers levels.\n   *\n   * @private\n   * @returns {number}\n   */\n  getLayersCount() {\n    return _classPrivateFieldGet(this, _stateManager).getLayersCount();\n  }\n\n  /**\n   * Gets column settings for a specified header. The returned object contains\n   * information about the header label, its colspan length, or if it is hidden\n   * in the header renderers.\n   *\n   * @private\n   * @param {number} headerLevel Header level (0 = most distant to the table).\n   * @param {number} columnIndex A visual column index.\n   * @returns {object}\n   */\n  getHeaderSettings(headerLevel, columnIndex) {\n    return _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, columnIndex);\n  }\n\n  /**\n   * Clear the colspans remaining after plugin usage.\n   *\n   * @private\n   */\n  clearColspans() {\n    if (!this.hot.view) {\n      return;\n    }\n    const {\n      _wt: wt\n    } = this.hot.view;\n    const headerLevels = wt.getSetting('columnHeaders').length;\n    const mainHeaders = wt.wtTable.THEAD;\n    const topHeaders = wt.wtOverlays.topOverlay.clone.wtTable.THEAD;\n    const topLeftCornerHeaders = wt.wtOverlays.topInlineStartCornerOverlay ? wt.wtOverlays.topInlineStartCornerOverlay.clone.wtTable.THEAD : null;\n    for (let i = 0; i < headerLevels; i++) {\n      const masterLevel = mainHeaders.childNodes[i];\n      if (!masterLevel) {\n        break;\n      }\n      const topLevel = topHeaders.childNodes[i];\n      const topLeftCornerLevel = topLeftCornerHeaders ? topLeftCornerHeaders.childNodes[i] : null;\n      for (let j = 0, masterNodes = masterLevel.childNodes.length; j < masterNodes; j++) {\n        masterLevel.childNodes[j].removeAttribute('colspan');\n        removeClass(masterLevel.childNodes[j], 'hiddenHeader');\n        if (topLevel && topLevel.childNodes[j]) {\n          topLevel.childNodes[j].removeAttribute('colspan');\n          removeClass(topLevel.childNodes[j], 'hiddenHeader');\n        }\n        if (topLeftCornerHeaders && topLeftCornerLevel && topLeftCornerLevel.childNodes[j]) {\n          topLeftCornerLevel.childNodes[j].removeAttribute('colspan');\n          removeClass(topLeftCornerLevel.childNodes[j], 'hiddenHeader');\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates the appropriate header renderer for a header row.\n   *\n   * @private\n   * @param {number} headerLevel The index of header level counting from the top (positive\n   *                             values counting from 0 to N).\n   * @returns {Function}\n   * @fires Hooks#afterGetColHeader\n   */\n  headerRendererFactory(headerLevel) {\n    var _this2 = this;\n    const fixedColumnsStart = this.hot.view._wt.getSetting('fixedColumnsStart');\n    return (renderedColumnIndex, TH) => {\n      var _classPrivateFieldGet2;\n      const {\n        columnIndexMapper,\n        view\n      } = this.hot;\n      let visualColumnIndex = columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n      if (visualColumnIndex === null) {\n        visualColumnIndex = renderedColumnIndex;\n      }\n      TH.removeAttribute('colspan');\n      removeClass(TH, 'hiddenHeader');\n      const {\n        colspan,\n        isHidden,\n        isPlaceholder\n      } = (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : {\n        label: ''\n      };\n      if (isPlaceholder || isHidden) {\n        addClass(TH, 'hiddenHeader');\n      } else if (colspan > 1) {\n        var _wtOverlays$topInline, _wtOverlays$inlineSta;\n        const {\n          wtOverlays\n        } = view._wt;\n        const isTopInlineStartOverlay = (_wtOverlays$topInline = wtOverlays.topInlineStartCornerOverlay) === null || _wtOverlays$topInline === void 0 ? void 0 : _wtOverlays$topInline.clone.wtTable.THEAD.contains(TH);\n        const isInlineStartOverlay = (_wtOverlays$inlineSta = wtOverlays.inlineStartOverlay) === null || _wtOverlays$inlineSta === void 0 ? void 0 : _wtOverlays$inlineSta.clone.wtTable.THEAD.contains(TH);\n\n        // Check if there is a fixed column enabled, if so then reduce colspan to fixed column width.\n        const correctedColspan = isTopInlineStartOverlay || isInlineStartOverlay ? Math.min(colspan, fixedColumnsStart - renderedColumnIndex) : colspan;\n        if (correctedColspan > 1) {\n          TH.setAttribute('colspan', correctedColspan);\n        }\n      }\n      this.hot.view.appendColHeader(visualColumnIndex, TH, function () {\n        return _this2.getColumnHeaderValue(...arguments);\n      }, headerLevel);\n    };\n  }\n\n  /**\n   * Returns the column header value for specified column and header level index.\n   *\n   * @private\n   * @param {number} visualColumnIndex Visual column index.\n   * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n   *                             and negative (-1 to -N) values. For positive values, 0 points to the\n   *                             top most header, and for negative direction, -1 points to the most bottom\n   *                             header (the header closest to the cells).\n   * @returns {string} Returns the column header value to update.\n   */\n  getColumnHeaderValue(visualColumnIndex, headerLevel) {\n    var _classPrivateFieldGet3;\n    const {\n      isHidden,\n      isPlaceholder\n    } = (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet3 !== void 0 ? _classPrivateFieldGet3 : {};\n    if (isPlaceholder || isHidden) {\n      return '';\n    }\n    return this.hot.getColHeader(visualColumnIndex, headerLevel);\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldSet(this, _stateManager, null);\n    if (_classPrivateFieldGet(this, _hidingIndexMapObserver) !== null) {\n      _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n      _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n    }\n    super.destroy();\n  }\n\n  /**\n   * Gets the tree data that belongs to the column headers pointed by the passed coordinates.\n   *\n   * @private\n   * @param {CellCoords} coords The CellCoords instance.\n   * @returns {object|undefined}\n   */\n  _getHeaderTreeNodeDataByCoords(coords) {\n    if (coords.row >= 0 || coords.col < 0) {\n      return;\n    }\n    return _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(coords.row, coords.col);\n  }\n}\nfunction _updateFocusHighlightPosition2() {\n  var _this$hot;\n  const selection = (_this$hot = this.hot) === null || _this$hot === void 0 ? void 0 : _this$hot.getSelectedRangeLast();\n  if (!selection) {\n    return;\n  }\n  const {\n    highlight\n  } = selection;\n  const isNestedHeadersRange = highlight.isHeader() && highlight.col >= 0;\n  if (isNestedHeadersRange) {\n    const columnIndex = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(highlight.row, highlight.col);\n    const focusHighlight = this.hot.selection.highlight.getFocus();\n\n    // Correct the highlight/focus selection to highlight the correct TH element\n    focusHighlight.visualCellRange.highlight.col = columnIndex;\n    focusHighlight.visualCellRange.from.col = columnIndex;\n    focusHighlight.visualCellRange.to.col = columnIndex;\n    focusHighlight.commit();\n  }\n}\nfunction _onBeforeViewportScrollHorizontally2(visualColumn) {\n  const selection = this.hot.getSelectedRangeLast();\n  if (!selection) {\n    return visualColumn;\n  }\n  const {\n    highlight\n  } = selection;\n  const isNestedHeadersRange = highlight.isHeader() && highlight.col >= 0;\n  if (!isNestedHeadersRange) {\n    return visualColumn;\n  }\n  const firstColumn = this.hot.view.getFirstFullyVisibleColumn();\n  const lastColumn = this.hot.view.getLastFullyVisibleColumn();\n  const mostLeftColumnIndex = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(highlight.row, highlight.col);\n  const mostRightColumnIndex = _classPrivateFieldGet(this, _stateManager).findRightMostColumnIndex(highlight.row, highlight.col);\n\n  // do not scroll the viewport when the header is wider than the viewport\n  if (mostLeftColumnIndex < firstColumn && mostRightColumnIndex > lastColumn) {\n    return visualColumn;\n  }\n  return mostLeftColumnIndex < firstColumn ? mostLeftColumnIndex : mostRightColumnIndex;\n}\nfunction _onBeforeHighlightingColumnHeader2(visualColumn, headerLevel, highlightMeta) {\n  const headerNodeData = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumn);\n  if (!headerNodeData) {\n    return visualColumn;\n  }\n  const {\n    columnCursor,\n    selectionType,\n    selectionWidth\n  } = highlightMeta;\n  const {\n    isRoot,\n    colspan\n  } = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumn);\n  if (selectionType === HEADER_TYPE) {\n    if (!isRoot) {\n      return headerNodeData.columnIndex;\n    }\n  } else if (selectionType === ACTIVE_HEADER_TYPE) {\n    if (colspan > selectionWidth - columnCursor || !isRoot) {\n      // Prevents adding any CSS class names to the TH element\n      return null;\n    }\n  }\n  return visualColumn;\n}\nfunction _onBeforeCopy2(data, copyableRanges, _ref2) {\n  let {\n    columnHeadersCount\n  } = _ref2;\n  if (columnHeadersCount === 0) {\n    return;\n  }\n  for (let rangeIndex = 0; rangeIndex < copyableRanges.length; rangeIndex++) {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = copyableRanges[rangeIndex];\n    const rowsCount = endRow - startRow + 1;\n    const columnsCount = startCol - endCol + 1;\n\n    // do not process dataset ranges and column headers where only one column is copied\n    if (startRow >= 0 || columnsCount === 1) {\n      break;\n    }\n    for (let column = startCol; column <= endCol; column++) {\n      for (let row = startRow; row <= endRow; row++) {\n        var _classPrivateFieldGet4;\n        const zeroBasedColumnHeaderLevel = rowsCount + row;\n        const zeroBasedColumnIndex = column - startCol;\n        if (zeroBasedColumnIndex === 0) {\n          continue; // eslint-disable-line no-continue\n        }\n\n        const isRoot = (_classPrivateFieldGet4 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(row, column)) === null || _classPrivateFieldGet4 === void 0 ? void 0 : _classPrivateFieldGet4.isRoot;\n        if (isRoot === false) {\n          data[zeroBasedColumnHeaderLevel][zeroBasedColumnIndex] = '';\n        }\n      }\n    }\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  const headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n  if (headerNodeData) {\n    // Block the Selection module in controlling how the columns are selected. Pass the\n    // responsibility of the column selection to this plugin (see \"onAfterOnCellMouseDown\" hook).\n    controller.column = true;\n  }\n}\nfunction _onAfterOnCellMouseDown2(event, coords) {\n  const headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n  if (!headerNodeData) {\n    return;\n  }\n  _classPrivateFieldSet(this, _focusInitialCoords, coords.clone());\n  _classPrivateFieldSet(this, _isColumnsSelectionInProgress, true);\n  const {\n    selection\n  } = this.hot;\n  const currentSelection = selection.isSelected() ? selection.getSelectedRange().current() : null;\n  const columnsToSelect = [];\n  const {\n    columnIndex,\n    origColspan\n  } = headerNodeData;\n\n  // The Selection module doesn't allow it to extend its behavior easily. That's why here we need\n  // to re-implement the \"click\" and \"shift\" behavior. As a workaround, the logic for the nested\n  // headers must implement a similar logic as in the original Selection handler\n  // (see src/selection/mouseEventHandler.js).\n  const allowRightClickSelection = !selection.inInSelection(coords);\n  if (event.shiftKey && currentSelection) {\n    if (coords.col < currentSelection.from.col) {\n      columnsToSelect.push(currentSelection.getTopEndCorner().col, columnIndex, coords.row);\n    } else if (coords.col > currentSelection.from.col) {\n      columnsToSelect.push(currentSelection.getTopStartCorner().col, columnIndex + origColspan - 1, coords.row);\n    } else {\n      columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n    }\n  } else if (isLeftClick(event) || isRightClick(event) && allowRightClickSelection) {\n    columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n  }\n\n  // The plugin takes control of how the columns are selected.\n  selection.selectColumns(...columnsToSelect);\n}\nfunction _onBeforeOnCellMouseOver2(event, coords, TD, controller) {\n  if (!this.hot.view.isMouseDown()) {\n    return;\n  }\n  const headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n  if (!headerNodeData) {\n    return;\n  }\n  const {\n    columnIndex,\n    origColspan\n  } = headerNodeData;\n  const selectedRange = this.hot.getSelectedRangeLast();\n  const topStartCoords = selectedRange.getTopStartCorner();\n  const bottomEndCoords = selectedRange.getBottomEndCorner();\n  const {\n    from\n  } = selectedRange;\n\n  // Block the Selection module in controlling how the columns and cells are selected.\n  // From now on, the plugin is responsible for the selection.\n  controller.column = true;\n  controller.cell = true;\n  const columnsToSelect = [];\n  const headerLevel = clamp(coords.row, -Infinity, -1);\n  if (coords.col < from.col) {\n    columnsToSelect.push(bottomEndCoords.col, columnIndex, headerLevel);\n  } else if (coords.col > from.col) {\n    columnsToSelect.push(topStartCoords.col, columnIndex + origColspan - 1, headerLevel);\n  } else {\n    columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, headerLevel);\n  }\n  this.hot.selection.selectColumns(...columnsToSelect);\n}\nfunction _onBeforeOnCellMouseUp2() {\n  _classPrivateFieldSet(this, _isColumnsSelectionInProgress, false);\n}\nfunction _onBeforeSelectionHighlightSet2() {\n  const {\n    navigableHeaders\n  } = this.hot.getSettings();\n  if (!this.hot.view.isMouseDown() || !_classPrivateFieldGet(this, _isColumnsSelectionInProgress) || !navigableHeaders) {\n    return;\n  }\n  const selectedRange = this.hot.getSelectedRangeLast();\n  const columnStart = selectedRange.getTopStartCorner().col;\n  const columnEnd = selectedRange.getBottomEndCorner().col;\n  const {\n    columnIndex,\n    origColspan\n  } = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(_classPrivateFieldGet(this, _focusInitialCoords).row, _classPrivateFieldGet(this, _focusInitialCoords).col);\n  selectedRange.setHighlight(_classPrivateFieldGet(this, _focusInitialCoords));\n  if (origColspan > selectedRange.getWidth() || columnIndex < columnStart || columnIndex + origColspan - 1 > columnEnd) {\n    const headerLevel = _classPrivateFieldGet(this, _stateManager).findTopMostEntireHeaderLevel(clamp(columnStart, columnIndex, columnIndex + origColspan - 1), clamp(columnEnd, columnIndex, columnIndex + origColspan - 1));\n    selectedRange.highlight.row = headerLevel;\n    selectedRange.highlight.col = selectedRange.from.col;\n  }\n}\nfunction _onModifyTransformStart2(delta) {\n  const {\n    highlight\n  } = this.hot.getSelectedRangeLast();\n  const nextCoords = this.hot._createCellCoords(highlight.row + delta.row, highlight.col + delta.col);\n  const isNestedHeadersRange = nextCoords.isHeader() && nextCoords.col >= 0;\n  if (!isNestedHeadersRange) {\n    return;\n  }\n  const visualColumnIndexStart = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(nextCoords.row, nextCoords.col);\n  const visualColumnIndexEnd = _classPrivateFieldGet(this, _stateManager).findRightMostColumnIndex(nextCoords.row, nextCoords.col);\n  if (delta.col < 0) {\n    const nextColumn = highlight.col >= visualColumnIndexStart && highlight.col <= visualColumnIndexEnd ? visualColumnIndexStart - 1 : visualColumnIndexEnd;\n    const notHiddenColumnIndex = this.hot.columnIndexMapper.getNearestNotHiddenIndex(nextColumn, -1);\n    if (notHiddenColumnIndex === null) {\n      // There are no visible columns anymore, so move the selection out of the table edge. This will\n      // be processed by the selection Transformer class as a move selection to the previous row (if autoWrapRow is enabled).\n      delta.col = -this.hot.view.countRenderableColumnsInRange(0, highlight.col);\n    } else {\n      delta.col = -Math.max(this.hot.view.countRenderableColumnsInRange(notHiddenColumnIndex, highlight.col) - 1, 1);\n    }\n  } else if (delta.col > 0) {\n    const nextColumn = highlight.col >= visualColumnIndexStart && highlight.col <= visualColumnIndexEnd ? visualColumnIndexEnd + 1 : visualColumnIndexStart;\n    const notHiddenColumnIndex = this.hot.columnIndexMapper.getNearestNotHiddenIndex(nextColumn, 1);\n    if (notHiddenColumnIndex === null) {\n      // There are no visible columns anymore, so move the selection out of the table edge. This will\n      // be processed by the selection Transformer class as a move selection to the next row (if autoWrapRow is enabled).\n      delta.col = this.hot.view.countRenderableColumnsInRange(highlight.col, this.hot.countCols());\n    } else {\n      delta.col = Math.max(this.hot.view.countRenderableColumnsInRange(highlight.col, notHiddenColumnIndex) - 1, 1);\n    }\n  }\n}\nfunction _onBeforeSelectColumns2(from, to) {\n  const headerLevel = from.row;\n  const startNodeData = this._getHeaderTreeNodeDataByCoords({\n    row: headerLevel,\n    col: from.col\n  });\n  const endNodeData = this._getHeaderTreeNodeDataByCoords({\n    row: headerLevel,\n    col: to.col\n  });\n  if (to.col < from.col) {\n    // Column selection from right to left\n    if (startNodeData) {\n      from.col = startNodeData.columnIndex + startNodeData.origColspan - 1;\n    }\n    if (endNodeData) {\n      to.col = endNodeData.columnIndex;\n    }\n  } else if (to.col >= from.col) {\n    // Column selection from left to right or a single column selection\n    if (startNodeData) {\n      from.col = startNodeData.columnIndex;\n    }\n    if (endNodeData) {\n      to.col = endNodeData.columnIndex + endNodeData.origColspan - 1;\n    }\n  }\n}\nfunction _onAfterGetColumnHeaderRenderers2(renderersArray) {\n  renderersArray.length = 0;\n  for (let headerLayer = 0; headerLayer < _classPrivateFieldGet(this, _stateManager).getLayersCount(); headerLayer++) {\n    renderersArray.push(this.headerRendererFactory(headerLayer));\n  }\n}\nfunction _onAfterViewportColumnCalculatorOverride2(calc) {\n  const headerLayersCount = _classPrivateFieldGet(this, _stateManager).getLayersCount();\n  let newStartColumn = calc.startColumn;\n  let nonRenderable = !!headerLayersCount;\n  for (let headerLayer = 0; headerLayer < headerLayersCount; headerLayer++) {\n    const startColumn = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(headerLayer, calc.startColumn);\n    const renderedStartColumn = this.hot.columnIndexMapper.getRenderableFromVisualIndex(startColumn);\n\n    // If any of the headers for that column index is rendered, all of them should be rendered properly, see\n    // comment below.\n    if (startColumn >= 0) {\n      nonRenderable = false;\n    }\n\n    // `renderedStartColumn` can be `null` if the leftmost columns are hidden. In that case -> ignore that header\n    // level, as it should be handled by the \"parent\" header\n    if (isNumeric(renderedStartColumn) && renderedStartColumn < calc.startColumn) {\n      newStartColumn = renderedStartColumn;\n      break;\n    }\n  }\n\n  // If no headers for the provided column index are renderable, start rendering from the beginning of the upmost\n  // header for that position.\n  calc.startColumn = nonRenderable ? _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(0, newStartColumn).columnIndex : newStartColumn;\n}\nfunction _onModifyColWidth2(width, column) {\n  const cachedWidth = this.ghostTable.getWidth(column);\n  return width > cachedWidth ? width : cachedWidth;\n}\nfunction _onModifyColumnHeaderValue2(value, visualColumnIndex, headerLevel) {\n  var _classPrivateFieldGet5;\n  const {\n    label\n  } = (_classPrivateFieldGet5 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet5 !== void 0 ? _classPrivateFieldGet5 : {\n    label: ''\n  };\n  return label;\n}\nfunction _onModifyFocusedElement2(row, column) {\n  if (row < 0) {\n    return this.hot.getCell(row, _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(row, column), true);\n  }\n}\nfunction _onInit2() {\n  // @TODO: Workaround for broken plugin initialization abstraction.\n  this.updatePlugin();\n}\nfunction _onAfterLoadData2(sourceData, initialLoad) {\n  if (!initialLoad) {\n    this.updatePlugin();\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { objectEach } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\n/**\n * Class responsible for making data operations.\n *\n * @private\n */\nclass DataManager {\n  constructor(nestedRowsPlugin, hotInstance) {\n    /**\n     * Main Handsontable instance reference.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Reference to the source data object.\n     *\n     * @type {Handsontable.CellValue[][]|Handsontable.RowObject[]}\n     */\n    _defineProperty(this, \"data\", null);\n    /**\n     * Reference to the NestedRows plugin.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Map of row object parents.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"parentReference\", new WeakMap());\n    /**\n     * Nested structure cache.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"cache\", {\n      levels: [],\n      levelCount: 0,\n      rows: [],\n      nodeInfo: new WeakMap()\n    });\n    this.hot = hotInstance;\n    this.plugin = nestedRowsPlugin;\n  }\n\n  /**\n   * Set the data for the manager.\n   *\n   * @param {Handsontable.CellValue[][]|Handsontable.RowObject[]} data Data for the manager.\n   */\n  setData(data) {\n    this.data = data;\n  }\n\n  /**\n   * Get the data cached in the manager.\n   *\n   * @returns {Handsontable.CellValue[][]|Handsontable.RowObject[]}\n   */\n  getData() {\n    return this.data;\n  }\n\n  /**\n   * Load the \"raw\" source data, without NestedRows' modifications.\n   *\n   * @returns {Handsontable.CellValue[][]|Handsontable.RowObject[]}\n   */\n  getRawSourceData() {\n    let rawSourceData = null;\n    this.plugin.disableCoreAPIModifiers();\n    rawSourceData = this.hot.getSourceData();\n    this.plugin.enableCoreAPIModifiers();\n    return rawSourceData;\n  }\n\n  /**\n   * Update the Data Manager with new data and refresh cache.\n   *\n   * @param {Handsontable.CellValue[][]|Handsontable.RowObject[]} data Data for the manager.\n   */\n  updateWithData(data) {\n    this.setData(data);\n    this.rewriteCache();\n  }\n\n  /**\n   * Rewrite the nested structure cache.\n   *\n   * @private\n   */\n  rewriteCache() {\n    this.cache = {\n      levels: [],\n      levelCount: 0,\n      rows: [],\n      nodeInfo: new WeakMap()\n    };\n    rangeEach(0, this.data.length - 1, i => {\n      this.cacheNode(this.data[i], 0, null);\n    });\n  }\n\n  /**\n   * Cache a data node.\n   *\n   * @private\n   * @param {object} node Node to cache.\n   * @param {number} level Level of the node.\n   * @param {object} parent Parent of the node.\n   */\n  cacheNode(node, level, parent) {\n    if (!this.cache.levels[level]) {\n      this.cache.levels[level] = [];\n      this.cache.levelCount += 1;\n    }\n    this.cache.levels[level].push(node);\n    this.cache.rows.push(node);\n    this.cache.nodeInfo.set(node, {\n      parent,\n      row: this.cache.rows.length - 1,\n      level\n    });\n    if (this.hasChildren(node)) {\n      arrayEach(node.__children, elem => {\n        this.cacheNode(elem, level + 1, node);\n      });\n    }\n  }\n\n  /**\n   * Get the date for the provided visual row number.\n   *\n   * @param {number} row Row index.\n   * @returns {object}\n   */\n  getDataObject(row) {\n    return row === null || row === undefined ? null : this.cache.rows[row];\n  }\n\n  /**\n   * Read the row tree in search for a specific row index or row object.\n   *\n   * @private\n   * @param {object} parent The initial parent object.\n   * @param {number} readCount Number of read nodes.\n   * @param {number} neededIndex The row index we search for.\n   * @param {object} neededObject The row object we search for.\n   * @returns {number|object}\n   */\n  readTreeNodes(parent, readCount, neededIndex, neededObject) {\n    let rootLevel = false;\n    let readNodesCount = readCount;\n    if (isNaN(readNodesCount) && readNodesCount.end) {\n      return readNodesCount;\n    }\n    let parentObj = parent;\n    if (!parentObj) {\n      parentObj = {\n        __children: this.data\n      };\n      rootLevel = true;\n      readNodesCount -= 1;\n    }\n    if (neededIndex !== null && neededIndex !== undefined && readNodesCount === neededIndex) {\n      return {\n        result: parentObj,\n        end: true\n      };\n    }\n    if (neededObject !== null && neededObject !== undefined && parentObj === neededObject) {\n      return {\n        result: readNodesCount,\n        end: true\n      };\n    }\n    readNodesCount += 1;\n    if (parentObj.__children) {\n      arrayEach(parentObj.__children, val => {\n        this.parentReference.set(val, rootLevel ? null : parentObj);\n        readNodesCount = this.readTreeNodes(val, readNodesCount, neededIndex, neededObject);\n        if (isNaN(readNodesCount) && readNodesCount.end) {\n          return false;\n        }\n      });\n    }\n    return readNodesCount;\n  }\n\n  /**\n   * Mock a parent node.\n   *\n   * @private\n   * @returns {*}\n   */\n  mockParent() {\n    const fakeParent = this.mockNode();\n    fakeParent.__children = this.data;\n    return fakeParent;\n  }\n\n  /**\n   * Mock a data node.\n   *\n   * @private\n   * @returns {{}}\n   */\n  mockNode() {\n    const fakeNode = {};\n    objectEach(this.data[0], (val, key) => {\n      fakeNode[key] = null;\n    });\n    return fakeNode;\n  }\n\n  /**\n   * Get the row index for the provided row object.\n   *\n   * @param {object} rowObj The row object.\n   * @returns {number} Row index.\n   */\n  getRowIndex(rowObj) {\n    return rowObj === null || rowObj === undefined ? null : this.cache.nodeInfo.get(rowObj).row;\n  }\n\n  /**\n   * Get the index of the provided row index/row object within its parent.\n   *\n   * @param {number|object} row Row index / row object.\n   * @returns {number}\n   */\n  getRowIndexWithinParent(row) {\n    let rowObj = null;\n    if (isNaN(row)) {\n      rowObj = row;\n    } else {\n      rowObj = this.getDataObject(row);\n    }\n    const parent = this.getRowParent(row);\n    if (parent === null || parent === undefined) {\n      return this.data.indexOf(rowObj);\n    }\n    return parent.__children.indexOf(rowObj);\n  }\n\n  /**\n   * Count all rows (including all parents and children).\n   *\n   * @returns {number}\n   */\n  countAllRows() {\n    const rootNodeMock = {\n      __children: this.data\n    };\n    return this.countChildren(rootNodeMock);\n  }\n\n  /**\n   * Count children of the provided parent.\n   *\n   * @param {object|number} parent Parent node.\n   * @returns {number} Children count.\n   */\n  countChildren(parent) {\n    let rowCount = 0;\n    let parentNode = parent;\n    if (!isNaN(parentNode)) {\n      parentNode = this.getDataObject(parentNode);\n    }\n    if (!parentNode || !parentNode.__children) {\n      return 0;\n    }\n    arrayEach(parentNode.__children, elem => {\n      rowCount += 1;\n      if (elem.__children) {\n        rowCount += this.countChildren(elem);\n      }\n    });\n    return rowCount;\n  }\n\n  /**\n   * Get the parent of the row at the provided index.\n   *\n   * @param {number|object} row Physical row index.\n   * @returns {object}\n   */\n  getRowParent(row) {\n    let rowObject;\n    if (isNaN(row)) {\n      rowObject = row;\n    } else {\n      rowObject = this.getDataObject(row);\n    }\n    return this.getRowObjectParent(rowObject);\n  }\n\n  /**\n   * Get the parent of the provided row object.\n   *\n   * @private\n   * @param {object} rowObject The row object (tree node).\n   * @returns {object|null}\n   */\n  getRowObjectParent(rowObject) {\n    if (!rowObject || typeof rowObject !== 'object') {\n      return null;\n    }\n    return this.cache.nodeInfo.get(rowObject).parent;\n  }\n\n  /**\n   * Get the nesting level for the row with the provided row index.\n   *\n   * @param {number} row Row index.\n   * @returns {number|null} Row level or null, when row doesn't exist.\n   */\n  getRowLevel(row) {\n    let rowObject = null;\n    if (isNaN(row)) {\n      rowObject = row;\n    } else {\n      rowObject = this.getDataObject(row);\n    }\n    return rowObject ? this.getRowObjectLevel(rowObject) : null;\n  }\n\n  /**\n   * Get the nesting level for the row with the provided row index.\n   *\n   * @private\n   * @param {object} rowObject Row object.\n   * @returns {number} Row level.\n   */\n  getRowObjectLevel(rowObject) {\n    return rowObject === null || rowObject === undefined ? null : this.cache.nodeInfo.get(rowObject).level;\n  }\n\n  /**\n   * Check if the provided row/row element has children.\n   *\n   * @param {number|object} row Row number or row element.\n   * @returns {boolean}\n   */\n  hasChildren(row) {\n    let rowObj = row;\n    if (!isNaN(rowObj)) {\n      rowObj = this.getDataObject(rowObj);\n    }\n    return !!(rowObj.__children && rowObj.__children.length);\n  }\n\n  /**\n   * Returns `true` if the row at the provided index has a parent.\n   *\n   * @param {number} index Row index.\n   * @returns {boolean} `true` if the row at the provided index has a parent, `false` otherwise.\n   */\n  isChild(index) {\n    return this.getRowParent(index) !== null;\n  }\n\n  /**\n   * Get child at a provided index from the parent element.\n   *\n   * @param {object} parent The parent row object.\n   * @param {number} index Index of the child element to be retrieved.\n   * @returns {object|null} The child element or `null` if the child doesn't exist.\n   */\n  getChild(parent, index) {\n    var _parent$__children;\n    return ((_parent$__children = parent.__children) === null || _parent$__children === void 0 ? void 0 : _parent$__children[index]) || null;\n  }\n\n  /**\n   * Return `true` of the row at the provided index is located at the topmost level.\n   *\n   * @param {number} index Row index.\n   * @returns {boolean} `true` of the row at the provided index is located at the topmost level, `false` otherwise.\n   */\n  isRowHighestLevel(index) {\n    return !this.isChild(index);\n  }\n\n  /**\n   * Return `true` if the provided row index / row object represents a parent in the nested structure.\n   *\n   * @param {number|object} row Row index / row object.\n   * @returns {boolean} `true` if the row is a parent, `false` otherwise.\n   */\n  isParent(row) {\n    var _rowObj$__children;\n    let rowObj = row;\n    if (!isNaN(rowObj)) {\n      rowObj = this.getDataObject(rowObj);\n    }\n    return rowObj && !!rowObj.__children && ((_rowObj$__children = rowObj.__children) === null || _rowObj$__children === void 0 ? void 0 : _rowObj$__children.length) !== 0;\n  }\n\n  /**\n   * Add a child to the provided parent. It's optional to add a row object as the \"element\".\n   *\n   * @param {object} parent The parent row object.\n   * @param {object} [element] The element to add as a child.\n   */\n  addChild(parent, element) {\n    let childElement = element;\n    this.hot.runHooks('beforeAddChild', parent, childElement);\n    let parentIndex = null;\n    if (parent) {\n      parentIndex = this.getRowIndex(parent);\n    }\n    this.hot.runHooks('beforeCreateRow', parentIndex + this.countChildren(parent) + 1, 1);\n    let functionalParent = parent;\n    if (!parent) {\n      functionalParent = this.mockParent();\n    }\n    if (!functionalParent.__children) {\n      functionalParent.__children = [];\n    }\n    if (!childElement) {\n      childElement = this.mockNode();\n    }\n    functionalParent.__children.push(childElement);\n    this.rewriteCache();\n    const newRowIndex = this.getRowIndex(childElement);\n    this.hot.rowIndexMapper.insertIndexes(newRowIndex, 1);\n    this.hot.runHooks('afterCreateRow', newRowIndex, 1);\n    this.hot.runHooks('afterAddChild', parent, childElement);\n  }\n\n  /**\n   * Add a child node to the provided parent at a specified index.\n   *\n   * @param {object} parent Parent node.\n   * @param {number} index Index to insert the child element at.\n   * @param {object} [element] Element (node) to insert.\n   */\n  addChildAtIndex(parent, index, element) {\n    let childElement = element;\n    let flattenedIndex;\n    if (!childElement) {\n      childElement = this.mockNode();\n    }\n    this.hot.runHooks('beforeAddChild', parent, childElement, index);\n    if (parent) {\n      const parentIndex = this.getRowIndex(parent);\n      const finalChildIndex = parentIndex + index + 1;\n      this.hot.runHooks('beforeCreateRow', finalChildIndex, 1);\n      parent.__children.splice(index, null, childElement);\n      this.rewriteCache();\n      this.plugin.disableCoreAPIModifiers();\n      this.hot.setSourceDataAtCell(this.getRowIndexWithinParent(parent), '__children', parent.__children, 'NestedRows.addChildAtIndex');\n      this.hot.rowIndexMapper.insertIndexes(finalChildIndex, 1);\n      this.plugin.enableCoreAPIModifiers();\n      this.hot.runHooks('afterCreateRow', finalChildIndex, 1);\n      flattenedIndex = finalChildIndex;\n    } else {\n      this.plugin.disableCoreAPIModifiers();\n      this.hot.alter('insert_row_above', index, 1, 'NestedRows.addChildAtIndex');\n      this.plugin.enableCoreAPIModifiers();\n      flattenedIndex = this.getRowIndex(this.data[index]);\n    }\n\n    // Workaround for refreshing cache losing the reference to the mocked row.\n    childElement = this.getDataObject(flattenedIndex);\n    this.hot.runHooks('afterAddChild', parent, childElement, index);\n  }\n\n  /**\n   * Add a sibling element at the specified index.\n   *\n   * @param {number} index New element sibling's index.\n   * @param {('above'|'below')} where Direction in which the sibling is to be created.\n   */\n  addSibling(index) {\n    let where = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'below';\n    const translatedIndex = this.translateTrimmedRow(index);\n    const parent = this.getRowParent(translatedIndex);\n    const indexWithinParent = this.getRowIndexWithinParent(translatedIndex);\n    switch (where) {\n      case 'below':\n        this.addChildAtIndex(parent, indexWithinParent + 1, null);\n        break;\n      case 'above':\n        this.addChildAtIndex(parent, indexWithinParent, null);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Detach the provided element from its parent and add it right after it.\n   *\n   * @param {object|Array} elements Row object or an array of selected coordinates.\n   * @param {boolean} [forceRender=true] If true (default), it triggers render after finished.\n   */\n  detachFromParent(elements) {\n    let forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let element = null;\n    const rowObjects = [];\n    if (Array.isArray(elements)) {\n      rangeEach(elements[0], elements[2], i => {\n        const translatedIndex = this.translateTrimmedRow(i);\n        rowObjects.push(this.getDataObject(translatedIndex));\n      });\n      rangeEach(0, rowObjects.length - 2, i => {\n        this.detachFromParent(rowObjects[i], false);\n      });\n      element = rowObjects[rowObjects.length - 1];\n    } else {\n      element = elements;\n    }\n    const childRowIndex = this.getRowIndex(element);\n    const childCount = this.countChildren(element);\n    const indexWithinParent = this.getRowIndexWithinParent(element);\n    const parent = this.getRowParent(element);\n    const grandparent = this.getRowParent(parent);\n    const grandparentRowIndex = this.getRowIndex(grandparent);\n    let movedElementRowIndex = null;\n    this.hot.runHooks('beforeDetachChild', parent, element);\n    if (indexWithinParent !== null && indexWithinParent !== undefined) {\n      const removedRowIndexes = Array.from(new Array(childRowIndex + childCount + 1).keys()).splice(-1 * (childCount + 1));\n      this.hot.runHooks('beforeRemoveRow', childRowIndex, childCount + 1, removedRowIndexes, this.plugin.pluginName);\n      parent.__children.splice(indexWithinParent, 1);\n      this.rewriteCache();\n      this.hot.runHooks('afterRemoveRow', childRowIndex, childCount + 1, removedRowIndexes, this.plugin.pluginName);\n      if (grandparent) {\n        movedElementRowIndex = grandparentRowIndex + this.countChildren(grandparent);\n        const lastGrandparentChild = this.getChild(grandparent, this.countChildren(grandparent) - 1);\n        const lastGrandparentChildIndex = this.getRowIndex(lastGrandparentChild);\n        this.hot.runHooks('beforeCreateRow', lastGrandparentChildIndex + 1, childCount + 1, this.plugin.pluginName);\n        grandparent.__children.push(element);\n      } else {\n        movedElementRowIndex = this.hot.countRows() + 1;\n        this.hot.runHooks('beforeCreateRow', movedElementRowIndex - 2, childCount + 1, this.plugin.pluginName);\n        this.data.push(element);\n      }\n    }\n    this.rewriteCache();\n    this.hot.runHooks('afterCreateRow', movedElementRowIndex - 2, childCount + 1, this.plugin.pluginName);\n    this.hot.runHooks('afterDetachChild', parent, element, this.getRowIndex(element));\n    if (forceRender) {\n      this.hot.render();\n    }\n  }\n\n  /**\n   * Filter the data by the `logicRows` array.\n   *\n   * @private\n   * @param {number} index Index of the first row to remove.\n   * @param {number} amount Number of elements to remove.\n   * @param {Array} logicRows Array of indexes to remove.\n   */\n  filterData(index, amount, logicRows) {\n    // TODO: why are the first 2 arguments not used?\n\n    const elementsToRemove = [];\n    arrayEach(logicRows, elem => {\n      elementsToRemove.push(this.getDataObject(elem));\n    });\n    arrayEach(elementsToRemove, elem => {\n      const indexWithinParent = this.getRowIndexWithinParent(elem);\n      const tempParent = this.getRowParent(elem);\n      if (tempParent === null) {\n        this.data.splice(indexWithinParent, 1);\n      } else {\n        tempParent.__children.splice(indexWithinParent, 1);\n      }\n    });\n    this.rewriteCache();\n  }\n\n  /**\n   * Used to splice the source data. Needed to properly modify the nested structure, which wouldn't work with the\n   * default script.\n   *\n   * @private\n   * @param {number} index Physical index of the element at the splice beginning.\n   * @param {number} amount Number of elements to be removed.\n   * @param {object[]} elements Array of row objects to add.\n   */\n  spliceData(index, amount, elements) {\n    const previousElement = this.getDataObject(index - 1);\n    let newRowParent = null;\n    let indexWithinParent = index;\n    if (previousElement && previousElement.__children && previousElement.__children.length === 0) {\n      newRowParent = previousElement;\n      indexWithinParent = 0;\n    } else if (index < this.countAllRows()) {\n      newRowParent = this.getRowParent(index);\n      indexWithinParent = this.getRowIndexWithinParent(index);\n    }\n    if (newRowParent) {\n      if (elements) {\n        newRowParent.__children.splice(indexWithinParent, amount, ...elements);\n      } else {\n        newRowParent.__children.splice(indexWithinParent, amount);\n      }\n    } else if (elements) {\n      this.data.splice(indexWithinParent, amount, ...elements);\n    } else {\n      this.data.splice(indexWithinParent, amount);\n    }\n    this.rewriteCache();\n  }\n\n  /**\n   * Update the `__children` key of the upmost parent of the provided row object.\n   *\n   * @private\n   * @param {object} rowElement Row object.\n   */\n  syncRowWithRawSource(rowElement) {\n    let upmostParent = rowElement;\n    let tempParent = null;\n    do {\n      tempParent = this.getRowParent(tempParent);\n      if (tempParent !== null) {\n        upmostParent = tempParent;\n      }\n    } while (tempParent !== null);\n    this.plugin.disableCoreAPIModifiers();\n    this.hot.setSourceDataAtCell(this.getRowIndex(upmostParent), '__children', upmostParent.__children, 'NestedRows.syncRowWithRawSource');\n    this.plugin.enableCoreAPIModifiers();\n  }\n\n  /* eslint-disable jsdoc/require-param */\n  /**\n   * Move a single row.\n   *\n   * @param {number} fromIndex Index of the row to be moved.\n   * @param {number} toIndex Index of the destination.\n   * @param {boolean} moveToCollapsed `true` if moving a row to a collapsed parent.\n   * @param {boolean} moveToLastChild `true` if moving a row to be a last child of the new parent.\n   */\n\n  /* eslint-enable jsdoc/require-param */\n  moveRow(fromIndex, toIndex, moveToCollapsed, moveToLastChild) {\n    const moveToLastRow = toIndex === this.hot.countRows();\n    const fromParent = this.getRowParent(fromIndex);\n    const indexInFromParent = this.getRowIndexWithinParent(fromIndex);\n    const elemToMove = fromParent.__children.slice(indexInFromParent, indexInFromParent + 1);\n    const movingUp = fromIndex > toIndex;\n    let toParent = moveToLastRow ? this.getRowParent(toIndex - 1) : this.getRowParent(toIndex);\n    if (toParent === null || toParent === undefined) {\n      toParent = this.getRowParent(toIndex - 1);\n    }\n    if (toParent === null || toParent === undefined) {\n      toParent = this.getDataObject(toIndex - 1);\n    }\n    if (!toParent) {\n      toParent = this.getDataObject(toIndex);\n      toParent.__children = [];\n    } else if (!toParent.__children) {\n      toParent.__children = [];\n    }\n    const indexInTargetParent = moveToLastRow || moveToCollapsed || moveToLastChild ? toParent.__children.length : this.getRowIndexWithinParent(toIndex);\n    const sameParent = fromParent === toParent;\n    toParent.__children.splice(indexInTargetParent, 0, elemToMove[0]);\n    fromParent.__children.splice(indexInFromParent + (movingUp && sameParent ? 1 : 0), 1);\n\n    // Sync the changes in the cached data with the actual data stored in HOT.\n    this.syncRowWithRawSource(fromParent);\n    if (!sameParent) {\n      this.syncRowWithRawSource(toParent);\n    }\n  }\n\n  /**\n   * Translate the visual row index to the physical index, taking into consideration the state of collapsed rows.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {number}\n   */\n  translateTrimmedRow(row) {\n    if (this.plugin.collapsingUI) {\n      return this.plugin.collapsingUI.translateTrimmedRow(row);\n    }\n    return row;\n  }\n\n  /**\n   * Translate the physical row index to the visual index, taking into consideration the state of collapsed rows.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {number}\n   */\n  untranslateTrimmedRow(row) {\n    if (this.plugin.collapsingUI) {\n      return this.plugin.collapsingUI.untranslateTrimmedRow(row);\n    }\n    return row;\n  }\n}\nexport default DataManager;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Base class for the Nested Rows' UI sub-classes.\n *\n * @private\n * @class\n */\nclass BaseUI {\n  constructor(pluginInstance, hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Reference to the main plugin instance.\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    this.hot = hotInstance;\n    this.plugin = pluginInstance;\n  }\n}\nexport default BaseUI;", "import { arrayEach } from \"../../../helpers/array.mjs\";\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { addClass, setAttribute } from \"../../../helpers/dom/element.mjs\";\nimport BaseUI from \"./_base.mjs\";\nimport { A11Y_EXPANDED, A11Y_HIDDEN } from \"../../../helpers/a11y.mjs\";\n/**\n * Class responsible for the UI in the Nested Rows' row headers.\n *\n * @private\n * @class HeadersUI\n * @augments BaseUI\n */\nclass HeadersUI extends BaseUI {\n  /**\n   * CSS classes used in the row headers.\n   *\n   * @type {object}\n   */\n  static get CSS_CLASSES() {\n    return {\n      indicatorContainer: 'ht_nestingLevels',\n      parent: 'ht_nestingParent',\n      indicator: 'ht_nestingLevel',\n      emptyIndicator: 'ht_nestingLevel_empty',\n      button: 'ht_nestingButton',\n      expandButton: 'ht_nestingExpand',\n      collapseButton: 'ht_nestingCollapse'\n    };\n  }\n  constructor(nestedRowsPlugin, hotInstance) {\n    super(nestedRowsPlugin, hotInstance);\n    /**\n     * Reference to the DataManager instance connected with the Nested Rows plugin.\n     *\n     * @type {DataManager}\n     */\n    this.dataManager = this.plugin.dataManager;\n    // /**\n    //  * Level cache array.\n    //  *\n    //  * @type {Array}\n    //  */\n    // this.levelCache = this.dataManager.cache.levels;\n    /**\n     * Reference to the CollapsingUI instance connected with the Nested Rows plugin.\n     *\n     * @type {CollapsingUI}\n     */\n    this.collapsingUI = this.plugin.collapsingUI;\n    /**\n     * Cache for the row headers width.\n     *\n     * @type {null|number}\n     */\n    this.rowHeaderWidthCache = null;\n  }\n\n  /**\n   * Append nesting indicators and buttons to the row headers.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @param {HTMLElement} TH TH 3element.\n   */\n  appendLevelIndicators(row, TH) {\n    const rowIndex = this.hot.toPhysicalRow(row);\n    const rowLevel = this.dataManager.getRowLevel(rowIndex);\n    const rowObject = this.dataManager.getDataObject(rowIndex);\n    const innerDiv = TH.getElementsByTagName('DIV')[0];\n    const innerSpan = innerDiv.querySelector('span.rowHeader');\n    const previousIndicators = innerDiv.querySelectorAll('[class^=\"ht_nesting\"]');\n    const ariaEnabled = this.hot.getSettings().ariaTags;\n    arrayEach(previousIndicators, elem => {\n      if (elem) {\n        innerDiv.removeChild(elem);\n      }\n    });\n    addClass(TH, HeadersUI.CSS_CLASSES.indicatorContainer);\n    if (rowLevel) {\n      const {\n        rootDocument\n      } = this.hot;\n      const initialContent = innerSpan.cloneNode(true);\n      innerDiv.innerHTML = '';\n      rangeEach(0, rowLevel - 1, () => {\n        const levelIndicator = rootDocument.createElement('SPAN');\n        addClass(levelIndicator, HeadersUI.CSS_CLASSES.emptyIndicator);\n        innerDiv.appendChild(levelIndicator);\n      });\n      innerDiv.appendChild(initialContent);\n    }\n    if (this.dataManager.hasChildren(rowObject)) {\n      const buttonsContainer = this.hot.rootDocument.createElement('DIV');\n      if (ariaEnabled) {\n        setAttribute(buttonsContainer, [A11Y_HIDDEN()]);\n      }\n      addClass(TH, HeadersUI.CSS_CLASSES.parent);\n      if (this.collapsingUI.areChildrenCollapsed(rowIndex)) {\n        addClass(buttonsContainer, `${HeadersUI.CSS_CLASSES.button} ${HeadersUI.CSS_CLASSES.expandButton}`);\n        if (ariaEnabled) {\n          setAttribute(TH, [A11Y_EXPANDED(false)]);\n        }\n      } else {\n        addClass(buttonsContainer, `${HeadersUI.CSS_CLASSES.button} ${HeadersUI.CSS_CLASSES.collapseButton}`);\n        if (ariaEnabled) {\n          setAttribute(TH, [A11Y_EXPANDED(true)]);\n        }\n      }\n      innerDiv.appendChild(buttonsContainer);\n    }\n  }\n\n  /**\n   * Update the row header width according to number of levels in the dataset.\n   *\n   * @private\n   * @param {number} deepestLevel Cached deepest level of nesting.\n   */\n  updateRowHeaderWidth(deepestLevel) {\n    let deepestLevelIndex = deepestLevel;\n    if (!deepestLevelIndex) {\n      deepestLevelIndex = this.dataManager.cache.levelCount;\n    }\n    this.rowHeaderWidthCache = Math.max(50, 11 + 10 * deepestLevelIndex + 25);\n    this.hot.render();\n  }\n}\nexport default HeadersUI;", "import \"core-js/modules/es.array.push.js\";\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { hasClass } from \"../../../helpers/dom/element.mjs\";\nimport BaseUI from \"./_base.mjs\";\nimport HeadersUI from \"./headers.mjs\";\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @private\n * @class\n * @augments BaseUI\n */\nclass CollapsingUI extends BaseUI {\n  constructor(nestedRowsPlugin, hotInstance) {\n    var _this;\n    /**\n     * Reference to the TrimRows plugin.\n     */\n    super(nestedRowsPlugin, hotInstance);\n    _this = this;\n    this.dataManager = this.plugin.dataManager;\n    this.collapsedRows = [];\n    this.collapsedRowsStash = {\n      stash: function () {\n        let forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0);\n\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.expandMultipleChildren(_this.lastCollapsedRows, forceRender);\n      },\n      shiftStash: function (baseIndex, targetIndex) {\n        let delta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        if (targetIndex === null || targetIndex === undefined) {\n          targetIndex = Infinity;\n        }\n        arrayEach(_this.lastCollapsedRows, (elem, i) => {\n          if (elem >= baseIndex && elem < targetIndex) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function () {\n        let forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, forceRender);\n        _this.lastCollapsedRows = undefined;\n      },\n      trimStash: (realElementIndex, amount) => {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, i => {\n          const indexOfElement = this.lastCollapsedRows.indexOf(i);\n          if (indexOfElement > -1) {\n            this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n  }\n\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {number|object} row The parent row.\n   * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   * @returns {Array}\n   */\n  collapseChildren(row) {\n    let forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rowsToCollapse = [];\n    let rowObject = null;\n    let rowIndex = null;\n    let rowsToTrim = null;\n    if (isNaN(row)) {\n      rowObject = row;\n      rowIndex = this.dataManager.getRowIndex(rowObject);\n    } else {\n      rowObject = this.dataManager.getDataObject(row);\n      rowIndex = row;\n    }\n    if (this.dataManager.hasChildren(rowObject)) {\n      arrayEach(rowObject.__children, elem => {\n        rowsToCollapse.push(this.dataManager.getRowIndex(elem));\n      });\n    }\n    rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n    if (doTrimming) {\n      this.trimRows(rowsToTrim);\n    }\n    if (forceRender) {\n      this.renderAndAdjust();\n    }\n    if (this.collapsedRows.indexOf(rowIndex) === -1) {\n      this.collapsedRows.push(rowIndex);\n    }\n    return rowsToTrim;\n  }\n\n  /**\n   * Collapse multiple children.\n   *\n   * @param {Array} rows Rows to collapse (including their children).\n   * @param {boolean} [forceRender=true] `true` if the table should be rendered after finishing the function.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   */\n  collapseMultipleChildren(rows) {\n    let forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rowsToTrim = [];\n    arrayEach(rows, elem => {\n      rowsToTrim.push(...this.collapseChildren(elem, false, false));\n    });\n    if (doTrimming) {\n      this.trimRows(rowsToTrim);\n    }\n    if (forceRender) {\n      this.renderAndAdjust();\n    }\n  }\n\n  /**\n   * Collapse a single row.\n   *\n   * @param {number} rowIndex Index of the row to collapse.\n   * @param {boolean} [recursive=true] `true` if it should collapse the row's children.\n   */\n  collapseRow(rowIndex) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.collapseRows([rowIndex], recursive);\n  }\n\n  /**\n   * Collapse multiple rows.\n   *\n   * @param {Array} rowIndexes Array of row indexes to collapse.\n   * @param {boolean} [recursive=true] `true` if it should collapse the rows' children.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true).\n   */\n  collapseRows(rowIndexes) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const rowsToTrim = [];\n    arrayEach(rowIndexes, elem => {\n      rowsToTrim.push(elem);\n      if (recursive) {\n        this.collapseChildRows(elem, rowsToTrim);\n      }\n    });\n    if (doTrimming) {\n      this.trimRows(rowsToTrim);\n    }\n    return rowsToTrim;\n  }\n\n  /**\n   * Collapse child rows of the row at the provided index.\n   *\n   * @param {number} parentIndex Index of the parent node.\n   * @param {Array} [rowsToTrim=[]] Array of rows to trim. Defaults to an empty array.\n   * @param {boolean} [recursive] `true` if the collapsing process should be recursive.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   */\n  collapseChildRows(parentIndex) {\n    let rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let recursive = arguments.length > 2 ? arguments[2] : undefined;\n    let doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (this.dataManager.hasChildren(parentIndex)) {\n      const parentObject = this.dataManager.getDataObject(parentIndex);\n      arrayEach(parentObject.__children, elem => {\n        const elemIndex = this.dataManager.getRowIndex(elem);\n        rowsToTrim.push(elemIndex);\n        this.collapseChildRows(elemIndex, rowsToTrim);\n      });\n    }\n    if (doTrimming) {\n      this.trimRows(rowsToTrim);\n    }\n  }\n\n  /**\n   * Expand a single row.\n   *\n   * @param {number} rowIndex Index of the row to expand.\n   * @param {boolean} [recursive=true] `true` if it should expand the row's children recursively.\n   */\n  expandRow(rowIndex) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.expandRows([rowIndex], recursive);\n  }\n\n  /**\n   * Expand multiple rows.\n   *\n   * @param {Array} rowIndexes Array of indexes of the rows to expand.\n   * @param {boolean} [recursive=true] `true` if it should expand the rows' children recursively.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   * @returns {Array} Array of row indexes to be untrimmed.\n   */\n  expandRows(rowIndexes) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const rowsToUntrim = [];\n    arrayEach(rowIndexes, elem => {\n      rowsToUntrim.push(elem);\n      if (recursive) {\n        this.expandChildRows(elem, rowsToUntrim);\n      }\n    });\n    if (doTrimming) {\n      this.untrimRows(rowsToUntrim);\n    }\n    return rowsToUntrim;\n  }\n\n  /**\n   * Expand child rows of the provided index.\n   *\n   * @param {number} parentIndex Index of the parent row.\n   * @param {Array} [rowsToUntrim=[]] Array of the rows to be untrimmed.\n   * @param {boolean} [recursive] `true` if it should expand the rows' children recursively.\n   * @param {boolean} [doTrimming=false] I determine whether collapsing should envolve trimming rows.\n   */\n  expandChildRows(parentIndex) {\n    let rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let recursive = arguments.length > 2 ? arguments[2] : undefined;\n    let doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (this.dataManager.hasChildren(parentIndex)) {\n      const parentObject = this.dataManager.getDataObject(parentIndex);\n      arrayEach(parentObject.__children, elem => {\n        if (!this.isAnyParentCollapsed(elem)) {\n          const elemIndex = this.dataManager.getRowIndex(elem);\n          rowsToUntrim.push(elemIndex);\n          this.expandChildRows(elemIndex, rowsToUntrim);\n        }\n      });\n    }\n    if (doTrimming) {\n      this.untrimRows(rowsToUntrim);\n    }\n  }\n\n  /**\n   * Expand the children of the row passed as an argument.\n   *\n   * @param {number|object} row Parent row.\n   * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n   * @param {boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n   * @returns {number[]}\n   */\n  expandChildren(row) {\n    let forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rowsToExpand = [];\n    let rowObject = null;\n    let rowIndex = null;\n    let rowsToUntrim = null;\n    if (isNaN(row)) {\n      rowObject = row;\n      rowIndex = this.dataManager.getRowIndex(row);\n    } else {\n      rowObject = this.dataManager.getDataObject(row);\n      rowIndex = row;\n    }\n    this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n    if (this.dataManager.hasChildren(rowObject)) {\n      arrayEach(rowObject.__children, elem => {\n        const childIndex = this.dataManager.getRowIndex(elem);\n        rowsToExpand.push(childIndex);\n      });\n    }\n    rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n    if (doTrimming) {\n      this.untrimRows(rowsToUntrim);\n    }\n    if (forceRender) {\n      this.renderAndAdjust();\n    }\n    return rowsToUntrim;\n  }\n\n  /**\n   * Expand multiple rows' children.\n   *\n   * @param {Array} rows Array of rows which children are about to be expanded.\n   * @param {boolean} [forceRender=true] `true` if the table should render after finishing the function.\n   * @param {boolean} [doTrimming=true] `true` if the rows should be untrimmed after finishing the function.\n   */\n  expandMultipleChildren(rows) {\n    let forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rowsToUntrim = [];\n    arrayEach(rows, elem => {\n      rowsToUntrim.push(...this.expandChildren(elem, false, false));\n    });\n    if (doTrimming) {\n      this.untrimRows(rowsToUntrim);\n    }\n    if (forceRender) {\n      this.renderAndAdjust();\n    }\n  }\n\n  /**\n   * Collapse all collapsable rows.\n   */\n  collapseAll() {\n    const data = this.dataManager.getData();\n    const parentsToCollapse = [];\n    arrayEach(data, elem => {\n      if (this.dataManager.hasChildren(elem)) {\n        parentsToCollapse.push(elem);\n      }\n    });\n    this.collapseMultipleChildren(parentsToCollapse);\n    this.renderAndAdjust();\n  }\n\n  /**\n   * Expand all collapsable rows.\n   */\n  expandAll() {\n    const data = this.dataManager.getData();\n    const parentsToExpand = [];\n    arrayEach(data, elem => {\n      if (this.dataManager.hasChildren(elem)) {\n        parentsToExpand.push(elem);\n      }\n    });\n    this.expandMultipleChildren(parentsToExpand);\n    this.renderAndAdjust();\n  }\n\n  /**\n   * Trim rows.\n   *\n   * @param {Array} rows Physical row indexes.\n   */\n  trimRows(rows) {\n    this.hot.batchExecution(() => {\n      arrayEach(rows, physicalRow => {\n        this.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, true);\n      });\n    }, true);\n  }\n\n  /**\n   * Untrim rows.\n   *\n   * @param {Array} rows Physical row indexes.\n   */\n  untrimRows(rows) {\n    this.hot.batchExecution(() => {\n      arrayEach(rows, physicalRow => {\n        this.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, false);\n      });\n    }, true);\n  }\n\n  /**\n   * Check if all child rows are collapsed.\n   *\n   * @private\n   * @param {number|object|null} row The parent row. `null` for the top level.\n   * @returns {boolean}\n   */\n  areChildrenCollapsed(row) {\n    let rowObj = isNaN(row) ? row : this.dataManager.getDataObject(row);\n    let allCollapsed = true;\n\n    // Checking the children of the top-level \"parent\"\n    if (rowObj === null) {\n      rowObj = {\n        __children: this.dataManager.data\n      };\n    }\n    if (this.dataManager.hasChildren(rowObj)) {\n      arrayEach(rowObj.__children, elem => {\n        const rowIndex = this.dataManager.getRowIndex(elem);\n        if (!this.plugin.collapsedRowsMap.getValueAtIndex(rowIndex)) {\n          allCollapsed = false;\n          return false;\n        }\n      });\n    }\n    return allCollapsed;\n  }\n\n  /**\n   * Check if any of the row object parents are collapsed.\n   *\n   * @private\n   * @param {object} rowObj Row object.\n   * @returns {boolean}\n   */\n  isAnyParentCollapsed(rowObj) {\n    let parent = rowObj;\n    while (parent !== null) {\n      parent = this.dataManager.getRowParent(parent);\n      const parentIndex = this.dataManager.getRowIndex(parent);\n      if (this.collapsedRows.indexOf(parentIndex) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n   *\n   * @private\n   * @param {MouseEvent} event `mousedown` event.\n   * @param {object} coords Coordinates of the clicked cell/header.\n   */\n  toggleState(event, coords) {\n    if (coords.col >= 0) {\n      return;\n    }\n    const row = this.translateTrimmedRow(coords.row);\n    if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n      if (this.areChildrenCollapsed(row)) {\n        this.expandChildren(row);\n      } else {\n        this.collapseChildren(row);\n      }\n      stopImmediatePropagation(event);\n    }\n  }\n\n  /**\n   * Translate visual row after trimming to physical base row index.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {number} Base row index.\n   */\n  translateTrimmedRow(row) {\n    return this.hot.toPhysicalRow(row);\n  }\n\n  /**\n   * Translate physical row after trimming to visual base row index.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {number} Base row index.\n   */\n  untranslateTrimmedRow(row) {\n    return this.hot.toVisualRow(row);\n  }\n\n  /**\n   * Helper function to render the table and call the `adjustElementsSize` method.\n   *\n   * @private\n   */\n  renderAndAdjust() {\n    this.hot.render();\n\n    // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n    this.hot.view.adjustElementsSize();\n  }\n}\nexport default CollapsingUI;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport BaseUI from \"./_base.mjs\";\n/**\n * Class responsible for the Context Menu entries for the Nested Rows plugin.\n *\n * @private\n * @class ContextMenuUI\n * @augments BaseUI\n */\nvar _menuEntries = /*#__PURE__*/new WeakMap();\nclass ContextMenuUI extends BaseUI {\n  constructor() {\n    super(...arguments);\n    /**\n     * Reference to the DataManager instance connected with the Nested Rows plugin.\n     *\n     * @type {DataManager}\n     */\n    _defineProperty(this, \"dataManager\", this.plugin.dataManager);\n    _classPrivateFieldInitSpec(this, _menuEntries, {\n      writable: true,\n      value: {\n        row_above: (key, selection) => {\n          const lastSelection = selection[selection.length - 1];\n          this.dataManager.addSibling(lastSelection.start.row, 'above');\n        },\n        row_below: (key, selection) => {\n          const lastSelection = selection[selection.length - 1];\n          this.dataManager.addSibling(lastSelection.start.row, 'below');\n        }\n      }\n    });\n  }\n  /**\n   * Append options to the context menu. (Propagated from the `afterContextMenuDefaultOptions` hook callback)\n   * f.\n   *\n   * @private\n   * @param {object} defaultOptions Default context menu options.\n   * @returns {*}\n   */\n  appendOptions(defaultOptions) {\n    const newEntries = [{\n      key: 'add_child',\n      name() {\n        return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_NESTED_ROWS_INSERT_CHILD);\n      },\n      callback: () => {\n        const translatedRowIndex = this.dataManager.translateTrimmedRow(this.hot.getSelectedLast()[0]);\n        const parent = this.dataManager.getDataObject(translatedRowIndex);\n        this.dataManager.addChild(parent);\n      },\n      disabled: () => {\n        const selected = this.hot.getSelectedLast();\n        return !selected || selected[0] < 0 || this.hot.selection.isSelectedByColumnHeader() || this.hot.countRows() >= this.hot.getSettings().maxRows;\n      }\n    }, {\n      key: 'detach_from_parent',\n      name() {\n        return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_NESTED_ROWS_DETACH_CHILD);\n      },\n      callback: () => {\n        this.dataManager.detachFromParent(this.hot.getSelectedLast());\n      },\n      disabled: () => {\n        const selected = this.hot.getSelectedLast();\n        const translatedRowIndex = this.dataManager.translateTrimmedRow(selected[0]);\n        const parent = this.dataManager.getRowParent(translatedRowIndex);\n        return !parent || !selected || selected[0] < 0 || this.hot.selection.isSelectedByColumnHeader() || this.hot.countRows() >= this.hot.getSettings().maxRows;\n      }\n    }, {\n      name: '---------'\n    }];\n    rangeEach(0, defaultOptions.items.length - 1, i => {\n      if (i === 0) {\n        arrayEach(newEntries, (val, j) => {\n          defaultOptions.items.splice(i + j, 0, val);\n        });\n        return false;\n      }\n    });\n    return this.modifyRowInsertingOptions(defaultOptions);\n  }\n\n  /**\n   * Modify how the row inserting options work.\n   *\n   * @private\n   * @param {object} defaultOptions Default context menu items.\n   * @returns {*}\n   */\n  modifyRowInsertingOptions(defaultOptions) {\n    rangeEach(0, defaultOptions.items.length - 1, i => {\n      const option = _classPrivateFieldGet(this, _menuEntries)[defaultOptions.items[i].key];\n      if (option !== null && option !== undefined) {\n        defaultOptions.items[i].callback = option;\n      }\n    });\n    return defaultOptions;\n  }\n}\nexport default ContextMenuUI;", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isUndefined } from \"../../../helpers/mixed.mjs\";\nimport { warn } from \"../../../helpers/console.mjs\";\nimport { toSingleLine } from \"../../../helpers/templateLiteralTag.mjs\";\n/**\n * Helper class for the row-move-related operations.\n *\n * @private\n * @class RowMoveController\n */\nexport default class RowMoveController {\n  constructor(plugin) {\n    /**\n     * Reference to the Nested Rows plugin instance.\n     *\n     * @type {NestedRows}\n     */\n    _defineProperty(this, \"plugin\", void 0);\n    /**\n     * Reference to the Handsontable instance.\n     *\n     * @type {Handsontable.Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Reference to the Data Manager class instance.\n     *\n     * @type {DataManager}\n     */\n    _defineProperty(this, \"dataManager\", void 0);\n    /**\n     * Reference to the Collapsing UI class instance.\n     *\n     * @type {CollapsingUI}\n     */\n    _defineProperty(this, \"collapsingUI\", void 0);\n    this.plugin = plugin;\n    this.hot = plugin.hot;\n    this.dataManager = plugin.dataManager;\n    this.collapsingUI = plugin.collapsingUI;\n  }\n\n  /**\n   * `beforeRowMove` hook callback.\n   *\n   * @param {Array} rows Array of visual row indexes to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements\n   *   will be placed after the moving action. To check the visualization of the final index, please take a look at\n   *   [documentation](@/guides/rows/row-moving.md).\n   * @param {undefined|number} dropIndex Visual row index, being a drop index for the moved rows. Points to where we\n   *   are going to drop the moved elements. To check visualization of drop index please take a look at\n   *   [documentation](@/guides/rows/row-moving.md).\n   * @param {boolean} movePossible Indicates if it's possible to move rows to the desired position.\n   * @fires Hooks#afterRowMove\n   * @returns {boolean}\n   */\n  onBeforeRowMove(rows, finalIndex, dropIndex, movePossible) {\n    const improperUsage = this.displayAPICompatibilityWarning({\n      rows,\n      finalIndex,\n      dropIndex,\n      movePossible\n    });\n    if (improperUsage) {\n      return false;\n    }\n    this.movedToCollapsed = false;\n    const dropToLastRow = dropIndex === this.hot.countRows();\n    const physicalDropIndex = dropToLastRow ? this.hot.countSourceRows() : this.dataManager.translateTrimmedRow(dropIndex);\n    let allowMove = true;\n    const physicalStartIndexes = rows.map(rowIndex => {\n      // Don't do the logic for the rest of the rows, as it's bound to fail anyway.\n      if (!allowMove) {\n        return false;\n      }\n      const physicalRowIndex = this.dataManager.translateTrimmedRow(rowIndex);\n      allowMove = this.shouldAllowMoving(physicalRowIndex, physicalDropIndex);\n      return physicalRowIndex;\n    });\n    const willDataChange = physicalStartIndexes.indexOf(physicalDropIndex) === -1;\n    if (!allowMove || !willDataChange) {\n      return false;\n    }\n    const baseParent = this.getBaseParent(physicalStartIndexes);\n    const targetParent = this.getTargetParent(dropToLastRow, physicalDropIndex);\n    const sameParent = baseParent === targetParent;\n    this.movedToCollapsed = this.collapsingUI.areChildrenCollapsed(targetParent);\n\n    // Stash the current state of collapsed rows\n    this.collapsingUI.collapsedRowsStash.stash();\n    this.shiftCollapsibleParentsLocations(physicalStartIndexes, physicalDropIndex, sameParent);\n    this.moveRows(physicalStartIndexes, physicalDropIndex, targetParent);\n    this.dataManager.rewriteCache();\n    this.moveCellsMeta(physicalStartIndexes, physicalDropIndex);\n    this.collapsingUI.collapsedRowsStash.applyStash(false);\n\n    // TODO: Trying to mock real work of the `ManualRowMove` plugin. It was blocked by returning `false` below.\n    this.hot.runHooks('afterRowMove', rows, finalIndex, dropIndex, movePossible, movePossible && this.isRowOrderChanged(rows, finalIndex));\n\n    // Not necessary - added to keep compatibility with other plugins (namely: columnSummary).\n    this.hot.render();\n    this.selectCells(rows, dropIndex);\n    return false;\n  }\n\n  /**\n   * Display a `dragRows`/`moveRows` method compatibility warning if needed.\n   *\n   * @param {object} beforeMoveRowHookArgs A set of arguments from the `beforeMoveRow` hook.\n   * @returns {boolean} `true` if is a result of an improper usage of the moving API.\n   */\n  displayAPICompatibilityWarning(beforeMoveRowHookArgs) {\n    const {\n      rows,\n      finalIndex,\n      dropIndex,\n      movePossible\n    } = beforeMoveRowHookArgs;\n    let shouldTerminate = false;\n    if (isUndefined(dropIndex)) {\n      warn(toSingleLine`Since version 8.0.0 of the Handsontable the 'moveRows' method isn't used for moving rows\\x20\n      when the NestedRows plugin is enabled. Please use the 'dragRows' method instead.`);\n\n      // TODO: Trying to mock real work of the `ManualRowMove` plugin. It was blocked by returning `false` below.\n      this.hot.runHooks('afterRowMove', rows, finalIndex, dropIndex, movePossible, false);\n      shouldTerminate = true;\n    }\n    return shouldTerminate;\n  }\n\n  /**\n   * Check if the moving action should be allowed.\n   *\n   * @param {number} physicalRowIndex Physical start row index.\n   * @param {number} physicalDropIndex Physical drop index.\n   * @returns {boolean} `true` if it should continue with the moving action.\n   */\n  shouldAllowMoving(physicalRowIndex, physicalDropIndex) {\n    /*\n       We can't move rows when any of them is:\n       - a parent\n       - a top-level element\n       - is being moved to the top level\n       - is being moved to the position of any of the moved rows (not changing position)\n    */\n\n    return !(this.dataManager.isParent(physicalRowIndex) || this.dataManager.isRowHighestLevel(physicalRowIndex) || physicalRowIndex === physicalDropIndex || physicalDropIndex === 0);\n  }\n\n  /**\n   * Get the base row parent.\n   *\n   * @param {number} physicalStartIndexes Physical start row index.\n   * @returns {object|null} The base row parent.\n   */\n  getBaseParent(physicalStartIndexes) {\n    return this.dataManager.getRowParent(physicalStartIndexes[0]);\n  }\n\n  /**\n   * Get the target row parent.\n   *\n   * @param {boolean} dropToLastRow `true` if the row is moved to the last row of the table.\n   * @param {number} physicalDropIndex Physical drop row index.\n   * @returns {object|null} The target row parent.\n   */\n  getTargetParent(dropToLastRow, physicalDropIndex) {\n    let targetParent = this.dataManager.getRowParent(dropToLastRow ? physicalDropIndex - 1 : physicalDropIndex);\n\n    // If we try to move an element to the place of a top-level parent, snap the element to the previous top-level\n    // parent's children instead\n    if (targetParent === null || targetParent === undefined) {\n      targetParent = this.dataManager.getRowParent(physicalDropIndex - 1);\n    }\n    return targetParent;\n  }\n\n  /**\n   * Shift the cached collapsible rows position according to the move action.\n   *\n   * @param {number[]} physicalStartIndexes Physical start row indexes.\n   * @param {number} physicalDropIndex Physical drop index.\n   * @param {boolean} sameParent `true` if the row's being moved between siblings of the same parent.\n   */\n  shiftCollapsibleParentsLocations(physicalStartIndexes, physicalDropIndex, sameParent) {\n    if (!sameParent) {\n      if (Math.max(...physicalStartIndexes) <= physicalDropIndex) {\n        this.collapsingUI.collapsedRowsStash.shiftStash(physicalStartIndexes[0], physicalDropIndex, -1 * physicalStartIndexes.length);\n      } else {\n        this.collapsingUI.collapsedRowsStash.shiftStash(physicalDropIndex, physicalStartIndexes[0], physicalStartIndexes.length);\n      }\n    }\n  }\n\n  /**\n   * Move the rows at the provided coordinates.\n   *\n   * @param {number[]} physicalStartIndexes Physical indexes of the rows about to be moved.\n   * @param {number} physicalDropIndex Physical drop index.\n   * @param {object} targetParent Parent of the destination row.\n   */\n  moveRows(physicalStartIndexes, physicalDropIndex, targetParent) {\n    const moveToLastChild = physicalDropIndex === this.dataManager.getRowIndex(targetParent) + this.dataManager.countChildren(targetParent) + 1;\n    this.hot.batchRender(() => {\n      physicalStartIndexes.forEach(physicalStartIndex => {\n        this.dataManager.moveRow(physicalStartIndex, physicalDropIndex, this.movedToCollapsed, moveToLastChild);\n      });\n    });\n  }\n\n  /**\n   * Move the cell meta for multiple rows.\n   *\n   * @param {number[]} baseIndexes Array of indexes for the rows being moved.\n   * @param {number} targetIndex Index of the destination of the move.\n   */\n  moveCellsMeta(baseIndexes, targetIndex) {\n    const rowsOfMeta = [];\n    const movingDown = Math.max(...baseIndexes) < targetIndex;\n    baseIndexes.forEach(baseIndex => {\n      rowsOfMeta.push(this.hot.getCellMetaAtRow(baseIndex));\n    });\n    this.hot.spliceCellsMeta(baseIndexes[0], baseIndexes.length);\n    this.hot.spliceCellsMeta(targetIndex - (movingDown ? rowsOfMeta.length : 0), 0, ...rowsOfMeta);\n  }\n\n  /**\n   * Select cells after the move.\n   *\n   * @param {Array} rows Array of visual row indexes to be moved.\n   * @param {undefined|number} dropIndex Visual row index, being a drop index for the moved rows. Points to where we\n   *   are going to drop the moved elements. To check visualization of drop index please take a look at\n   *   [documentation](@/guides/rows/row-moving.md).\n   */\n  selectCells(rows, dropIndex) {\n    const rowsLen = rows.length;\n    let startRow = 0;\n    let endRow = 0;\n    let selection = null;\n    let lastColIndex = null;\n    if (this.movedToCollapsed) {\n      let physicalDropIndex = null;\n      if (rows[rowsLen - 1] < dropIndex) {\n        physicalDropIndex = this.dataManager.translateTrimmedRow(dropIndex - rowsLen);\n      } else {\n        physicalDropIndex = this.dataManager.translateTrimmedRow(dropIndex);\n      }\n      const parentObject = this.dataManager.getRowParent(physicalDropIndex === null ? this.hot.countSourceRows() - 1 : physicalDropIndex - 1);\n      const parentIndex = this.dataManager.getRowIndex(parentObject);\n      startRow = this.dataManager.untranslateTrimmedRow(parentIndex);\n      endRow = startRow;\n    } else if (rows[rowsLen - 1] < dropIndex) {\n      endRow = dropIndex - 1;\n      startRow = endRow - rowsLen + 1;\n    } else {\n      startRow = dropIndex;\n      endRow = startRow + rowsLen - 1;\n    }\n    selection = this.hot.selection;\n    lastColIndex = this.hot.countCols() - 1;\n    selection.setRangeStart(this.hot._createCellCoords(startRow, 0));\n    selection.setRangeEnd(this.hot._createCellCoords(endRow, lastColIndex), true);\n  }\n\n  // TODO: Reimplementation of function which is inside the `ManualRowMove` plugin.\n  /**\n   * Indicates if order of rows was changed.\n   *\n   * @param {Array} movedRows Array of visual row indexes to be moved.\n   * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements\n   *   will be placed after the moving action. To check the visualization of the final index, please take a look at\n   *   [documentation](@/guides/rows/row-moving.md).\n   * @returns {boolean}\n   */\n  isRowOrderChanged(movedRows, finalIndex) {\n    return movedRows.some((row, nrOfMovedElement) => row - nrOfMovedElement !== finalIndex);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport DataManager from \"./data/dataManager.mjs\";\nimport CollapsingUI from \"./ui/collapsing.mjs\";\nimport HeadersUI from \"./ui/headers.mjs\";\nimport ContextMenuUI from \"./ui/contextMenu.mjs\";\nimport { error } from \"../../helpers/console.mjs\";\nimport { isArrayOfObjects } from \"../../helpers/data.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nimport RowMoveController from \"./utils/rowMoveController.mjs\";\nexport const PLUGIN_KEY = 'nestedRows';\nexport const PLUGIN_PRIORITY = 300;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * Error message for the wrong data type error.\n */\nconst WRONG_DATA_TYPE_ERROR = 'The Nested Rows plugin requires an Array of Objects as a dataset to be' + ' provided. The plugin has been disabled.';\n\n/**\n * @plugin NestedRows\n * @class NestedRows\n *\n * @description\n * Plugin responsible for displaying and operating on data sources with nested structures.\n */\nvar _skipRender = /*#__PURE__*/new WeakMap();\nvar _skipCoreAPIModifiers = /*#__PURE__*/new WeakMap();\nvar _onBeforeRowMove = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onFilterData = /*#__PURE__*/new WeakSet();\nvar _onAfterContextMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onAfterGetRowHeader = /*#__PURE__*/new WeakSet();\nvar _onModifyRowHeaderWidth = /*#__PURE__*/new WeakSet();\nvar _onAfterRemoveRow = /*#__PURE__*/new WeakSet();\nvar _onBeforeRemoveRow = /*#__PURE__*/new WeakSet();\nvar _onBeforeAddChild = /*#__PURE__*/new WeakSet();\nvar _onAfterAddChild = /*#__PURE__*/new WeakSet();\nvar _onBeforeDetachChild = /*#__PURE__*/new WeakSet();\nvar _onAfterDetachChild = /*#__PURE__*/new WeakSet();\nvar _onAfterCreateRow = /*#__PURE__*/new WeakSet();\nvar _onAfterInit = /*#__PURE__*/new WeakSet();\nvar _onBeforeViewRender = /*#__PURE__*/new WeakSet();\nvar _onBeforeLoadData = /*#__PURE__*/new WeakSet();\nexport class NestedRows extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * `beforeLoadData` hook callback.\n     *\n     * @param {Array} data The source data.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeLoadData);\n    /**\n     * `beforeViewRender` hook callback.\n     *\n     * @param {boolean} force Indicates if the render call was triggered by a change of settings or data.\n     * @param {object} skipRender An object, holder for skipRender functionality.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeViewRender);\n    /**\n     * `afterInit` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterInit);\n    /**\n     * `afterCreateRow` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterCreateRow);\n    /**\n     * `afterDetachChild` hook callback.\n     *\n     * @param {object} parent Parent element.\n     * @param {object} element New child element.\n     * @param {number} finalElementRowIndex The final row index of the detached element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDetachChild);\n    /**\n     * `beforeDetachChild` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeDetachChild);\n    /**\n     * `afterAddChild` hook callback.\n     *\n     * @param {object} parent Parent element.\n     * @param {object} element New child element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterAddChild);\n    /**\n     * `beforeAddChild` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeAddChild);\n    /**\n     * Callback for the `beforeRemoveRow` change list of removed physical indexes by reference. Removing parent node\n     * has effect in removing children nodes.\n     *\n     * @param {number} index Visual index of starter row.\n     * @param {number} amount Amount of rows to be removed.\n     * @param {Array} physicalRows List of physical indexes.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRemoveRow);\n    /**\n     * `onAfterRemoveRow` hook callback.\n     *\n     * @param {number} index Removed row.\n     * @param {number} amount Amount of removed rows.\n     * @param {Array} logicRows An array of the removed physical rows.\n     * @param {string} source Source of action.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterRemoveRow);\n    /**\n     * `modifyRowHeaderWidth` hook callback.\n     *\n     * @param {number} rowHeaderWidth The initial row header width(s).\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeaderWidth);\n    /**\n     * `afterGetRowHeader` hook callback.\n     *\n     * @param {number} row Row index.\n     * @param {HTMLElement} TH Row header element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetRowHeader);\n    /**\n     * `afterContextMenuDefaultOptions` hook callback.\n     *\n     * @param {object} defaultOptions The default context menu items order.\n     * @returns {boolean}\n     */\n    _classPrivateMethodInitSpec(this, _onAfterContextMenuDefaultOptions);\n    /**\n     * Provide custom source data filtering. It's handled by core method and replaces the native filtering.\n     *\n     * @param {number} index The index where the data filtering starts.\n     * @param {number} amount An amount of rows which filtering applies to.\n     * @param {number} physicalRows Physical row indexes.\n     * @returns {Array}\n     */\n    _classPrivateMethodInitSpec(this, _onFilterData);\n    /**\n     * `beforeOnCellMousedown` hook callback.\n     *\n     * @param {MouseEvent} event Mousedown event.\n     * @param {object} coords Cell coords.\n     * @param {HTMLElement} TD Clicked cell.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @param {Array} rows Array of visual row indexes to be moved.\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements\n     *   will be placed after the moving action. To check the visualization of the final index, please take a look at\n     *   [documentation](@/guides/rows/row-summary.md).\n     * @param {undefined|number} dropIndex Visual row index, being a drop index for the moved rows. Points to where we\n     *   are going to drop the moved elements. To check visualization of drop index please take a look at\n     *   [documentation](@/guides/rows/row-summary.md).\n     * @param {boolean} movePossible Indicates if it's possible to move rows to the desired position.\n     * @fires Hooks#afterRowMove\n     * @returns {boolean}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRowMove);\n    /**\n     * Reference to the DataManager instance.\n     *\n     * @private\n     * @type {object}\n     */\n    _defineProperty(this, \"dataManager\", null);\n    /**\n     * Reference to the HeadersUI instance.\n     *\n     * @private\n     * @type {object}\n     */\n    _defineProperty(this, \"headersUI\", null);\n    /**\n     * Map of skipped rows by plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n    _defineProperty(this, \"collapsedRowsMap\", null);\n    /**\n     * Allows skipping the render cycle if set as `true`.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _skipRender, {\n      writable: true,\n      value: false\n    });\n    /**\n     * Allows skipping the internal Core methods call if set as `true`.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _skipCoreAPIModifiers, {\n      writable: true,\n      value: false\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link NestedRows#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.collapsedRowsMap = this.hot.rowIndexMapper.registerMap('nestedRows', new TrimmingMap());\n    this.dataManager = new DataManager(this, this.hot);\n    this.collapsingUI = new CollapsingUI(this, this.hot);\n    this.headersUI = new HeadersUI(this, this.hot);\n    this.contextMenuUI = new ContextMenuUI(this, this.hot);\n    this.rowMoveController = new RowMoveController(this);\n    this.addHook('afterInit', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onAfterInit, _onAfterInit2).call(_this, ...args);\n    });\n    this.addHook('beforeViewRender', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeViewRender, _onBeforeViewRender2).call(_this, ...args);\n    });\n    this.addHook('modifyRowData', function () {\n      return _this.onModifyRowData(...arguments);\n    });\n    this.addHook('modifySourceLength', function () {\n      return _this.onModifySourceLength(...arguments);\n    });\n    this.addHook('beforeDataSplice', function () {\n      return _this.onBeforeDataSplice(...arguments);\n    });\n    this.addHook('filterData', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onFilterData, _onFilterData2).call(_this, ...args);\n    });\n    this.addHook('afterContextMenuDefaultOptions', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _classPrivateMethodGet(_this, _onAfterContextMenuDefaultOptions, _onAfterContextMenuDefaultOptions2).call(_this, ...args);\n    });\n    this.addHook('afterGetRowHeader', function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      return _classPrivateMethodGet(_this, _onAfterGetRowHeader, _onAfterGetRowHeader2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeRemoveRow', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeRemoveRow, _onBeforeRemoveRow2).call(_this, ...args);\n    });\n    this.addHook('afterRemoveRow', function () {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      return _classPrivateMethodGet(_this, _onAfterRemoveRow, _onAfterRemoveRow2).call(_this, ...args);\n    });\n    this.addHook('beforeAddChild', function () {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeAddChild, _onBeforeAddChild2).call(_this, ...args);\n    });\n    this.addHook('afterAddChild', function () {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      return _classPrivateMethodGet(_this, _onAfterAddChild, _onAfterAddChild2).call(_this, ...args);\n    });\n    this.addHook('beforeDetachChild', function () {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeDetachChild, _onBeforeDetachChild2).call(_this, ...args);\n    });\n    this.addHook('afterDetachChild', function () {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      return _classPrivateMethodGet(_this, _onAfterDetachChild, _onAfterDetachChild2).call(_this, ...args);\n    });\n    this.addHook('modifyRowHeaderWidth', function () {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n      return _classPrivateMethodGet(_this, _onModifyRowHeaderWidth, _onModifyRowHeaderWidth2).call(_this, ...args);\n    });\n    this.addHook('afterCreateRow', function () {\n      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n        args[_key14] = arguments[_key14];\n      }\n      return _classPrivateMethodGet(_this, _onAfterCreateRow, _onAfterCreateRow2).call(_this, ...args);\n    });\n    this.addHook('beforeRowMove', function () {\n      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n        args[_key15] = arguments[_key15];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeRowMove, _onBeforeRowMove2).call(_this, ...args);\n    });\n    this.addHook('beforeLoadData', data => _classPrivateMethodGet(this, _onBeforeLoadData, _onBeforeLoadData2).call(this, data));\n    this.addHook('beforeUpdateData', data => _classPrivateMethodGet(this, _onBeforeLoadData, _onBeforeLoadData2).call(this, data));\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('nestedRows');\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`nestedRows`](@/api/options.md#nestedrows)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n\n    // We store a state of the data manager.\n    const currentSourceData = this.dataManager.getData();\n    this.enablePlugin();\n\n    // After enabling plugin previously stored data is restored.\n    this.dataManager.updateWithData(currentSourceData);\n    super.updatePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling collapsible columns.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Enter']],\n      callback: () => {\n        const {\n          highlight\n        } = this.hot.getSelectedRangeLast();\n        if (highlight.col === -1 && highlight.row >= 0) {\n          const row = this.collapsingUI.translateTrimmedRow(highlight.row);\n          if (this.collapsingUI.areChildrenCollapsed(row)) {\n            this.collapsingUI.expandChildren(row);\n          } else {\n            this.collapsingUI.collapseChildren(row);\n          }\n        }\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling collapsible columns.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n  /**\n   * Enable the modify hook skipping flag - allows retrieving the data from Handsontable without this plugin's\n   * modifications.\n   *\n   * @private\n   */\n  disableCoreAPIModifiers() {\n    _classPrivateFieldSet(this, _skipCoreAPIModifiers, true);\n  }\n\n  /**\n   * Disable the modify hook skipping flag.\n   *\n   * @private\n   */\n  enableCoreAPIModifiers() {\n    _classPrivateFieldSet(this, _skipCoreAPIModifiers, false);\n  }\n  /**\n   * The modifyRowData hook callback.\n   *\n   * @private\n   * @param {number} row Visual row index.\n   * @returns {boolean}\n   */\n  onModifyRowData(row) {\n    if (_classPrivateFieldGet(this, _skipCoreAPIModifiers)) {\n      return;\n    }\n    return this.dataManager.getDataObject(row);\n  }\n\n  /**\n   * Modify the source data length to match the length of the nested structure.\n   *\n   * @private\n   * @returns {number}\n   */\n  onModifySourceLength() {\n    if (_classPrivateFieldGet(this, _skipCoreAPIModifiers)) {\n      return;\n    }\n    return this.dataManager.countAllRows();\n  }\n\n  /**\n   * @private\n   * @param {number} index The index where the data was spliced.\n   * @param {number} amount An amount of items to remove.\n   * @param {object} element An element to add.\n   * @returns {boolean}\n   */\n  onBeforeDataSplice(index, amount, element) {\n    if (_classPrivateFieldGet(this, _skipCoreAPIModifiers) || this.dataManager.isRowHighestLevel(index)) {\n      return true;\n    }\n    this.dataManager.spliceData(index, amount, element);\n    return false;\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onBeforeRowMove2(rows, finalIndex, dropIndex, movePossible) {\n  return this.rowMoveController.onBeforeRowMove(rows, finalIndex, dropIndex, movePossible);\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD) {\n  this.collapsingUI.toggleState(event, coords, TD);\n}\nfunction _onFilterData2(index, amount, physicalRows) {\n  this.collapsingUI.collapsedRowsStash.stash();\n  this.collapsingUI.collapsedRowsStash.trimStash(physicalRows[0], amount);\n  this.collapsingUI.collapsedRowsStash.shiftStash(physicalRows[0], null, -1 * amount);\n  this.dataManager.filterData(index, amount, physicalRows);\n  _classPrivateFieldSet(this, _skipRender, true);\n  return this.dataManager.getData().slice(); // Data contains reference sometimes.\n}\nfunction _onAfterContextMenuDefaultOptions2(defaultOptions) {\n  return this.contextMenuUI.appendOptions(defaultOptions);\n}\nfunction _onAfterGetRowHeader2(row, TH) {\n  this.headersUI.appendLevelIndicators(row, TH);\n}\nfunction _onModifyRowHeaderWidth2(rowHeaderWidth) {\n  return Math.max(this.headersUI.rowHeaderWidthCache, rowHeaderWidth);\n}\nfunction _onAfterRemoveRow2(index, amount, logicRows, source) {\n  if (source === this.pluginName) {\n    return;\n  }\n  this.hot._registerTimeout(() => {\n    _classPrivateFieldSet(this, _skipRender, false);\n    this.headersUI.updateRowHeaderWidth();\n    this.collapsingUI.collapsedRowsStash.applyStash();\n  });\n}\nfunction _onBeforeRemoveRow2(index, amount, physicalRows) {\n  const modifiedPhysicalRows = Array.from(physicalRows.reduce((removedRows, physicalIndex) => {\n    if (this.dataManager.isParent(physicalIndex)) {\n      const children = this.dataManager.getDataObject(physicalIndex).__children;\n\n      // Preserve a parent in the list of removed rows.\n      removedRows.add(physicalIndex);\n      if (Array.isArray(children)) {\n        // Add a children to the list of removed rows.\n        children.forEach(child => removedRows.add(this.dataManager.getRowIndex(child)));\n      }\n      return removedRows;\n    }\n\n    // Don't modify list of removed rows when already checked element isn't a parent.\n    return removedRows.add(physicalIndex);\n  }, new Set()));\n\n  // Modifying hook's argument by the reference.\n  physicalRows.length = 0;\n  physicalRows.push(...modifiedPhysicalRows);\n}\nfunction _onBeforeAddChild2() {\n  this.collapsingUI.collapsedRowsStash.stash();\n}\nfunction _onAfterAddChild2(parent, element) {\n  this.collapsingUI.collapsedRowsStash.shiftStash(this.dataManager.getRowIndex(element));\n  this.collapsingUI.collapsedRowsStash.applyStash();\n  this.headersUI.updateRowHeaderWidth();\n}\nfunction _onBeforeDetachChild2() {\n  this.collapsingUI.collapsedRowsStash.stash();\n}\nfunction _onAfterDetachChild2(parent, element, finalElementRowIndex) {\n  this.collapsingUI.collapsedRowsStash.shiftStash(finalElementRowIndex, null, -1);\n  this.collapsingUI.collapsedRowsStash.applyStash();\n  this.headersUI.updateRowHeaderWidth();\n}\nfunction _onAfterCreateRow2() {\n  this.dataManager.rewriteCache();\n}\nfunction _onAfterInit2() {\n  this.headersUI.updateRowHeaderWidth();\n}\nfunction _onBeforeViewRender2(force, skipRender) {\n  if (_classPrivateFieldGet(this, _skipRender)) {\n    skipRender.skipRender = true;\n  }\n}\nfunction _onBeforeLoadData2(data) {\n  if (!isArrayOfObjects(data)) {\n    error(WRONG_DATA_TYPE_ERROR);\n    this.hot.getSettings()[PLUGIN_KEY] = false;\n    this.disablePlugin();\n    return;\n  }\n  this.dataManager.setData(data);\n  this.dataManager.rewriteCache();\n}", "import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { arrayEach } from \"../../helpers/array.mjs\";\n/**\n * @private\n * @class Storage\n */\nclass Storage {\n  // eslint-disable-next-line no-restricted-globals\n  constructor(prefix) {\n    let rootWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n    /**\n     * Reference to proper window.\n     *\n     * @type {Window}\n     */\n    _defineProperty(this, \"rootWindow\", void 0);\n    /**\n     * Prefix for key (id element).\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"prefix\", void 0);\n    /**\n     * Saved keys.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"savedKeys\", []);\n    this.rootWindow = rootWindow;\n    this.prefix = prefix;\n    this.loadSavedKeys();\n  }\n\n  /**\n   * Save data to localStorage.\n   *\n   * @param {string} key Key string.\n   * @param {Mixed} value Value to save.\n   */\n  saveValue(key, value) {\n    this.rootWindow.localStorage.setItem(`${this.prefix}_${key}`, JSON.stringify(value));\n    if (this.savedKeys.indexOf(key) === -1) {\n      this.savedKeys.push(key);\n      this.saveSavedKeys();\n    }\n  }\n\n  /**\n   * Load data from localStorage.\n   *\n   * @param {string} key Key string.\n   * @param {object} defaultValue Object containing the loaded data.\n   *\n   * @returns {object|undefined}\n   */\n  loadValue(key, defaultValue) {\n    const itemKey = typeof key === 'undefined' ? defaultValue : key;\n    const value = this.rootWindow.localStorage.getItem(`${this.prefix}_${itemKey}`);\n    return value === null ? undefined : JSON.parse(value);\n  }\n\n  /**\n   * Reset given data from localStorage.\n   *\n   * @param {string} key Key string.\n   */\n  reset(key) {\n    this.rootWindow.localStorage.removeItem(`${this.prefix}_${key}`);\n  }\n\n  /**\n   * Reset all data from localStorage.\n   *\n   */\n  resetAll() {\n    arrayEach(this.savedKeys, (value, index) => {\n      this.rootWindow.localStorage.removeItem(`${this.prefix}_${this.savedKeys[index]}`);\n    });\n    this.clearSavedKeys();\n  }\n\n  /**\n   * Load and save all keys from localStorage.\n   *\n   * @private\n   */\n  loadSavedKeys() {\n    const keysJSON = this.rootWindow.localStorage.getItem(`${this.prefix}__persistentStateKeys`);\n    const keys = typeof keysJSON === 'string' ? JSON.parse(keysJSON) : undefined;\n    this.savedKeys = keys || [];\n  }\n\n  /**\n   * Save saved key in localStorage.\n   *\n   * @private\n   */\n  saveSavedKeys() {\n    this.rootWindow.localStorage.setItem(`${this.prefix}__persistentStateKeys`, JSON.stringify(this.savedKeys));\n  }\n\n  /**\n   * Clear saved key from localStorage.\n   *\n   * @private\n   */\n  clearSavedKeys() {\n    this.savedKeys.length = 0;\n    this.saveSavedKeys();\n  }\n}\nexport default Storage;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Storage from \"./storage.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nHooks.getSingleton().register('persistentStateSave');\nHooks.getSingleton().register('persistentStateLoad');\nHooks.getSingleton().register('persistentStateReset');\nexport const PLUGIN_KEY = 'persistentState';\nexport const PLUGIN_PRIORITY = 0;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin PersistentState\n * @class PersistentState\n *\n * @description\n * Save the state of column sorting, column positions and column sizes in local storage to preserve table state\n * between page reloads.\n *\n * In order to enable data storage mechanism, {@link Options#persistentState} option must be set to `true`.\n *\n * When persistentState is enabled it exposes 3 hooks:\n * - {@link Hooks#persistentStateSave} - Saves value under given key in browser local storage.\n * - {@link Hooks#persistentStateLoad} - Loads value, saved under given key, from browser local storage. The loaded\n * value will be saved in `saveTo.value`.\n * - {@link Hooks#persistentStateReset} - Clears the value saved under key. If no key is given, all values associated\n * with table will be cleared.\n *\n * __Note:__ The main reason behind using `persistentState` hooks rather than regular LocalStorage API is that it\n * ensures separation of data stored by multiple Handsontable instances. In other words, if you have two (or more)\n * instances of Handsontable on one page, data saved by one instance won't be accessible by the second instance.\n * Those two instances can store data under the same key and no data would be overwritten.\n *\n * __Important:__ In order for the data separation to work properly, make sure that each instance of Handsontable has a unique `id`.\n *\n */\nexport class PersistentState extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Instance of {@link Storage}.\n     *\n     * @private\n     * @type {Storage}\n     */\n    _defineProperty(this, \"storage\", void 0);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link PersistentState#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    if (!this.storage) {\n      this.storage = new Storage(this.hot.rootElement.id, this.hot.rootWindow);\n    }\n    this.addHook('persistentStateSave', (key, value) => this.saveValue(key, value));\n    this.addHook('persistentStateLoad', (key, saveTo) => this.loadValue(key, saveTo));\n    this.addHook('persistentStateReset', () => this.resetValue());\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.storage = undefined;\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`persistentState`](@/api/options.md#persistentstate)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Loads the value from local storage.\n   *\n   * @param {string} key Storage key.\n   * @param {object} saveTo Saved value from local storage.\n   */\n  loadValue(key, saveTo) {\n    saveTo.value = this.storage.loadValue(key);\n  }\n\n  /**\n   * Saves the data to local storage.\n   *\n   * @param {string} key Storage key.\n   * @param {Mixed} value Value to save.\n   */\n  saveValue(key, value) {\n    this.storage.saveValue(key, value);\n  }\n\n  /**\n   * Resets the data or all data from local storage.\n   *\n   * @param {string} key [optional] Storage key.\n   */\n  resetValue(key) {\n    if (typeof key === 'undefined') {\n      this.storage.resetAll();\n    } else {\n      this.storage.reset(key);\n    }\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nexport const PLUGIN_KEY = 'search';\nexport const PLUGIN_PRIORITY = 190;\nconst DEFAULT_SEARCH_RESULT_CLASS = 'htSearchResult';\nconst DEFAULT_CALLBACK = function (instance, row, col, data, testResult) {\n  instance.getCellMeta(row, col).isSearchResult = testResult;\n};\nconst DEFAULT_QUERY_METHOD = function (query, value, cellProperties) {\n  if (isUndefined(query) || query === null || !query.toLocaleLowerCase || query.length === 0) {\n    return false;\n  }\n  if (isUndefined(value) || value === null) {\n    return false;\n  }\n  return value.toString().toLocaleLowerCase(cellProperties.locale).indexOf(query.toLocaleLowerCase(cellProperties.locale)) !== -1;\n};\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin Search\n * @class Search\n *\n * @description\n * The search plugin provides an easy interface to search data across Handsontable.\n *\n * In order to enable search mechanism, {@link Options#search} option must be set to `true`.\n *\n * @example\n * ```js\n * // as boolean\n * search: true\n * // as a object with one or more options\n * search: {\n *   callback: myNewCallbackFunction,\n *   queryMethod: myNewQueryMethod,\n *   searchResultClass: 'customClass'\n * }\n *\n * // Access to search plugin instance:\n * const searchPlugin = hot.getPlugin('search');\n *\n * // Set callback programmatically:\n * searchPlugin.setCallback(myNewCallbackFunction);\n * // Set query method programmatically:\n * searchPlugin.setQueryMethod(myNewQueryMethod);\n * // Set search result cells class programmatically:\n * searchPlugin.setSearchResultClass(customClass);\n * ```\n */\nvar _onBeforeRenderer = /*#__PURE__*/new WeakSet();\nexport class Search extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * The `beforeRenderer` hook callback.\n     *\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {number} row Visual row index.\n     * @param {number} col Visual column index.\n     * @param {string|number} prop Column property name or a column index, if datasource is an array of arrays.\n     * @param {string} value Value of the rendered cell.\n     * @param {object} cellProperties Object containing the cell's properties.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeRenderer);\n    /**\n     * Function called during querying for each cell from the {@link DataMap}.\n     *\n     * @private\n     * @type {Function}\n     */\n    _defineProperty(this, \"callback\", DEFAULT_CALLBACK);\n    /**\n     * Query function is responsible for determining whether a query matches the value stored in a cell.\n     *\n     * @private\n     * @type {Function}\n     */\n    _defineProperty(this, \"queryMethod\", DEFAULT_QUERY_METHOD);\n    /**\n     * Class name added to each cell that belongs to the searched query.\n     *\n     * @private\n     * @type {string}\n     */\n    _defineProperty(this, \"searchResultClass\", DEFAULT_SEARCH_RESULT_CLASS);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const searchSettings = this.hot.getSettings()[PLUGIN_KEY];\n    this.updatePluginSettings(searchSettings);\n    this.addHook('beforeRenderer', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeRenderer, _onBeforeRenderer2).call(_this, ...args);\n    });\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    var _this2 = this;\n    const beforeRendererCallback = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this2, _onBeforeRenderer, _onBeforeRenderer2).call(_this2, ...args);\n    };\n    this.hot.addHook('beforeRenderer', beforeRendererCallback);\n    this.hot.addHookOnce('afterViewRender', () => {\n      this.hot.removeHook('beforeRenderer', beforeRendererCallback);\n    });\n    super.disablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`search`](@/api/options.md#search)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Makes the query.\n   *\n   * @param {string} queryStr Value to be search.\n   * @param {Function} [callback] Callback function performed on cells with values which matches to the searched query.\n   * @param {Function} [queryMethod] Query function responsible for determining whether a query matches the value stored in a cell.\n   * @returns {object[]} Return an array of objects with `row`, `col`, `data` properties or empty array.\n   */\n  query(queryStr) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCallback();\n    let queryMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.getQueryMethod();\n    const rowCount = this.hot.countRows();\n    const colCount = this.hot.countCols();\n    const queryResult = [];\n    const instance = this.hot;\n    rangeEach(0, rowCount - 1, rowIndex => {\n      rangeEach(0, colCount - 1, colIndex => {\n        const cellData = this.hot.getDataAtCell(rowIndex, colIndex);\n        const cellProperties = this.hot.getCellMeta(rowIndex, colIndex);\n        const cellCallback = cellProperties.search.callback || callback;\n        const cellQueryMethod = cellProperties.search.queryMethod || queryMethod;\n        const testResult = cellQueryMethod(queryStr, cellData, cellProperties);\n        if (testResult) {\n          const singleResult = {\n            row: rowIndex,\n            col: colIndex,\n            data: cellData\n          };\n          queryResult.push(singleResult);\n        }\n        if (cellCallback) {\n          cellCallback(instance, rowIndex, colIndex, cellData, testResult);\n        }\n      });\n    });\n    return queryResult;\n  }\n\n  /**\n   * Gets the callback function.\n   *\n   * @returns {Function} Return the callback function.\n   */\n  getCallback() {\n    return this.callback;\n  }\n\n  /**\n   * Sets the callback function. This function will be called during querying for each cell.\n   *\n   * @param {Function} newCallback A callback function.\n   */\n  setCallback(newCallback) {\n    this.callback = newCallback;\n  }\n\n  /**\n   * Gets the query method function.\n   *\n   * @returns {Function} Return the query method.\n   */\n  getQueryMethod() {\n    return this.queryMethod;\n  }\n\n  /**\n   * Sets the query method function. The function is responsible for determining whether a query matches the value stored in a cell.\n   *\n   * @param {Function} newQueryMethod A function with specific match logic.\n   */\n  setQueryMethod(newQueryMethod) {\n    this.queryMethod = newQueryMethod;\n  }\n\n  /**\n   * Gets search result cells class name.\n   *\n   * @returns {string} Return the cell class name.\n   */\n  getSearchResultClass() {\n    return this.searchResultClass;\n  }\n\n  /**\n   * Sets search result cells class name. This class name will be added to each cell that belongs to the searched query.\n   *\n   * @param {string} newElementClass CSS class name.\n   */\n  setSearchResultClass(newElementClass) {\n    this.searchResultClass = newElementClass;\n  }\n\n  /**\n   * Updates the settings of the plugin.\n   *\n   * @param {object} searchSettings The plugin settings, taken from Handsontable configuration.\n   * @private\n   */\n  updatePluginSettings(searchSettings) {\n    if (isObject(searchSettings)) {\n      if (searchSettings.searchResultClass) {\n        this.setSearchResultClass(searchSettings.searchResultClass);\n      }\n      if (searchSettings.queryMethod) {\n        this.setQueryMethod(searchSettings.queryMethod);\n      }\n      if (searchSettings.callback) {\n        this.setCallback(searchSettings.callback);\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onBeforeRenderer2(TD, row, col, prop, value, cellProperties) {\n  // TODO: #4972\n  const className = cellProperties.className || [];\n  let classArray = [];\n  if (typeof className === 'string') {\n    classArray = className.split(' ');\n  } else {\n    classArray.push(...className);\n  }\n  if (this.isEnabled() && cellProperties.isSearchResult) {\n    if (!classArray.includes(this.searchResultClass)) {\n      classArray.push(`${this.searchResultClass}`);\n    }\n  } else if (classArray.includes(this.searchResultClass)) {\n    classArray.splice(classArray.indexOf(this.searchResultClass), 1);\n  }\n  cellProperties.className = classArray.join(' ');\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { isTouchSupported } from \"../../helpers/feature.mjs\";\nexport const PLUGIN_KEY = 'touchScroll';\nexport const PLUGIN_PRIORITY = 200;\n\n/**\n * @private\n * @plugin TouchScroll\n * @class TouchScroll\n */\nvar _onAfterViewRender = /*#__PURE__*/new WeakSet();\nvar _onBeforeTouchScroll = /*#__PURE__*/new WeakSet();\nvar _onAfterMomentumScroll = /*#__PURE__*/new WeakSet();\nexport class TouchScroll extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * After momentum scroll listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterMomentumScroll);\n    /**\n     * Touch scroll listener.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeTouchScroll);\n    /**\n     * After view render listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterViewRender);\n    /**\n     * Collection of scrollbars to update.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"scrollbars\", []);\n    /**\n     * Collection of overlays to update.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"clones\", []);\n    /**\n     * Flag which determines if collection of overlays should be refilled on every table render.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    _defineProperty(this, \"lockedCollection\", false);\n    /**\n     * Flag which determines if walkontable should freeze overlays while scrolling.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    _defineProperty(this, \"freezeOverlays\", false);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get SETTING_KEYS() {\n    return true;\n  }\n  /**\n   * Check if plugin is enabled.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return isTouchSupported();\n  }\n\n  /**\n   * Enable the plugin.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('afterViewRender', () => _classPrivateMethodGet(this, _onAfterViewRender, _onAfterViewRender2).call(this));\n    this.registerEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin to use the latest options you have specified.\n   */\n  updatePlugin() {\n    this.lockedCollection = false;\n    super.updatePlugin();\n  }\n\n  /**\n   * Disable plugin for this Handsontable instance.\n   */\n  disablePlugin() {\n    super.disablePlugin();\n  }\n\n  /**\n   * Register all necessary events.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.addHook('beforeTouchScroll', () => _classPrivateMethodGet(this, _onBeforeTouchScroll, _onBeforeTouchScroll2).call(this));\n    this.addHook('afterMomentumScroll', () => _classPrivateMethodGet(this, _onAfterMomentumScroll, _onAfterMomentumScroll2).call(this));\n  }\n}\nfunction _onAfterViewRender2() {\n  if (this.lockedCollection) {\n    return;\n  }\n  const {\n    topOverlay,\n    bottomOverlay,\n    inlineStartOverlay,\n    topInlineStartCornerOverlay,\n    bottomInlineStartCornerOverlay\n  } = this.hot.view._wt.wtOverlays;\n  this.lockedCollection = true;\n  this.scrollbars.length = 0;\n  this.scrollbars.push(topOverlay);\n  if (bottomOverlay.clone) {\n    this.scrollbars.push(bottomOverlay);\n  }\n  this.scrollbars.push(inlineStartOverlay);\n  if (topInlineStartCornerOverlay) {\n    this.scrollbars.push(topInlineStartCornerOverlay);\n  }\n  if (bottomInlineStartCornerOverlay && bottomInlineStartCornerOverlay.clone) {\n    this.scrollbars.push(bottomInlineStartCornerOverlay);\n  }\n  this.clones = [];\n  if (topOverlay.needFullRender) {\n    this.clones.push(topOverlay.clone.wtTable.holder.parentNode);\n  }\n  if (bottomOverlay.needFullRender) {\n    this.clones.push(bottomOverlay.clone.wtTable.holder.parentNode);\n  }\n  if (inlineStartOverlay.needFullRender) {\n    this.clones.push(inlineStartOverlay.clone.wtTable.holder.parentNode);\n  }\n  if (topInlineStartCornerOverlay) {\n    this.clones.push(topInlineStartCornerOverlay.clone.wtTable.holder.parentNode);\n  }\n  if (bottomInlineStartCornerOverlay && bottomInlineStartCornerOverlay.clone) {\n    this.clones.push(bottomInlineStartCornerOverlay.clone.wtTable.holder.parentNode);\n  }\n}\nfunction _onBeforeTouchScroll2() {\n  this.freezeOverlays = true;\n  arrayEach(this.clones, clone => {\n    addClass(clone, 'hide-tween');\n  });\n}\nfunction _onAfterMomentumScroll2() {\n  this.freezeOverlays = false;\n  arrayEach(this.clones, clone => {\n    removeClass(clone, 'hide-tween');\n    addClass(clone, 'show-tween');\n  });\n  this.hot._registerTimeout(() => {\n    arrayEach(this.clones, clone => {\n      removeClass(clone, 'show-tween');\n    });\n  }, 400);\n  arrayEach(this.scrollbars, scrollbar => {\n    scrollbar.refresh();\n    scrollbar.resetFixedPosition();\n  });\n  this.hot.view._wt.wtOverlays.syncScrollWithMaster();\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nimport { arrayEach, arrayReduce } from \"../../helpers/array.mjs\";\nexport const PLUGIN_KEY = 'trimRows';\nexport const PLUGIN_PRIORITY = 330;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin TrimRows\n * @class TrimRows\n *\n * @description\n * The plugin allows to trim certain rows. The trimming is achieved by applying the transformation algorithm to the data\n * transformation. In this case, when the row is trimmed it is not accessible using `getData*` methods thus the trimmed\n * data is not visible to other plugins.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // hide selected rows on table initialization\n *   trimRows: [1, 2, 5]\n * });\n *\n * // access the trimRows plugin instance\n * const trimRowsPlugin = hot.getPlugin('trimRows');\n *\n * // hide single row\n * trimRowsPlugin.trimRow(1);\n *\n * // hide multiple rows\n * trimRowsPlugin.trimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.trimRows([1, 2, 9]);\n *\n * // show single row\n * trimRowsPlugin.untrimRow(1);\n *\n * // show multiple rows\n * trimRowsPlugin.untrimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.untrimRows([1, 2, 9]);\n *\n * // rerender table to see the changes\n * hot.render();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   // hide selected rows on table initialization\n *   trimRows={[1, 2, 5]}\n * />\n *\n * const hot = hotRef.current.hotInstance;\n * // access the trimRows plugin instance\n * const trimRowsPlugin = hot.getPlugin('trimRows');\n *\n * // hide single row\n * trimRowsPlugin.trimRow(1);\n *\n * // hide multiple rows\n * trimRowsPlugin.trimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.trimRows([1, 2, 9]);\n *\n * // show single row\n * trimRowsPlugin.untrimRow(1);\n *\n * // show multiple rows\n * trimRowsPlugin.untrimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.untrimRows([1, 2, 9]);\n *\n * // rerender table to see the changes\n * hot.render();\n * ```\n * :::\n */\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nexport class TrimRows extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On map initialized hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    /**\n     * Map of skipped rows by the plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n    _defineProperty(this, \"trimmedRowsMap\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.trimmedRowsMap = this.hot.rowIndexMapper.registerMap('trimRows', new TrimmingMap());\n    this.trimmedRowsMap.addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`trimRows`](@/api/options.md#trimrows)\n   */\n  updatePlugin() {\n    const trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(trimmedRows)) {\n      this.hot.batchExecution(() => {\n        this.trimmedRowsMap.clear();\n        arrayEach(trimmedRows, physicalRow => {\n          this.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n        });\n      }, true);\n    }\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('trimRows');\n    super.disablePlugin();\n  }\n\n  /**\n   * Get list of trimmed rows.\n   *\n   * @returns {Array} Physical rows.\n   */\n  getTrimmedRows() {\n    return this.trimmedRowsMap.getTrimmedIndexes();\n  }\n\n  /**\n   * Trims the rows provided in the array.\n   *\n   * @param {number[]} rows Array of physical row indexes.\n   * @fires Hooks#beforeTrimRow\n   * @fires Hooks#afterTrimRow\n   */\n  trimRows(rows) {\n    const currentTrimConfig = this.getTrimmedRows();\n    const isValidConfig = this.isValidConfig(rows);\n    let destinationTrimConfig = currentTrimConfig;\n    if (isValidConfig) {\n      destinationTrimConfig = Array.from(new Set(currentTrimConfig.concat(rows)));\n    }\n    const allowTrimRow = this.hot.runHooks('beforeTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig);\n    if (allowTrimRow === false) {\n      return;\n    }\n    if (isValidConfig) {\n      this.hot.batchExecution(() => {\n        arrayEach(rows, physicalRow => {\n          this.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n        });\n      }, true);\n    }\n    this.hot.runHooks('afterTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig, isValidConfig && destinationTrimConfig.length > currentTrimConfig.length);\n  }\n\n  /**\n   * Trims the row provided as a physical row index (counting from 0).\n   *\n   * @param {...number} row Physical row index.\n   */\n  trimRow() {\n    for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n      row[_key] = arguments[_key];\n    }\n    this.trimRows(row);\n  }\n\n  /**\n   * Untrims the rows provided in the array.\n   *\n   * @param {number[]} rows Array of physical row indexes.\n   * @fires Hooks#beforeUntrimRow\n   * @fires Hooks#afterUntrimRow\n   */\n  untrimRows(rows) {\n    const currentTrimConfig = this.getTrimmedRows();\n    const isValidConfig = this.isValidConfig(rows);\n    let destinationTrimConfig = currentTrimConfig;\n    const trimmingMapValues = this.trimmedRowsMap.getValues().slice();\n    const isAnyRowUntrimmed = rows.length > 0;\n    if (isValidConfig && isAnyRowUntrimmed) {\n      // Preparing new values for trimming map.\n      arrayEach(rows, physicalRow => {\n        trimmingMapValues[physicalRow] = false;\n      });\n\n      // Preparing new trimming config.\n      destinationTrimConfig = arrayReduce(trimmingMapValues, (trimmedIndexes, isTrimmed, physicalIndex) => {\n        if (isTrimmed) {\n          trimmedIndexes.push(physicalIndex);\n        }\n        return trimmedIndexes;\n      }, []);\n    }\n    const allowUntrimRow = this.hot.runHooks('beforeUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed);\n    if (allowUntrimRow === false) {\n      return;\n    }\n    if (isValidConfig && isAnyRowUntrimmed) {\n      this.trimmedRowsMap.setValues(trimmingMapValues);\n    }\n    this.hot.runHooks('afterUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed, isValidConfig && destinationTrimConfig.length < currentTrimConfig.length);\n  }\n\n  /**\n   * Untrims the row provided as a physical row index (counting from 0).\n   *\n   * @param {...number} row Physical row index.\n   */\n  untrimRow() {\n    for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      row[_key2] = arguments[_key2];\n    }\n    this.untrimRows(row);\n  }\n\n  /**\n   * Checks if given row is hidden.\n   *\n   * @param {number} physicalRow Physical row index.\n   * @returns {boolean}\n   */\n  isTrimmed(physicalRow) {\n    return this.trimmedRowsMap.getValueAtIndex(physicalRow) || false;\n  }\n\n  /**\n   * Untrims all trimmed rows.\n   */\n  untrimAll() {\n    this.untrimRows(this.getTrimmedRows());\n  }\n\n  /**\n   * Get if trim config is valid. Check whether all of the provided physical row indexes are within source data.\n   *\n   * @param {Array} trimmedRows List of physical row indexes.\n   * @returns {boolean}\n   */\n  isValidConfig(trimmedRows) {\n    const sourceRows = this.hot.countSourceRows();\n    return trimmedRows.every(trimmedRow => Number.isInteger(trimmedRow) && trimmedRow >= 0 && trimmedRow < sourceRows);\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onMapInit2() {\n  const trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n  if (Array.isArray(trimmedRows)) {\n    this.hot.batchExecution(() => {\n      arrayEach(trimmedRows, physicalRow => {\n        this.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n      });\n    }, true);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayMap, arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { inherit, deepClone } from \"../../helpers/object.mjs\";\nimport { align } from \"../contextMenu/utils.mjs\";\nconst SHORTCUTS_GROUP = 'undoRedo';\nexport const PLUGIN_KEY = 'undoRedo';\n\n/**\n * @description\n * Handsontable UndoRedo plugin allows to undo and redo certain actions done in the table.\n *\n * __Note__, that not all actions are currently undo-able. The UndoRedo plugin is enabled by default.\n * @example\n * ```js\n * undo: true\n * ```\n * @class UndoRedo\n * @plugin UndoRedo\n * @param {Core} instance The Handsontable instance.\n */\nfunction UndoRedo(instance) {\n  const plugin = this;\n  this.instance = instance;\n  this.doneActions = [];\n  this.undoneActions = [];\n  this.ignoreNewActions = false;\n  this.enabled = false;\n  instance.addHook('afterChange', function (changes, source) {\n    const changesLen = changes && changes.length;\n    if (!changesLen) {\n      return;\n    }\n    const hasDifferences = changes.find(change => {\n      const [,, oldValue, newValue] = change;\n      return oldValue !== newValue;\n    });\n    if (!hasDifferences) {\n      return;\n    }\n    const wrappedAction = () => {\n      const clonedChanges = changes.reduce((arr, change) => {\n        arr.push([...change]);\n        return arr;\n      }, []);\n      arrayEach(clonedChanges, change => {\n        change[1] = instance.propToCol(change[1]);\n      });\n      const selected = changesLen > 1 ? this.getSelected() : [[clonedChanges[0][0], clonedChanges[0][1]]];\n      return new UndoRedo.ChangeAction(clonedChanges, selected);\n    };\n    plugin.done(wrappedAction, source);\n  });\n  instance.addHook('afterCreateRow', (index, amount, source) => {\n    plugin.done(() => new UndoRedo.CreateRowAction(index, amount), source);\n  });\n  instance.addHook('beforeRemoveRow', (index, amount, logicRows, source) => {\n    const wrappedAction = () => {\n      const physicalRowIndex = instance.toPhysicalRow(index);\n      const removedData = deepClone(plugin.instance.getSourceData(physicalRowIndex, 0, physicalRowIndex + amount - 1, plugin.instance.countSourceCols() - 1));\n      return new UndoRedo.RemoveRowAction(physicalRowIndex, removedData, instance.getSettings().fixedRowsBottom, instance.getSettings().fixedRowsTop, instance.rowIndexMapper.getIndexesSequence());\n    };\n    plugin.done(wrappedAction, source);\n  });\n  instance.addHook('afterCreateCol', (index, amount, source) => {\n    plugin.done(() => new UndoRedo.CreateColumnAction(index, amount), source);\n  });\n  instance.addHook('beforeRemoveCol', (index, amount, logicColumns, source) => {\n    const wrappedAction = () => {\n      const originalData = plugin.instance.getSourceDataArray();\n      const columnIndex = (plugin.instance.countCols() + index) % plugin.instance.countCols();\n      const removedData = [];\n      const headers = [];\n      const indexes = [];\n      rangeEach(originalData.length - 1, i => {\n        const column = [];\n        const origRow = originalData[i];\n        rangeEach(columnIndex, columnIndex + (amount - 1), j => {\n          column.push(origRow[instance.toPhysicalColumn(j)]);\n        });\n        removedData.push(column);\n      });\n      rangeEach(amount - 1, i => {\n        indexes.push(instance.toPhysicalColumn(columnIndex + i));\n      });\n      if (Array.isArray(instance.getSettings().colHeaders)) {\n        rangeEach(amount - 1, i => {\n          headers.push(instance.getSettings().colHeaders[instance.toPhysicalColumn(columnIndex + i)] || null);\n        });\n      }\n      const columnsMap = instance.columnIndexMapper.getIndexesSequence();\n      const rowsMap = instance.rowIndexMapper.getIndexesSequence();\n      return new UndoRedo.RemoveColumnAction(columnIndex, indexes, removedData, headers, columnsMap, rowsMap, instance.getSettings().fixedColumnsStart);\n    };\n    plugin.done(wrappedAction, source);\n  });\n  instance.addHook('beforeCellAlignment', (stateBefore, range, type, alignment) => {\n    plugin.done(() => new UndoRedo.CellAlignmentAction(stateBefore, range, type, alignment));\n  });\n  instance.addHook('beforeFilter', conditionsStack => {\n    plugin.done(() => new UndoRedo.FiltersAction(conditionsStack));\n  });\n  instance.addHook('beforeRowMove', (rows, finalIndex) => {\n    if (rows === false) {\n      return;\n    }\n    plugin.done(() => new UndoRedo.RowMoveAction(rows, finalIndex));\n  });\n  instance.addHook('beforeMergeCells', (cellRange, auto) => {\n    if (auto) {\n      return;\n    }\n    plugin.done(() => new UndoRedo.MergeCellsAction(instance, cellRange));\n  });\n  instance.addHook('afterUnmergeCells', (cellRange, auto) => {\n    if (auto) {\n      return;\n    }\n    plugin.done(() => new UndoRedo.UnmergeCellsAction(instance, cellRange));\n  });\n\n  // TODO: Why this callback is needed? One test doesn't pass after calling method right after plugin creation (outside the callback).\n  instance.addHook('afterInit', () => {\n    plugin.init();\n  });\n}\n\n/**\n * Stash information about performed actions.\n *\n * @function done\n * @memberof UndoRedo#\n * @fires Hooks#beforeUndoStackChange\n * @fires Hooks#afterUndoStackChange\n * @fires Hooks#beforeRedoStackChange\n * @fires Hooks#afterRedoStackChange\n * @param {Function} wrappedAction The action descriptor wrapped in a closure.\n * @param {string} [source] Source of the action. It is defined just for more general actions (not related to plugins).\n */\nUndoRedo.prototype.done = function (wrappedAction, source) {\n  if (this.ignoreNewActions) {\n    return;\n  }\n  const isBlockedByDefault = source === 'UndoRedo.undo' || source === 'UndoRedo.redo' || source === 'auto';\n  if (isBlockedByDefault) {\n    return;\n  }\n  const doneActionsCopy = this.doneActions.slice();\n  const continueAction = this.instance.runHooks('beforeUndoStackChange', doneActionsCopy, source);\n  if (continueAction === false) {\n    return;\n  }\n  const newAction = wrappedAction();\n  const undoneActionsCopy = this.undoneActions.slice();\n  this.doneActions.push(newAction);\n  this.instance.runHooks('afterUndoStackChange', doneActionsCopy, this.doneActions.slice());\n  this.instance.runHooks('beforeRedoStackChange', undoneActionsCopy);\n  this.undoneActions.length = 0;\n  this.instance.runHooks('afterRedoStackChange', undoneActionsCopy, this.undoneActions.slice());\n};\n\n/**\n * Undo the last action performed to the table.\n *\n * @function undo\n * @memberof UndoRedo#\n * @fires Hooks#beforeUndoStackChange\n * @fires Hooks#afterUndoStackChange\n * @fires Hooks#beforeRedoStackChange\n * @fires Hooks#afterRedoStackChange\n * @fires Hooks#beforeUndo\n * @fires Hooks#afterUndo\n */\nUndoRedo.prototype.undo = function () {\n  if (this.isUndoAvailable()) {\n    const doneActionsCopy = this.doneActions.slice();\n    this.instance.runHooks('beforeUndoStackChange', doneActionsCopy);\n    const action = this.doneActions.pop();\n    this.instance.runHooks('afterUndoStackChange', doneActionsCopy, this.doneActions.slice());\n    const actionClone = deepClone(action);\n    const continueAction = this.instance.runHooks('beforeUndo', actionClone);\n    if (continueAction === false) {\n      return;\n    }\n    this.ignoreNewActions = true;\n    const that = this;\n    const undoneActionsCopy = this.undoneActions.slice();\n    this.instance.runHooks('beforeRedoStackChange', undoneActionsCopy);\n    action.undo(this.instance, () => {\n      that.ignoreNewActions = false;\n      that.undoneActions.push(action);\n    });\n    this.instance.runHooks('afterRedoStackChange', undoneActionsCopy, this.undoneActions.slice());\n    this.instance.runHooks('afterUndo', actionClone);\n  }\n};\n\n/**\n * Redo the previous action performed to the table (used to reverse an undo).\n *\n * @function redo\n * @memberof UndoRedo#\n * @fires Hooks#beforeUndoStackChange\n * @fires Hooks#afterUndoStackChange\n * @fires Hooks#beforeRedoStackChange\n * @fires Hooks#afterRedoStackChange\n * @fires Hooks#beforeRedo\n * @fires Hooks#afterRedo\n */\nUndoRedo.prototype.redo = function () {\n  if (this.isRedoAvailable()) {\n    const undoneActionsCopy = this.undoneActions.slice();\n    this.instance.runHooks('beforeRedoStackChange', undoneActionsCopy);\n    const action = this.undoneActions.pop();\n    this.instance.runHooks('afterRedoStackChange', undoneActionsCopy, this.undoneActions.slice());\n    const actionClone = deepClone(action);\n    const continueAction = this.instance.runHooks('beforeRedo', actionClone);\n    if (continueAction === false) {\n      return;\n    }\n    this.ignoreNewActions = true;\n    const that = this;\n    const doneActionsCopy = this.doneActions.slice();\n    this.instance.runHooks('beforeUndoStackChange', doneActionsCopy);\n    action.redo(this.instance, () => {\n      that.ignoreNewActions = false;\n      that.doneActions.push(action);\n    });\n    this.instance.runHooks('afterUndoStackChange', doneActionsCopy, this.doneActions.slice());\n    this.instance.runHooks('afterRedo', actionClone);\n  }\n};\n\n/**\n * Checks if undo action is available.\n *\n * @function isUndoAvailable\n * @memberof UndoRedo#\n * @returns {boolean} Return `true` if undo can be performed, `false` otherwise.\n */\nUndoRedo.prototype.isUndoAvailable = function () {\n  return this.doneActions.length > 0;\n};\n\n/**\n * Checks if redo action is available.\n *\n * @function isRedoAvailable\n * @memberof UndoRedo#\n * @returns {boolean} Return `true` if redo can be performed, `false` otherwise.\n */\nUndoRedo.prototype.isRedoAvailable = function () {\n  return this.undoneActions.length > 0;\n};\n\n/**\n * Clears undo history.\n *\n * @function clear\n * @memberof UndoRedo#\n */\nUndoRedo.prototype.clear = function () {\n  this.doneActions.length = 0;\n  this.undoneActions.length = 0;\n};\n\n/**\n * Checks if the plugin is enabled.\n *\n * @function isEnabled\n * @memberof UndoRedo#\n * @returns {boolean}\n */\nUndoRedo.prototype.isEnabled = function () {\n  return this.enabled;\n};\n\n/**\n * Enables the plugin.\n *\n * @function enable\n * @memberof UndoRedo#\n */\nUndoRedo.prototype.enable = function () {\n  if (this.isEnabled()) {\n    return;\n  }\n  const hot = this.instance;\n  this.enabled = true;\n  exposeUndoRedoMethods(hot);\n  this.registerShortcuts();\n  hot.addHook('afterChange', onAfterChange);\n};\n\n/**\n * Disables the plugin.\n *\n * @function disable\n * @memberof UndoRedo#\n */\nUndoRedo.prototype.disable = function () {\n  if (!this.isEnabled()) {\n    return;\n  }\n  const hot = this.instance;\n  this.enabled = false;\n  removeExposedUndoRedoMethods(hot);\n  this.unregisterShortcuts();\n  hot.removeHook('afterChange', onAfterChange);\n};\n\n/**\n * Destroys the instance.\n *\n * @function destroy\n * @memberof UndoRedo#\n */\nUndoRedo.prototype.destroy = function () {\n  this.clear();\n  this.instance = null;\n  this.doneActions = null;\n  this.undoneActions = null;\n};\nUndoRedo.Action = function () {};\nUndoRedo.Action.prototype.undo = function () {};\nUndoRedo.Action.prototype.redo = function () {};\n\n/**\n * Change action.\n *\n * @private\n * @param {Array} changes 2D array containing information about each of the edited cells.\n * @param {number[]} selected The cell selection.\n */\nUndoRedo.ChangeAction = function (changes, selected) {\n  this.changes = changes;\n  this.selected = selected;\n  this.actionType = 'change';\n};\ninherit(UndoRedo.ChangeAction, UndoRedo.Action);\nUndoRedo.ChangeAction.prototype.undo = function (instance, undoneCallback) {\n  const data = deepClone(this.changes);\n  const emptyRowsAtTheEnd = instance.countEmptyRows(true);\n  const emptyColsAtTheEnd = instance.countEmptyCols(true);\n  for (let i = 0, len = data.length; i < len; i++) {\n    data[i].splice(3, 1);\n  }\n  instance.addHookOnce('afterChange', undoneCallback);\n  instance.setDataAtCell(data, null, null, 'UndoRedo.undo');\n  for (let i = 0, len = data.length; i < len; i++) {\n    const [row, column] = data[i];\n    if (instance.getSettings().minSpareRows && row + 1 + instance.getSettings().minSpareRows === instance.countRows() && emptyRowsAtTheEnd === instance.getSettings().minSpareRows) {\n      instance.alter('remove_row', parseInt(row + 1, 10), instance.getSettings().minSpareRows);\n      instance.undoRedo.doneActions.pop();\n    }\n    if (instance.getSettings().minSpareCols && column + 1 + instance.getSettings().minSpareCols === instance.countCols() && emptyColsAtTheEnd === instance.getSettings().minSpareCols) {\n      instance.alter('remove_col', parseInt(column + 1, 10), instance.getSettings().minSpareCols);\n      instance.undoRedo.doneActions.pop();\n    }\n  }\n  instance.selectCells(this.selected, false, false);\n};\nUndoRedo.ChangeAction.prototype.redo = function (instance, onFinishCallback) {\n  const data = deepClone(this.changes);\n  for (let i = 0, len = data.length; i < len; i++) {\n    data[i].splice(2, 1);\n  }\n  instance.addHookOnce('afterChange', onFinishCallback);\n  instance.setDataAtCell(data, null, null, 'UndoRedo.redo');\n  if (this.selected) {\n    instance.selectCells(this.selected, false, false);\n  }\n};\n\n/**\n * Create row action.\n *\n * @private\n * @param {number} index The visual row index.\n * @param {number} amount The number of created rows.\n */\nUndoRedo.CreateRowAction = function (index, amount) {\n  this.index = index;\n  this.amount = amount;\n  this.actionType = 'insert_row';\n};\ninherit(UndoRedo.CreateRowAction, UndoRedo.Action);\nUndoRedo.CreateRowAction.prototype.undo = function (instance, undoneCallback) {\n  const rowCount = instance.countRows();\n  const minSpareRows = instance.getSettings().minSpareRows;\n  if (this.index >= rowCount && this.index - minSpareRows < rowCount) {\n    this.index -= minSpareRows; // work around the situation where the needed row was removed due to an 'undo' of a made change\n  }\n\n  instance.addHookOnce('afterRemoveRow', undoneCallback);\n  instance.alter('remove_row', this.index, this.amount, 'UndoRedo.undo');\n};\nUndoRedo.CreateRowAction.prototype.redo = function (instance, redoneCallback) {\n  instance.addHookOnce('afterCreateRow', redoneCallback);\n  instance.alter('insert_row_above', this.index, this.amount, 'UndoRedo.redo');\n};\n\n/**\n * Remove row action.\n *\n * @private\n * @param {number} index The visual row index.\n * @param {Array} data The removed data.\n * @param {number} fixedRowsBottom Number of fixed rows on the bottom. Remove row action change it sometimes.\n * @param {number} fixedRowsTop Number of fixed rows on the top. Remove row action change it sometimes.\n * @param {Array} rowIndexesSequence Row index sequence taken from the row index mapper.\n */\nUndoRedo.RemoveRowAction = function (index, data, fixedRowsBottom, fixedRowsTop, rowIndexesSequence) {\n  this.index = index;\n  this.data = data;\n  this.actionType = 'remove_row';\n  this.fixedRowsBottom = fixedRowsBottom;\n  this.fixedRowsTop = fixedRowsTop;\n  this.rowIndexesSequence = rowIndexesSequence;\n};\ninherit(UndoRedo.RemoveRowAction, UndoRedo.Action);\nUndoRedo.RemoveRowAction.prototype.undo = function (instance, undoneCallback) {\n  const settings = instance.getSettings();\n  const changes = [];\n\n  // Changing by the reference as `updateSettings` doesn't work the best.\n  settings.fixedRowsBottom = this.fixedRowsBottom;\n  settings.fixedRowsTop = this.fixedRowsTop;\n\n  // Prepare the change list to fill the source data.\n  this.data.forEach((dataRow, rowIndexDelta) => {\n    Object.keys(dataRow).forEach(columnProp => {\n      const columnIndex = parseInt(columnProp, 10);\n      changes.push([this.index + rowIndexDelta, isNaN(columnIndex) ? columnProp : columnIndex, dataRow[columnProp]]);\n    });\n  });\n  instance.alter('insert_row_above', this.index, this.data.length, 'UndoRedo.undo');\n  instance.addHookOnce('afterViewRender', undoneCallback);\n  instance.setSourceDataAtCell(changes, null, null, 'UndoRedo.undo');\n  instance.rowIndexMapper.setIndexesSequence(this.rowIndexesSequence);\n};\nUndoRedo.RemoveRowAction.prototype.redo = function (instance, redoneCallback) {\n  instance.addHookOnce('afterRemoveRow', redoneCallback);\n  instance.alter('remove_row', this.index, this.data.length, 'UndoRedo.redo');\n};\n\n/**\n * Create column action.\n *\n * @private\n * @param {number} index The visual column index.\n * @param {number} amount The number of created columns.\n */\nUndoRedo.CreateColumnAction = function (index, amount) {\n  this.index = index;\n  this.amount = amount;\n  this.actionType = 'insert_col';\n};\ninherit(UndoRedo.CreateColumnAction, UndoRedo.Action);\nUndoRedo.CreateColumnAction.prototype.undo = function (instance, undoneCallback) {\n  instance.addHookOnce('afterRemoveCol', undoneCallback);\n  instance.alter('remove_col', this.index, this.amount, 'UndoRedo.undo');\n};\nUndoRedo.CreateColumnAction.prototype.redo = function (instance, redoneCallback) {\n  instance.addHookOnce('afterCreateCol', redoneCallback);\n  instance.alter('insert_col_start', this.index, this.amount, 'UndoRedo.redo');\n};\n\n/**\n * Remove column action.\n *\n * @private\n * @param {number} index The visual column index.\n * @param {number[]} indexes The visual column indexes.\n * @param {Array} data The removed data.\n * @param {Array} headers The header values.\n * @param {number[]} columnPositions The column position.\n * @param {number[]} rowPositions The row position.\n * @param {number} fixedColumnsStart Number of fixed columns on the left. Remove column action change it sometimes.\n */\nUndoRedo.RemoveColumnAction = function (index, indexes, data, headers, columnPositions, rowPositions, fixedColumnsStart) {\n  // eslint-disable-line max-len\n  this.index = index;\n  this.indexes = indexes;\n  this.data = data;\n  this.amount = this.data[0].length;\n  this.headers = headers;\n  this.columnPositions = columnPositions.slice(0);\n  this.rowPositions = rowPositions.slice(0);\n  this.actionType = 'remove_col';\n  this.fixedColumnsStart = fixedColumnsStart;\n};\ninherit(UndoRedo.RemoveColumnAction, UndoRedo.Action);\nUndoRedo.RemoveColumnAction.prototype.undo = function (instance, undoneCallback) {\n  const settings = instance.getSettings();\n\n  // Changing by the reference as `updateSettings` doesn't work the best.\n  settings.fixedColumnsStart = this.fixedColumnsStart;\n  const ascendingIndexes = this.indexes.slice(0).sort();\n  const sortByIndexes = (elem, j, arr) => arr[this.indexes.indexOf(ascendingIndexes[j])];\n  const removedDataLength = this.data.length;\n  const sortedData = [];\n  for (let rowIndex = 0; rowIndex < removedDataLength; rowIndex++) {\n    sortedData.push(arrayMap(this.data[rowIndex], sortByIndexes));\n  }\n  const sortedHeaders = arrayMap(this.headers, sortByIndexes);\n  const changes = [];\n  instance.alter('insert_col_start', this.indexes[0], this.indexes.length, 'UndoRedo.undo');\n  arrayEach(instance.getSourceDataArray(), (rowData, rowIndex) => {\n    arrayEach(ascendingIndexes, (changedIndex, contiquesIndex) => {\n      rowData[changedIndex] = sortedData[rowIndex][contiquesIndex];\n      changes.push([rowIndex, changedIndex, rowData[changedIndex]]);\n    });\n  });\n  instance.setSourceDataAtCell(changes, undefined, undefined, 'UndoRedo.undo');\n  if (typeof this.headers !== 'undefined') {\n    arrayEach(sortedHeaders, (headerData, columnIndex) => {\n      instance.getSettings().colHeaders[ascendingIndexes[columnIndex]] = headerData;\n    });\n  }\n  instance.batchExecution(() => {\n    // Restore row sequence in a case when all columns are removed. the original\n    // row sequence is lost in that case.\n    instance.rowIndexMapper.setIndexesSequence(this.rowPositions);\n    instance.columnIndexMapper.setIndexesSequence(this.columnPositions);\n  }, true);\n  instance.addHookOnce('afterViewRender', undoneCallback);\n  instance.render();\n};\nUndoRedo.RemoveColumnAction.prototype.redo = function (instance, redoneCallback) {\n  instance.addHookOnce('afterRemoveCol', redoneCallback);\n  instance.alter('remove_col', this.index, this.amount, 'UndoRedo.redo');\n};\n\n/**\n * Cell alignment action.\n *\n * @private\n * @param {Array} stateBefore The previous state.\n * @param {object} range The cell range.\n * @param {string} type The type of the alignment (\"top\", \"left\", \"bottom\" or \"right\").\n * @param {string} alignment The alignment CSS class.\n */\nUndoRedo.CellAlignmentAction = function (stateBefore, range, type, alignment) {\n  this.stateBefore = stateBefore;\n  this.range = range;\n  this.type = type;\n  this.alignment = alignment;\n};\nUndoRedo.CellAlignmentAction.prototype.undo = function (instance, undoneCallback) {\n  arrayEach(this.range, range => {\n    range.forAll((row, col) => {\n      // Alignment classes should only collected within cell ranges. We skip header coordinates.\n      if (row >= 0 && col >= 0) {\n        instance.setCellMeta(row, col, 'className', this.stateBefore[row][col] || ' htLeft');\n      }\n    });\n  });\n  instance.addHookOnce('afterViewRender', undoneCallback);\n  instance.render();\n};\nUndoRedo.CellAlignmentAction.prototype.redo = function (instance, undoneCallback) {\n  align(this.range, this.type, this.alignment, (row, col) => instance.getCellMeta(row, col), (row, col, key, value) => instance.setCellMeta(row, col, key, value));\n  instance.addHookOnce('afterViewRender', undoneCallback);\n  instance.render();\n};\n\n/**\n * Filters action.\n *\n * @private\n * @param {Array} conditionsStack An array of the filter condition.\n */\nUndoRedo.FiltersAction = function (conditionsStack) {\n  this.conditionsStack = conditionsStack;\n  this.actionType = 'filter';\n};\ninherit(UndoRedo.FiltersAction, UndoRedo.Action);\nUndoRedo.FiltersAction.prototype.undo = function (instance, undoneCallback) {\n  const filters = instance.getPlugin('filters');\n  instance.addHookOnce('afterViewRender', undoneCallback);\n  filters.conditionCollection.importAllConditions(this.conditionsStack.slice(0, this.conditionsStack.length - 1));\n  filters.filter();\n};\nUndoRedo.FiltersAction.prototype.redo = function (instance, redoneCallback) {\n  const filters = instance.getPlugin('filters');\n  instance.addHookOnce('afterViewRender', redoneCallback);\n  filters.conditionCollection.importAllConditions(this.conditionsStack);\n  filters.filter();\n};\n\n/**\n * Merge Cells action.\n *\n * @util\n */\nclass MergeCellsAction extends UndoRedo.Action {\n  constructor(instance, cellRange) {\n    super();\n    this.cellRange = cellRange;\n    const topStartCorner = this.cellRange.getTopStartCorner();\n    const bottomEndCorner = this.cellRange.getBottomEndCorner();\n    this.rangeData = instance.getData(topStartCorner.row, topStartCorner.col, bottomEndCorner.row, bottomEndCorner.col);\n  }\n  undo(instance, undoneCallback) {\n    const mergeCellsPlugin = instance.getPlugin('mergeCells');\n    instance.addHookOnce('afterViewRender', undoneCallback);\n    mergeCellsPlugin.unmergeRange(this.cellRange, true);\n    const topStartCorner = this.cellRange.getTopStartCorner();\n    instance.populateFromArray(topStartCorner.row, topStartCorner.col, this.rangeData, undefined, undefined, 'MergeCells');\n  }\n  redo(instance, redoneCallback) {\n    const mergeCellsPlugin = instance.getPlugin('mergeCells');\n    instance.addHookOnce('afterViewRender', redoneCallback);\n    mergeCellsPlugin.mergeRange(this.cellRange);\n  }\n}\nUndoRedo.MergeCellsAction = MergeCellsAction;\n\n/**\n * Unmerge Cells action.\n *\n * @util\n */\nclass UnmergeCellsAction extends UndoRedo.Action {\n  constructor(instance, cellRange) {\n    super();\n    this.cellRange = cellRange;\n  }\n  undo(instance, undoneCallback) {\n    const mergeCellsPlugin = instance.getPlugin('mergeCells');\n    instance.addHookOnce('afterViewRender', undoneCallback);\n    mergeCellsPlugin.mergeRange(this.cellRange, true);\n  }\n  redo(instance, redoneCallback) {\n    const mergeCellsPlugin = instance.getPlugin('mergeCells');\n    instance.addHookOnce('afterViewRender', redoneCallback);\n    mergeCellsPlugin.unmergeRange(this.cellRange, true);\n    instance.render();\n  }\n}\nUndoRedo.UnmergeCellsAction = UnmergeCellsAction;\n\n/**\n * ManualRowMove action.\n *\n * @TODO removeRow undo should works on logical index\n * @private\n * @param {number[]} rows An array with moved rows.\n * @param {number} finalIndex The destination index.\n */\nUndoRedo.RowMoveAction = function (rows, finalIndex) {\n  this.rows = rows.slice();\n  this.finalIndex = finalIndex;\n  this.actionType = 'row_move';\n};\ninherit(UndoRedo.RowMoveAction, UndoRedo.Action);\nUndoRedo.RowMoveAction.prototype.undo = function (instance, undoneCallback) {\n  const manualRowMove = instance.getPlugin('manualRowMove');\n  const copyOfRows = [].concat(this.rows);\n  const rowsMovedUp = copyOfRows.filter(a => a > this.finalIndex);\n  const rowsMovedDown = copyOfRows.filter(a => a <= this.finalIndex);\n  const allMovedRows = rowsMovedUp.sort((a, b) => b - a).concat(rowsMovedDown.sort((a, b) => a - b));\n  instance.addHookOnce('afterViewRender', undoneCallback);\n\n  // Moving rows from those with higher indexes to those with lower indexes when action was performed from bottom to top\n  // Moving rows from those with lower indexes to those with higher indexes when action was performed from top to bottom\n  for (let i = 0; i < allMovedRows.length; i += 1) {\n    const newPhysicalRow = instance.toVisualRow(allMovedRows[i]);\n    manualRowMove.moveRow(newPhysicalRow, allMovedRows[i]);\n  }\n  instance.render();\n  instance.deselectCell();\n  instance.selectRows(this.rows[0], this.rows[0] + this.rows.length - 1);\n};\nUndoRedo.RowMoveAction.prototype.redo = function (instance, redoneCallback) {\n  const manualRowMove = instance.getPlugin('manualRowMove');\n  instance.addHookOnce('afterViewRender', redoneCallback);\n  manualRowMove.moveRows(this.rows.slice(), this.finalIndex);\n  instance.render();\n  instance.deselectCell();\n  instance.selectRows(this.finalIndex, this.finalIndex + this.rows.length - 1);\n};\n\n/**\n * Enabling and disabling plugin and attaching its to an instance.\n *\n * @private\n */\nUndoRedo.prototype.init = function () {\n  const settings = this.instance.getSettings().undo;\n  const pluginEnabled = typeof settings === 'undefined' || settings;\n  if (!this.instance.undoRedo) {\n    this.instance.undoRedo = this;\n  }\n  if (pluginEnabled) {\n    this.instance.undoRedo.enable();\n  } else {\n    this.instance.undoRedo.disable();\n  }\n};\n\n/**\n * Registers shortcuts responsible for performing undo/redo.\n *\n * @private\n */\nUndoRedo.prototype.registerShortcuts = function () {\n  const shortcutManager = this.instance.getShortcutManager();\n  const gridContext = shortcutManager.getContext('grid');\n  const runOnlyIf = event => {\n    return !event.altKey; // right ALT in some systems triggers ALT+CTR\n  };\n\n  const config = {\n    runOnlyIf,\n    group: SHORTCUTS_GROUP\n  };\n  gridContext.addShortcuts([{\n    keys: [['Control/Meta', 'z']],\n    callback: () => {\n      this.undo();\n    }\n  }, {\n    keys: [['Control/Meta', 'y'], ['Control/Meta', 'Shift', 'z']],\n    callback: () => {\n      this.redo();\n    }\n  }], config);\n};\n\n/**\n * Unregister shortcuts responsible for performing undo/redo.\n *\n * @private\n */\nUndoRedo.prototype.unregisterShortcuts = function () {\n  const shortcutManager = this.instance.getShortcutManager();\n  const gridContext = shortcutManager.getContext('grid');\n  gridContext.removeShortcutsByGroup(SHORTCUTS_GROUP);\n};\n\n/**\n * @param {Array} changes 2D array containing information about each of the edited cells.\n * @param {string} source String that identifies source of hook call.\n * @returns {boolean}\n */\nfunction onAfterChange(changes, source) {\n  const instance = this;\n  if (source === 'loadData') {\n    return instance.undoRedo.clear();\n  }\n}\n\n/**\n * @param {Core} instance The Handsontable instance.\n */\nfunction exposeUndoRedoMethods(instance) {\n  /**\n   * {@link UndoRedo#undo}.\n   *\n   * @alias undo\n   * @memberof! Core#\n   * @returns {boolean}\n   */\n  instance.undo = function () {\n    return instance.undoRedo.undo();\n  };\n\n  /**\n   * {@link UndoRedo#redo}.\n   *\n   * @alias redo\n   * @memberof! Core#\n   * @returns {boolean}\n   */\n  instance.redo = function () {\n    return instance.undoRedo.redo();\n  };\n\n  /**\n   * {@link UndoRedo#isUndoAvailable}.\n   *\n   * @alias isUndoAvailable\n   * @memberof! Core#\n   * @returns {boolean}\n   */\n  instance.isUndoAvailable = function () {\n    return instance.undoRedo.isUndoAvailable();\n  };\n\n  /**\n   * {@link UndoRedo#isRedoAvailable}.\n   *\n   * @alias isRedoAvailable\n   * @memberof! Core#\n   * @returns {boolean}\n   */\n  instance.isRedoAvailable = function () {\n    return instance.undoRedo.isRedoAvailable();\n  };\n\n  /**\n   * {@link UndoRedo#clear}.\n   *\n   * @alias clearUndo\n   * @memberof! Core#\n   * @returns {boolean}\n   */\n  instance.clearUndo = function () {\n    return instance.undoRedo.clear();\n  };\n}\n\n/**\n * @param {Core} instance The Handsontable instance.\n */\nfunction removeExposedUndoRedoMethods(instance) {\n  delete instance.undo;\n  delete instance.redo;\n  delete instance.isUndoAvailable;\n  delete instance.isRedoAvailable;\n  delete instance.clearUndo;\n}\nconst hook = Hooks.getSingleton();\nhook.add('afterUpdateSettings', function () {\n  var _this$getPlugin;\n  (_this$getPlugin = this.getPlugin('undoRedo')) === null || _this$getPlugin === void 0 || _this$getPlugin.init();\n});\nhook.register('beforeUndo');\nhook.register('afterUndo');\nhook.register('beforeRedo');\nhook.register('afterRedo');\nUndoRedo.PLUGIN_KEY = PLUGIN_KEY;\nUndoRedo.SETTING_KEYS = true;\nexport default UndoRedo;", "import { AutoColumnSize } from \"./autoColumnSize/index.mjs\";\nimport { Autofill } from \"./autofill/index.mjs\";\nimport { AutoRowSize } from \"./autoRowSize/index.mjs\";\nimport { BasePlugin } from \"./base/index.mjs\";\nimport { BindRowsWithHeaders } from \"./bindRowsWithHeaders/index.mjs\";\nimport { CollapsibleColumns } from \"./collapsibleColumns/index.mjs\";\nimport { ColumnSorting } from \"./columnSorting/index.mjs\";\nimport { ColumnSummary } from \"./columnSummary/index.mjs\";\nimport { Comments } from \"./comments/index.mjs\";\nimport { ContextMenu } from \"./contextMenu/index.mjs\";\nimport { CopyPaste } from \"./copyPaste/index.mjs\";\nimport { CustomBorders } from \"./customBorders/index.mjs\";\nimport { DragToScroll } from \"./dragToScroll/index.mjs\";\nimport { DropdownMenu } from \"./dropdownMenu/index.mjs\";\nimport { ExportFile } from \"./exportFile/index.mjs\";\nimport { Filters } from \"./filters/index.mjs\";\nimport { Formulas } from \"./formulas/index.mjs\";\nimport { HiddenColumns } from \"./hiddenColumns/index.mjs\";\nimport { HiddenRows } from \"./hiddenRows/index.mjs\";\nimport { ManualColumnFreeze } from \"./manualColumnFreeze/index.mjs\";\nimport { ManualColumnMove } from \"./manualColumnMove/index.mjs\";\nimport { ManualColumnResize } from \"./manualColumnResize/index.mjs\";\nimport { ManualRowMove } from \"./manualRowMove/index.mjs\";\nimport { ManualRowResize } from \"./manualRowResize/index.mjs\";\nimport { MergeCells } from \"./mergeCells/index.mjs\";\nimport { MultiColumnSorting } from \"./multiColumnSorting/index.mjs\";\nimport { MultipleSelectionHandles } from \"./multipleSelectionHandles/index.mjs\";\nimport { NestedHeaders } from \"./nestedHeaders/index.mjs\";\nimport { NestedRows } from \"./nestedRows/index.mjs\";\nimport { PersistentState } from \"./persistentState/index.mjs\";\nimport { Search } from \"./search/index.mjs\";\nimport { TouchScroll } from \"./touchScroll/index.mjs\";\nimport { TrimRows } from \"./trimRows/index.mjs\";\nimport { UndoRedo } from \"./undoRedo/index.mjs\";\nimport { registerPlugin } from \"./registry.mjs\";\n/**\n * Registers all available plugins.\n */\nexport function registerAllPlugins() {\n  registerPlugin(AutoColumnSize);\n  registerPlugin(Autofill);\n  registerPlugin(AutoRowSize);\n  registerPlugin(BindRowsWithHeaders);\n  registerPlugin(CollapsibleColumns);\n  registerPlugin(ColumnSorting);\n  registerPlugin(ColumnSummary);\n  registerPlugin(Comments);\n  registerPlugin(ContextMenu);\n  registerPlugin(CopyPaste);\n  registerPlugin(CustomBorders);\n  registerPlugin(DragToScroll);\n  registerPlugin(DropdownMenu);\n  registerPlugin(ExportFile);\n  registerPlugin(Filters);\n  registerPlugin(Formulas);\n  registerPlugin(HiddenColumns);\n  registerPlugin(HiddenRows);\n  registerPlugin(ManualColumnFreeze);\n  registerPlugin(ManualColumnMove);\n  registerPlugin(ManualColumnResize);\n  registerPlugin(ManualRowMove);\n  registerPlugin(ManualRowResize);\n  registerPlugin(MergeCells);\n  registerPlugin(MultiColumnSorting);\n  registerPlugin(MultipleSelectionHandles);\n  registerPlugin(NestedHeaders);\n  registerPlugin(NestedRows);\n  registerPlugin(PersistentState);\n  registerPlugin(Search);\n  registerPlugin(TouchScroll);\n  registerPlugin(TrimRows);\n  registerPlugin(UndoRedo);\n}\nexport { AutoColumnSize, Autofill, AutoRowSize, BasePlugin, BindRowsWithHeaders, CollapsibleColumns, ColumnSorting, ColumnSummary, Comments, ContextMenu, CopyPaste, CustomBorders, DragToScroll, DropdownMenu, ExportFile, Filters, Formulas, HiddenColumns, HiddenRows, ManualColumnFreeze, ManualColumnMove, ManualColumnResize, ManualRowMove, ManualRowResize, MergeCells, MultiColumnSorting, MultipleSelectionHandles, NestedHeaders, NestedRows, PersistentState, Search, TouchScroll, TrimRows, UndoRedo };\nexport { getPlugin, getPluginsNames, registerPlugin } from \"./registry.mjs\";"],
  "mappings": "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",
  "names": ["_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onBeforeViewRender", "_onAfterLoadData", "_onBeforeChange", "_onAfterLoadData2", "_onBeforeChange2", "_onBeforeViewRender2", "getListWithInsertedItems", "getListWithRemovedItems", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateMethodGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SETTING_KEYS", "_onAfterLoadData", "_onAfterLoadData2", "_defineProperty", "_toPropertyKey", "_toPrimitive", "compareFunctionFactory", "COLUMN_DATA_TYPE", "compareFunctionFactory", "COLUMN_DATA_TYPE", "compareFunctionFactory", "COLUMN_DATA_TYPE", "COLUMN_DATA_TYPE", "compareFunctionFactory", "rootComparator", "compareFunctionFactory", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onAfterGetColHeader", "_onAfterLoadData", "_onBeforeOnCellMouseDown", "_onAfterGetColHeader2", "_onBeforeOnCellMouseDown2", "_onAfterLoadData2", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onAfterInit", "_onAfterInit2", "partial", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onMouseUp", "_onMouseUp2", "left", "top", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateMethodGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SETTING_KEYS", "stringify", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onAfterContextMenuDefaultOptions", "_onAfterInit", "_onAfterContextMenuDefaultOptions2", "_onAfterInit2", "top", "bottom", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onAfterGetColHeader", "KEY", "_onAfterGetColHeader2", "offset", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_defineProperty", "_toPropertyKey", "_toPrimitive", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "CONDITION_NAME", "condition", "conditions", "conditions", "condition", "OPERATION_ID", "SHORT_NAME_FOR_COMPONENT", "operationResult", "conditions", "condition", "OPERATION_ID", "SHORT_NAME_FOR_COMPONENT", "operationResult", "conditions", "condition", "CONDITION_NAME", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodGet", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateMethodGet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "condition", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_input", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "OPERATION_ID", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "SHORTCUTS_GROUP", "_items", "_onInputKeyDown", "_onInputKeyDown2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "_onInputKeyDown", "_onInputKeyDown2", "CONDITION_NAME", "conditions", "condition", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "_defineProperty", "_toPropertyKey", "_toPrimitive", "conditions", "condition", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "navigator", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onAfterChange", "_onAfterGetColHeader", "_onAfterGetColHeader2", "_onAfterChange2", "conditions", "OPERATION_ID", "condition", "CONDITION_NAME", "PLUGIN_KEY", "PLUGIN_KEY", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "SETTING_KEYS", "PLUGIN_PRIORITY", "_onAfterLoadData", "_onAfterLoadData2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onAfterGetColHeader", "_onAfterContextMenuDefaultOptions", "_onAfterContextMenuDefaultOptions2", "_onAfterGetColHeader2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_settings", "_onAfterGetCellMeta", "_onModifyCopyableRange", "_onAfterContextMenuDefaultOptions", "_onMapInit", "_onMapInit2", "_onAfterContextMenuDefaultOptions2", "_onAfterGetCellMeta2", "_onModifyCopyableRange2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_defineProperty", "_toPropertyKey", "_toPrimitive", "STATE_BUILT", "BaseUI", "top", "base_default", "base_default", "CSS_CLASSNAME", "base_default", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onBeforeOnCellMouseDown", "_onMouseMove", "_onMouseUp", "_onAfterLoadData", "_onBeforeOnCellMouseDown2", "_onAfterLoadData2", "_onMouseMove2", "_onMouseUp2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_pressed", "_onMapInit", "_onMouseOver", "_onMouseDown", "_onMouseMove", "_onMouseUp", "_onModifyColWidth", "_onBeforeColumnResize", "_onMapInit2", "_onModifyColWidth2", "_onBeforeColumnResize2", "_onMouseOver2", "_onMouseDown2", "_onMouseMove2", "_onMouseUp2", "_defineProperty", "_toPropertyKey", "_toPrimitive", "STATE_INITIALIZED", "STATE_BUILT", "STATE_APPENDED", "UNIT", "BaseUI", "top", "left", "base_default", "CSS_CLASSNAME", "BacklightUI", "base_default", "backlight_default", "CSS_CLASSNAME", "GuidelineUI", "base_default", "guideline_default", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "CSS_PLUGIN", "CSS_SHOW_UI", "CSS_ON_MOVING", "CSS_AFTER_SELECTION", "_backlight", "_guideline", "_pressed", "_target", "_cachedDropIndex", "_onBeforeOnCellMouseDown", "_onMouseMove", "_onBeforeOnCellMouseOver", "_onMouseUp", "_onAfterLoadData", "backlight_default", "guideline_default", "_onBeforeOnCellMouseDown2", "_onBeforeOnCellMouseOver2", "_onAfterLoadData2", "_onMouseMove2", "_onMouseUp2", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateMethodGet", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "PERSISTENT_STATE_KEY", "_currentTH", "_newSize", "_startY", "_startOffset", "_handle", "_guide", "_pressed", "_isTriggeredByRMB", "_dblclick", "_autoresizeTimeout", "_config", "_onMouseOver", "_onMouseDown", "_onMouseMove", "_onMouseUp", "_onContextMenu", "_onModifyRowHeight", "_onMapInit", "_onMapInit2", "_onModifyRowHeight2", "_onMouseOver2", "_onMouseDown2", "_onMouseMove2", "_onMouseUp2", "_onContextMenu2", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "current", "offset", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onAfterInit", "_onAfterRenderer", "_onAfterGetCellMeta", "_onAfterCreateCol", "_onAfterRemoveCol", "_onAfterCreateRow", "_onAfterRemoveRow", "_onAfterChange", "_onAfterInit2", "_onAfterRenderer2", "_onAfterGetCellMeta2", "_onAfterCreateCol2", "_onAfterRemoveCol2", "_onAfterCreateRow2", "_onAfterRemoveRow2", "_onAfterChange2", "rootComparator", "compareFunctionFactory", "getClassesToAdd", "getClassesToRemove", "_defineProperty", "_toPropertyKey", "_toPrimitive", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "rootComparator", "getClassesToRemove", "getClassesToAdd", "_defineProperty", "_toPropertyKey", "_toPrimitive", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_columnsLimit", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_sourceSettings", "_classPrivateFieldGet2", "_classPrivateFieldGet3", "_defineProperty", "_toPropertyKey", "_toPrimitive", "GhostTable", "ghostTable_default", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_classExtractFieldDescriptor", "_classApplyDescriptorSet", "_classPrivateFieldGet", "_classApplyDescriptorGet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onBeforeOnCellMouseDown", "_onBeforeOnCellMouseOver", "_onModifyTransformStart", "_onAfterViewportColumnCalculatorOverride", "_onModifyColWidth", "_onInit", "_onAfterLoadData", "ghostTable_default", "_onInit2", "_onAfterLoadData2", "_onBeforeOnCellMouseDown2", "_onBeforeOnCellMouseOver2", "_onModifyTransformStart2", "_onModifyColWidth2", "_onAfterViewportColumnCalculatorOverride2", "_classPrivateFieldGet2", "_classPrivateFieldGet3", "_classPrivateFieldGet4", "_classPrivateFieldGet5", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "BaseUI", "base_default", "base_default", "base_default", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "base_default", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_classExtractFieldDescriptor", "_classApplyDescriptorGet", "_classPrivateFieldSet", "_classApplyDescriptorSet", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "SHORTCUTS_GROUP", "_onBeforeOnCellMouseDown", "_onAfterContextMenuDefaultOptions", "_onAfterGetRowHeader", "_onAfterRemoveRow", "_onBeforeRemoveRow", "_onAfterDetachChild", "_onAfterCreateRow", "_onAfterInit", "_onBeforeViewRender", "_onBeforeLoadData", "_onAfterInit2", "_onBeforeViewRender2", "_onAfterContextMenuDefaultOptions2", "_onAfterGetRowHeader2", "_onBeforeOnCellMouseDown2", "_onBeforeRemoveRow2", "_onAfterRemoveRow2", "_onAfterDetachChild2", "_onAfterCreateRow2", "_onBeforeLoadData2", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "clone", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateMethodGet", "PLUGIN_KEY", "PLUGIN_PRIORITY", "_onMapInit", "_onMapInit2", "SHORTCUTS_GROUP", "PLUGIN_KEY"]
}
