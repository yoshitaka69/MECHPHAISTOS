import N from "dayjs";
import { inject as lt, computed as I, defineComponent as W, openBlock as M, createElementBlock as L, createElementVNode as U, Fragment as Q, renderList as ot, unref as C, normalizeStyle as P, renderSlot as H, createTextVNode as it, toDisplayString as X, createCommentVNode as Z, toRefs as J, ref as $, watch as ut, nextTick as kt, createBlock as st, Teleport as Qt, createVNode as wt, Transition as Xt, withCtx as q, getCurrentScope as Zt, onScopeDispose as Jt, getCurrentInstance as te, onMounted as Tt, useSlots as ee, provide as rt, normalizeClass as ne, withModifiers as ae, mergeProps as re, TransitionGroup as oe } from "vue";
var ct = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Lt = { exports: {} };
(function(t, s) {
  (function(n, o) {
    t.exports = o();
  })(ct, function() {
    return function(n, o) {
      o.prototype.isSameOrBefore = function(y, u) {
        return this.isSame(y, u) || this.isBefore(y, u);
      };
    };
  });
})(Lt);
const ie = Lt.exports;
var $t = { exports: {} };
(function(t, s) {
  (function(n, o) {
    t.exports = o();
  })(ct, function() {
    return function(n, o) {
      o.prototype.isSameOrAfter = function(y, u) {
        return this.isSame(y, u) || this.isAfter(y, u);
      };
    };
  });
})($t);
const se = $t.exports;
var Gt = { exports: {} };
(function(t, s) {
  (function(n, o) {
    t.exports = o();
  })(ct, function() {
    return function(n, o, y) {
      o.prototype.isBetween = function(u, f, g, c) {
        var a = y(u), e = y(f), i = (c = c || "()")[0] === "(", l = c[1] === ")";
        return (i ? this.isAfter(a, g) : !this.isBefore(a, g)) && (l ? this.isBefore(e, g) : !this.isAfter(e, g)) || (i ? this.isBefore(a, g) : !this.isAfter(a, g)) && (l ? this.isAfter(e, g) : !this.isBefore(e, g));
      };
    };
  });
})(Gt);
const le = Gt.exports;
var It = { exports: {} };
(function(t, s) {
  (function(n, o) {
    t.exports = o();
  })(ct, function() {
    var n = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, o = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, y = /\d\d/, u = /\d\d?/, f = /\d*[^-_:/,()\s\d]+/, g = {}, c = function(v) {
      return (v = +v) + (v > 68 ? 1900 : 2e3);
    }, a = function(v) {
      return function(d) {
        this[v] = +d;
      };
    }, e = [/[+-]\d\d:?(\d\d)?|Z/, function(v) {
      (this.zone || (this.zone = {})).offset = function(d) {
        if (!d || d === "Z")
          return 0;
        var x = d.match(/([+-]|\d\d)/g), m = 60 * x[1] + (+x[2] || 0);
        return m === 0 ? 0 : x[0] === "+" ? -m : m;
      }(v);
    }], i = function(v) {
      var d = g[v];
      return d && (d.indexOf ? d : d.s.concat(d.f));
    }, l = function(v, d) {
      var x, m = g.meridiem;
      if (m) {
        for (var h = 1; h <= 24; h += 1)
          if (v.indexOf(m(h, 0, d)) > -1) {
            x = h > 12;
            break;
          }
      } else
        x = v === (d ? "pm" : "PM");
      return x;
    }, w = { A: [f, function(v) {
      this.afternoon = l(v, !1);
    }], a: [f, function(v) {
      this.afternoon = l(v, !0);
    }], S: [/\d/, function(v) {
      this.milliseconds = 100 * +v;
    }], SS: [y, function(v) {
      this.milliseconds = 10 * +v;
    }], SSS: [/\d{3}/, function(v) {
      this.milliseconds = +v;
    }], s: [u, a("seconds")], ss: [u, a("seconds")], m: [u, a("minutes")], mm: [u, a("minutes")], H: [u, a("hours")], h: [u, a("hours")], HH: [u, a("hours")], hh: [u, a("hours")], D: [u, a("day")], DD: [y, a("day")], Do: [f, function(v) {
      var d = g.ordinal, x = v.match(/\d+/);
      if (this.day = x[0], d)
        for (var m = 1; m <= 31; m += 1)
          d(m).replace(/\[|\]/g, "") === v && (this.day = m);
    }], M: [u, a("month")], MM: [y, a("month")], MMM: [f, function(v) {
      var d = i("months"), x = (i("monthsShort") || d.map(function(m) {
        return m.slice(0, 3);
      })).indexOf(v) + 1;
      if (x < 1)
        throw new Error();
      this.month = x % 12 || x;
    }], MMMM: [f, function(v) {
      var d = i("months").indexOf(v) + 1;
      if (d < 1)
        throw new Error();
      this.month = d % 12 || d;
    }], Y: [/[+-]?\d+/, a("year")], YY: [y, function(v) {
      this.year = c(v);
    }], YYYY: [/\d{4}/, a("year")], Z: e, ZZ: e };
    function O(v) {
      var d, x;
      d = v, x = g && g.formats;
      for (var m = (v = d.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(E, D, S) {
        var k = S && S.toUpperCase();
        return D || x[S] || n[S] || x[k].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(T, G, R) {
          return G || R.slice(1);
        });
      })).match(o), h = m.length, B = 0; B < h; B += 1) {
        var r = m[B], b = w[r], p = b && b[0], _ = b && b[1];
        m[B] = _ ? { regex: p, parser: _ } : r.replace(/^\[|\]$/g, "");
      }
      return function(E) {
        for (var D = {}, S = 0, k = 0; S < h; S += 1) {
          var T = m[S];
          if (typeof T == "string")
            k += T.length;
          else {
            var G = T.regex, R = T.parser, j = E.slice(k), z = G.exec(j)[0];
            R.call(D, z), E = E.replace(z, "");
          }
        }
        return function(F) {
          var Y = F.afternoon;
          if (Y !== void 0) {
            var V = F.hours;
            Y ? V < 12 && (F.hours += 12) : V === 12 && (F.hours = 0), delete F.afternoon;
          }
        }(D), D;
      };
    }
    return function(v, d, x) {
      x.p.customParseFormat = !0, v && v.parseTwoDigitYear && (c = v.parseTwoDigitYear);
      var m = d.prototype, h = m.parse;
      m.parse = function(B) {
        var r = B.date, b = B.utc, p = B.args;
        this.$u = b;
        var _ = p[1];
        if (typeof _ == "string") {
          var E = p[2] === !0, D = p[3] === !0, S = E || D, k = p[2];
          D && (k = p[2]), g = this.$locale(), !E && k && (g = x.Ls[k]), this.$d = function(j, z, F) {
            try {
              if (["x", "X"].indexOf(z) > -1)
                return new Date((z === "X" ? 1e3 : 1) * j);
              var Y = O(z)(j), V = Y.year, nt = Y.month, zt = Y.day, Vt = Y.hours, qt = Y.minutes, Wt = Y.seconds, Kt = Y.milliseconds, xt = Y.zone, dt = new Date(), ft = zt || (V || nt ? 1 : dt.getDate()), gt = V || dt.getFullYear(), at = 0;
              V && !nt || (at = nt > 0 ? nt - 1 : dt.getMonth());
              var ht = Vt || 0, pt = qt || 0, mt = Wt || 0, vt = Kt || 0;
              return xt ? new Date(Date.UTC(gt, at, ft, ht, pt, mt, vt + 60 * xt.offset * 1e3)) : F ? new Date(Date.UTC(gt, at, ft, ht, pt, mt, vt)) : new Date(gt, at, ft, ht, pt, mt, vt);
            } catch {
              return new Date("");
            }
          }(r, _, b), this.init(), k && k !== !0 && (this.$L = this.locale(k).$L), S && r != this.format(_) && (this.$d = new Date("")), g = {};
        } else if (_ instanceof Array)
          for (var T = _.length, G = 1; G <= T; G += 1) {
            p[1] = _[G - 1];
            var R = x.apply(this, p);
            if (R.isValid()) {
              this.$d = R.$d, this.$L = R.$L, this.init();
              break;
            }
            G === T && (this.$d = new Date(""));
          }
        else
          h.call(this, B);
      };
    };
  });
})(It);
const ue = It.exports, Rt = Symbol("CHART_ROWS_KEY"), Yt = Symbol("CONFIG_KEY"), At = Symbol("EMIT_BAR_EVENT_KEY"), Ht = Symbol("BAR_CONTAINER_KEY");
function A() {
  const t = lt(Yt);
  if (!t)
    throw Error("Failed to inject config!");
  return t;
}
const Pt = "YYYY-MM-DD HH:mm";
function tt(t = A()) {
  const { chartStart: s, chartEnd: n, barStart: o, barEnd: y, dateFormat: u } = t, f = I(() => c(s.value)), g = I(() => c(n.value)), c = (e, i) => {
    let l;
    if (i !== void 0 && typeof e != "string" && !(e instanceof Date) && (l = i === "start" ? e[o.value] : e[y.value]), typeof e == "string")
      l = e;
    else if (e instanceof Date)
      return N(e);
    const w = u.value || Pt;
    return N(l, w, !0);
  };
  return {
    chartStartDayjs: f,
    chartEndDayjs: g,
    toDayjs: c,
    format: (e, i) => i === !1 ? e instanceof Date ? e : N(e).toDate() : (typeof e == "string" || e instanceof Date ? c(e) : e).format(i)
  };
}
function Ut() {
  const { precision: t } = A(), { chartStartDayjs: s, chartEndDayjs: n } = tt(), o = I(() => {
    switch (t == null ? void 0 : t.value) {
      case "hour":
        return "day";
      case "day":
        return "month";
      case "month":
        return "year";
      default:
        throw new Error(
          "Precision prop incorrect. Must be one of the following: 'hour', 'day', 'month'"
        );
    }
  }), y = {
    hour: "HH",
    date: "DD.MMM ",
    day: "DD.MMM ",
    month: "MMMM YYYY",
    year: "YYYY"
  };
  return {
    timeaxisUnits: I(() => {
      const f = [], g = [], c = o.value === "day" ? "date" : o.value, a = t.value;
      let e = s.value.startOf(a);
      const i = n.value.diff(s.value, "minutes", !0);
      let l = 0, w = e[c]();
      for (; e.isBefore(n.value) || e.isSame(n.value); ) {
        if (e[c]() !== w) {
          let m = 0;
          if (f.length === 0)
            m = e.startOf(c).diff(s.value, "minutes", !0) / i * 100;
          else if (e.isSameOrAfter(n.value))
            m = n.value.diff(
              e.subtract(1, c).startOf(c),
              "minutes",
              !0
            ) / i * 100;
          else {
            const B = e.startOf(c), r = e.subtract(1, c).startOf(c);
            m = B.diff(r, "minutes", !0) / i * 100;
          }
          const h = e.subtract(1, c);
          f.push({
            label: h.format(y[c]),
            value: String(w),
            date: h.toDate(),
            width: String(m) + "%"
          }), l = 0, w = e[c]();
        }
        let d = 0;
        g.length === 0 ? d = e.endOf(a).diff(s.value, "minutes", !0) / i * 100 : e.add(1, a).isSameOrAfter(n.value) ? d = n.value.diff(e.startOf(a), "minutes", !0) / i * 100 : d = e.endOf(a).diff(e.startOf(a), "minutes", !0) / i * 100, g.push({
          label: e.format(y[a]),
          value: String(e[a === "day" ? "date" : a]()),
          date: e.toDate(),
          width: String(d) + "%"
        });
        const x = e;
        e = e.add(1, a), (e.isBefore(n.value) || e.isSame(n.value)) && (l += e.diff(x, "minutes", !0));
      }
      const O = n.value.isSame(n.value.startOf(c)) ? n.value[c]() - 1 : n.value[c]();
      return f.some((d) => d.value === String(O)) || (l += n.value.diff(
        e.subtract(1, a),
        "minutes",
        !0
      ), f.push({
        label: n.value.format(y[c]),
        value: String(w),
        date: n.value.toDate(),
        width: `${l / i * 100}%`
      })), { upperUnits: f, lowerUnits: g };
    })
  };
}
const ce = { class: "g-timeaxis" }, de = { class: "g-timeunits-container" }, fe = { class: "g-timeunits-container" }, ge = /* @__PURE__ */ W({
  __name: "GGanttTimeaxis",
  setup(t) {
    const { precision: s, colors: n } = A(), { timeaxisUnits: o } = Ut();
    return (y, u) => (M(), L("div", ce, [
      U("div", de, [
        (M(!0), L(Q, null, ot(C(o).upperUnits, ({ label: f, value: g, date: c, width: a }, e) => (M(), L("div", {
          key: f,
          class: "g-upper-timeunit",
          style: P({
            background: e % 2 === 0 ? C(n).primary : C(n).secondary,
            color: C(n).text,
            width: a
          })
        }, [
          H(y.$slots, "upper-timeunit", {
            label: f,
            value: g,
            date: c
          }, () => [
            it(X(f), 1)
          ])
        ], 4))), 128))
      ]),
      U("div", fe, [
        (M(!0), L(Q, null, ot(C(o).lowerUnits, ({ label: f, value: g, date: c, width: a }, e) => (M(), L("div", {
          key: f,
          class: "g-timeunit",
          style: P({
            background: e % 2 === 0 ? C(n).ternary : C(n).quartenary,
            color: C(n).text,
            flexDirection: C(s) === "hour" ? "column" : "row",
            alignItems: C(s) === "hour" ? "" : "center",
            width: a
          })
        }, [
          H(y.$slots, "timeunit", {
            label: f,
            value: g,
            date: c
          }, () => [
            it(X(f), 1)
          ]),
          C(s) === "hour" ? (M(), L("div", {
            key: 0,
            class: "g-timeaxis-hour-pin",
            style: P({ background: C(n).text })
          }, null, 4)) : Z("", !0)
        ], 4))), 128))
      ])
    ]));
  }
});
const he = { class: "g-grid-container" }, pe = /* @__PURE__ */ W({
  __name: "GGanttGrid",
  props: {
    highlightedUnits: {}
  },
  setup(t) {
    const { colors: s } = A(), { timeaxisUnits: n } = Ut();
    return (o, y) => (M(), L("div", he, [
      (M(!0), L(Q, null, ot(C(n).lowerUnits, ({ label: u, value: f, width: g }) => {
        var c;
        return M(), L("div", {
          key: u,
          class: "g-grid-line",
          style: P({
            width: g,
            background: (c = o.highlightedUnits) != null && c.includes(Number(f)) ? C(s).hoverHighlight : void 0
          })
        }, null, 4);
      }), 128))
    ]));
  }
});
const me = "cadetblue", ve = /* @__PURE__ */ W({
  __name: "GGanttBarTooltip",
  props: {
    bar: {},
    modelValue: { type: Boolean }
  },
  setup(t) {
    const s = t, n = {
      hour: "HH:mm",
      day: "DD. MMM HH:mm",
      month: "DD. MMMM YYYY"
    }, { bar: o } = J(s), { precision: y, font: u, barStart: f, barEnd: g, rowHeight: c } = A(), a = $("0px"), e = $("0px");
    ut(
      () => s.bar,
      async () => {
        var r;
        await kt();
        const d = ((r = o == null ? void 0 : o.value) == null ? void 0 : r.ganttBarConfig.id) || "";
        if (!d)
          return;
        const x = document.getElementById(d), { top: m, left: h } = (x == null ? void 0 : x.getBoundingClientRect()) || {
          top: 0,
          left: 0
        }, B = Math.max(h, 10);
        a.value = `${m + c.value - 10}px`, e.value = `${B}px`;
      },
      { deep: !0, immediate: !0 }
    );
    const i = I(() => {
      var d, x;
      return ((x = (d = o == null ? void 0 : o.value) == null ? void 0 : d.ganttBarConfig.style) == null ? void 0 : x.background) || me;
    }), { toDayjs: l } = tt(), w = I(() => {
      var d;
      return (d = o.value) == null ? void 0 : d[f.value];
    }), O = I(() => {
      var d;
      return (d = o.value) == null ? void 0 : d[g.value];
    }), v = I(() => {
      if (!(o != null && o.value))
        return "";
      const d = n[y.value], x = l(w.value).format(d), m = l(O.value).format(d);
      return `${x} \u2013 ${m}`;
    });
    return (d, x) => (M(), st(Qt, { to: "body" }, [
      wt(Xt, {
        name: "g-fade",
        mode: "out-in"
      }, {
        default: q(() => [
          d.modelValue ? (M(), L("div", {
            key: 0,
            class: "g-gantt-tooltip",
            style: P({
              top: a.value,
              left: e.value,
              fontFamily: C(u)
            })
          }, [
            U("div", {
              class: "g-gantt-tooltip-color-dot",
              style: P({ background: i.value })
            }, null, 4),
            H(d.$slots, "default", {
              bar: C(o),
              barStart: w.value,
              barEnd: O.value
            }, () => [
              it(X(v.value), 1)
            ])
          ], 4)) : Z("", !0)
        ]),
        _: 3
      })
    ]));
  }
});
const _t = {
  default: {
    primary: "#eeeeee",
    secondary: "#E0E0E0",
    ternary: "#F5F5F5",
    quartenary: "#ededed",
    hoverHighlight: "rgba(204, 216, 219, 0.5)",
    text: "#404040",
    background: "white"
  },
  creamy: {
    primary: "#ffe8d9",
    secondary: "#fcdcc5",
    ternary: "#fff6f0",
    quartenary: "#f7ece6",
    hoverHighlight: "rgba(230, 221, 202, 0.5)",
    text: "#542d05",
    background: "white"
  },
  crimson: {
    primary: "#a82039",
    secondary: "#c41238",
    ternary: "#db4f56",
    quartenary: "#ce5f64",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  dark: {
    primary: "#404040",
    secondary: "#303030",
    ternary: "#353535",
    quartenary: "#383838",
    hoverHighlight: "rgba(159, 160, 161, 0.5)",
    text: "white",
    background: "#525252",
    toast: "#1f1f1f"
  },
  flare: {
    primary: "#e08a38",
    secondary: "#e67912",
    ternary: "#5e5145",
    quartenary: "#665648",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  fuchsia: {
    primary: "#de1d5a",
    secondary: "#b50b41",
    ternary: "#ff7da6",
    quartenary: "#f2799f",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  grove: {
    primary: "#3d9960",
    secondary: "#288542",
    ternary: "#72b585",
    quartenary: "#65a577",
    hoverHighlight: "rgba(160, 219, 171, 0.5)",
    text: "white",
    background: "white"
  },
  "material-blue": {
    primary: "#0D47A1",
    secondary: "#1565C0",
    ternary: "#42a5f5",
    quartenary: "#409fed",
    hoverHighlight: "rgba(110, 165, 196, 0.5)",
    text: "white",
    background: "white"
  },
  sky: {
    primary: "#b5e3ff",
    secondary: "#a1d6f7",
    ternary: "#d6f7ff",
    quartenary: "#d0edf4",
    hoverHighlight: "rgba(193, 202, 214, 0.5)",
    text: "#022c47",
    background: "white"
  },
  slumber: {
    primary: "#2a2f42",
    secondary: "#2f3447",
    ternary: "#35394d",
    quartenary: "#2c3044",
    hoverHighlight: "rgba(179, 162, 127, 0.5)",
    text: "#ffe0b3",
    background: "#38383b",
    toast: "#1f1f1f"
  },
  vue: {
    primary: "#258a5d",
    secondary: "#41B883",
    ternary: "#35495E",
    quartenary: "#2a3d51",
    hoverHighlight: "rgba(160, 219, 171, 0.5)",
    text: "white",
    background: "white"
  }
};
var Et;
const et = typeof window < "u";
et && ((Et = window == null ? void 0 : window.navigator) == null ? void 0 : Et.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function ye(t) {
  return typeof t == "function" ? t() : C(t);
}
function be(t) {
  return t;
}
function we(t) {
  return Zt() ? (Jt(t), !0) : !1;
}
function Be(t, s = !0) {
  te() ? Tt(t) : s ? t() : kt(t);
}
function jt(t) {
  var s;
  const n = ye(t);
  return (s = n == null ? void 0 : n.$el) != null ? s : n;
}
const xe = et ? window : void 0;
et && window.document;
et && window.navigator;
et && window.location;
function _e(t, s = !1) {
  const n = $(), o = () => n.value = Boolean(t());
  return o(), Be(o, s), n;
}
const yt = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, bt = "__vueuse_ssr_handlers__";
yt[bt] = yt[bt] || {};
yt[bt];
var Ot = Object.getOwnPropertySymbols, Ee = Object.prototype.hasOwnProperty, Oe = Object.prototype.propertyIsEnumerable, Ce = (t, s) => {
  var n = {};
  for (var o in t)
    Ee.call(t, o) && s.indexOf(o) < 0 && (n[o] = t[o]);
  if (t != null && Ot)
    for (var o of Ot(t))
      s.indexOf(o) < 0 && Oe.call(t, o) && (n[o] = t[o]);
  return n;
};
function De(t, s, n = {}) {
  const o = n, { window: y = xe } = o, u = Ce(o, ["window"]);
  let f;
  const g = _e(() => y && "ResizeObserver" in y), c = () => {
    f && (f.disconnect(), f = void 0);
  }, a = ut(() => jt(t), (i) => {
    c(), g.value && y && i && (f = new ResizeObserver(s), f.observe(i, u));
  }, { immediate: !0, flush: "post" }), e = () => {
    c(), a();
  };
  return we(e), {
    isSupported: g,
    stop: e
  };
}
function Se(t, s = { width: 0, height: 0 }, n = {}) {
  const o = $(s.width), y = $(s.height);
  return De(t, ([u]) => {
    o.value = u.contentRect.width, y.value = u.contentRect.height;
  }, n), ut(() => jt(t), (u) => {
    o.value = u ? s.width : 0, y.value = u ? s.height : 0;
  }), {
    width: o,
    height: y
  };
}
var Ct;
(function(t) {
  t.UP = "UP", t.RIGHT = "RIGHT", t.DOWN = "DOWN", t.LEFT = "LEFT", t.NONE = "NONE";
})(Ct || (Ct = {}));
var Me = Object.defineProperty, Dt = Object.getOwnPropertySymbols, ke = Object.prototype.hasOwnProperty, Te = Object.prototype.propertyIsEnumerable, St = (t, s, n) => s in t ? Me(t, s, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[s] = n, Le = (t, s) => {
  for (var n in s || (s = {}))
    ke.call(s, n) && St(t, n, s[n]);
  if (Dt)
    for (var n of Dt(s))
      Te.call(s, n) && St(t, n, s[n]);
  return t;
};
const $e = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
Le({
  linear: be
}, $e);
const Ge = { class: "g-gantt-rows-container" }, Ie = /* @__PURE__ */ W({
  __name: "GGanttChart",
  props: {
    chartStart: {},
    chartEnd: {},
    precision: { default: "day" },
    barStart: {},
    barEnd: {},
    dateFormat: { type: [String, Boolean], default: Pt },
    width: { default: "100%" },
    hideTimeaxis: { type: Boolean, default: !1 },
    colorScheme: { default: "default" },
    grid: { type: Boolean, default: !1 },
    pushOnOverlap: { type: Boolean, default: !1 },
    noOverlap: { type: Boolean, default: !1 },
    rowHeight: { default: 40 },
    highlightedUnits: { default: () => [] },
    font: { default: "inherit" }
  },
  emits: ["click-bar", "mousedown-bar", "mouseup-bar", "dblclick-bar", "mouseenter-bar", "mouseleave-bar", "dragstart-bar", "drag-bar", "dragend-bar", "contextmenu-bar"],
  setup(t, { emit: s }) {
    const n = t, { width: o, font: y, colorScheme: u } = J(n), f = ee(), g = I(
      () => typeof u.value != "string" ? u.value : _t[u.value] || _t.default
    ), c = () => {
      var B;
      const m = (B = f.default) == null ? void 0 : B.call(f), h = [];
      return m && m.forEach((r) => {
        var b;
        if ((b = r.props) != null && b.bars) {
          const p = r.props.bars;
          h.push(p);
        } else
          Array.isArray(r.children) && r.children.forEach((p) => {
            var E;
            const _ = p;
            if ((E = _ == null ? void 0 : _.props) != null && E.bars) {
              const D = _.props.bars;
              h.push(D);
            }
          });
      }), h;
    }, a = $(!1), e = $(!1), i = $(void 0);
    let l;
    const w = (m) => {
      l && clearTimeout(l), l = setTimeout(() => {
        a.value = !0;
      }, 800), i.value = m;
    }, O = () => {
      clearTimeout(l), a.value = !1;
    }, v = (m, h, B, r) => {
      switch (m.type) {
        case "click":
          s("click-bar", { bar: h, e: m, datetime: B });
          break;
        case "mousedown":
          s("mousedown-bar", { bar: h, e: m, datetime: B });
          break;
        case "mouseup":
          s("mouseup-bar", { bar: h, e: m, datetime: B });
          break;
        case "dblclick":
          s("dblclick-bar", { bar: h, e: m, datetime: B });
          break;
        case "mouseenter":
          w(h), s("mouseenter-bar", { bar: h, e: m });
          break;
        case "mouseleave":
          O(), s("mouseleave-bar", { bar: h, e: m });
          break;
        case "dragstart":
          e.value = !0, s("dragstart-bar", { bar: h, e: m });
          break;
        case "drag":
          s("drag-bar", { bar: h, e: m });
          break;
        case "dragend":
          e.value = !1, s("dragend-bar", { bar: h, e: m, movedBars: r });
          break;
        case "contextmenu":
          s("contextmenu-bar", { bar: h, e: m, datetime: B });
          break;
      }
    }, d = $(null), x = Se(d);
    return rt(Rt, c), rt(Yt, {
      ...J(n),
      colors: g,
      chartSize: x
    }), rt(At, v), (m, h) => (M(), L("div", {
      ref_key: "ganttChart",
      ref: d,
      class: "g-gantt-chart",
      style: P({ width: C(o), background: g.value.background, fontFamily: C(y) })
    }, [
      m.hideTimeaxis ? Z("", !0) : (M(), st(ge, { key: 0 }, {
        "upper-timeunit": q(({ label: B, value: r, date: b }) => [
          H(m.$slots, "upper-timeunit", {
            label: B,
            value: r,
            date: b
          })
        ]),
        timeunit: q(({ label: B, value: r, date: b }) => [
          H(m.$slots, "timeunit", {
            label: B,
            value: r,
            date: b
          })
        ]),
        _: 3
      })),
      m.grid ? (M(), st(pe, {
        key: 1,
        "highlighted-units": m.highlightedUnits
      }, null, 8, ["highlighted-units"])) : Z("", !0),
      U("div", Ge, [
        H(m.$slots, "default")
      ]),
      wt(ve, {
        "model-value": a.value || e.value,
        bar: i.value
      }, {
        default: q(() => [
          H(m.$slots, "bar-tooltip", { bar: i.value })
        ]),
        _: 3
      }, 8, ["model-value", "bar"])
    ], 4));
  }
});
function Bt(t = A()) {
  const { dateFormat: s, chartSize: n } = t, { chartStartDayjs: o, chartEndDayjs: y, toDayjs: u, format: f } = tt(t), g = I(() => y.value.diff(o.value, "minutes"));
  return {
    mapTimeToPosition: (e) => {
      const i = n.width.value || 0, l = u(e).diff(o.value, "minutes", !0);
      return Math.ceil(l / g.value * i);
    },
    mapPositionToTime: (e) => {
      const i = n.width.value || 0, l = e / i * g.value;
      return f(o.value.add(l, "minutes"), s.value);
    }
  };
}
function Mt(t, s = () => null, n = () => null, o = A()) {
  const { barStart: y, barEnd: u, pushOnOverlap: f } = o, g = $(!1);
  let c = 0, a;
  const { mapPositionToTime: e } = Bt(o), { toDayjs: i } = tt(o), l = (h) => {
    const B = document.getElementById(t.ganttBarConfig.id);
    if (!B)
      return;
    switch (c = h.clientX - (B.getBoundingClientRect().left || 0), h.target.className) {
      case "g-gantt-bar-handle-left":
        document.body.style.cursor = "ew-resize", a = v;
        break;
      case "g-gantt-bar-handle-right":
        document.body.style.cursor = "ew-resize", a = d;
        break;
      default:
        a = O;
    }
    g.value = !0, window.addEventListener("mousemove", a), window.addEventListener("mouseup", m);
  }, w = () => {
    var r;
    const h = document.getElementById(t.ganttBarConfig.id), B = (r = h == null ? void 0 : h.closest(".g-gantt-row-bars-container")) == null ? void 0 : r.getBoundingClientRect();
    return { barElement: h, barContainer: B };
  }, O = (h) => {
    const { barElement: B, barContainer: r } = w();
    if (!B || !r)
      return;
    const b = B.getBoundingClientRect().width, p = h.clientX - r.left - c, _ = p + b;
    x(p, _) || (t[y.value] = e(p), t[u.value] = e(_), s(h, t));
  }, v = (h) => {
    const { barElement: B, barContainer: r } = w();
    if (!B || !r)
      return;
    const b = h.clientX - r.left, p = e(b);
    i(p).isSameOrAfter(i(t, "end")) || (t[y.value] = p, s(h, t));
  }, d = (h) => {
    const { barElement: B, barContainer: r } = w();
    if (!B || !r)
      return;
    const b = h.clientX - r.left, p = e(b);
    i(p).isSameOrBefore(i(t, "start")) || (t[u.value] = p, s(h, t));
  }, x = (h, B) => {
    if (!f.value)
      return !1;
    const r = t.ganttBarConfig.dragLimitLeft, b = t.ganttBarConfig.dragLimitRight;
    return h && r != null && h < r || B && b != null && B > b;
  }, m = (h) => {
    g.value = !1, document.body.style.cursor = "", window.removeEventListener("mousemove", a), window.removeEventListener("mouseup", m), n(h, t);
  };
  return {
    isDragging: g,
    initDrag: l
  };
}
function Ft() {
  const t = lt(Rt);
  if (!t)
    throw Error("Failed to inject getChartRows!");
  return t;
}
function Nt() {
  const t = lt(At);
  if (!t)
    throw Error("Failed to inject emitBarEvent!");
  return t;
}
function Re() {
  const t = A(), s = Ft(), n = Nt(), { pushOnOverlap: o, barStart: y, barEnd: u, noOverlap: f, dateFormat: g } = t, c = /* @__PURE__ */ new Map(), { toDayjs: a, format: e } = tt(), i = (r, b) => {
    const { initDrag: p } = Mt(r, w, m, t);
    n({ ...b, type: "dragstart" }, r), p(b), h(r);
  }, l = (r, b) => {
    const p = r.ganttBarConfig.bundle;
    p != null && (s().forEach((_) => {
      _.forEach((E) => {
        if (E.ganttBarConfig.bundle === p) {
          const D = E === r ? m : () => null, { initDrag: S } = Mt(E, w, D, t);
          S(b), h(E);
        }
      });
    }), n({ ...b, type: "dragstart" }, r));
  }, w = (r, b) => {
    n({ ...r, type: "drag" }, b), O(b);
  }, O = (r) => {
    if (!(o != null && o.value))
      return;
    let b = r, { overlapBar: p, overlapType: _ } = v(b);
    for (; p; ) {
      h(p);
      const E = a(b[y.value]), D = a(b[u.value]), S = a(p[y.value]), k = a(p[u.value]);
      let T;
      switch (_) {
        case "left":
          T = k.diff(E, "minutes", !0), p[u.value] = e(b[y.value], g.value), p[y.value] = e(
            S.subtract(T, "minutes"),
            g.value
          );
          break;
        case "right":
          T = D.diff(S, "minutes", !0), p[y.value] = e(D, g.value), p[u.value] = e(
            k.add(T, "minutes"),
            g.value
          );
          break;
        default:
          console.warn(
            "Vue-Ganttastic: One bar is inside of the other one! This should never occur while push-on-overlap is active!"
          );
          return;
      }
      p && (_ === "left" || _ === "right") && d(p, T, _), b = p, { overlapBar: p, overlapType: _ } = v(p);
    }
  }, v = (r) => {
    let b, p, _;
    const E = s().find((G) => G.includes(r)) || [], D = a(r[y.value]), S = a(r[u.value]);
    return { overlapBar: E.find((G) => {
      if (G === r)
        return !1;
      const R = a(G[y.value]), j = a(G[u.value]);
      return b = D.isBetween(R, j), p = S.isBetween(R, j), _ = R.isBetween(D, S) || j.isBetween(D, S), b || p || _;
    }), overlapType: b ? "left" : p ? "right" : _ ? "between" : null };
  }, d = (r, b, p) => {
    h(r), r.ganttBarConfig.bundle && s().forEach((_) => {
      _.forEach((E) => {
        E.ganttBarConfig.bundle === r.ganttBarConfig.bundle && E !== r && (h(E), x(E, b, p));
      });
    });
  }, x = (r, b, p) => {
    switch (p) {
      case "left":
        r[y.value] = e(
          a(r, "start").subtract(b, "minutes"),
          g.value
        ), r[u.value] = e(
          a(r, "end").subtract(b, "minutes"),
          g.value
        );
        break;
      case "right":
        r[y.value] = e(
          a(r, "start").add(b, "minutes"),
          g.value
        ), r[u.value] = e(a(r, "end").add(b, "minutes"), g.value);
    }
    O(r);
  }, m = (r, b) => {
    B();
    const p = {
      ...r,
      type: "dragend"
    };
    n(p, b, void 0, new Map(c)), c.clear();
  }, h = (r) => {
    if (!c.has(r)) {
      const b = r[y.value], p = r[u.value];
      c.set(r, { oldStart: b, oldEnd: p });
    }
  }, B = () => {
    if (o.value || !f.value)
      return;
    let r = !1;
    c.forEach((b, p) => {
      const { overlapBar: _ } = v(p);
      _ != null && (r = !0);
    }), r && c.forEach(({ oldStart: b, oldEnd: p }, _) => {
      _[y.value] = b, _[u.value] = p;
    });
  };
  return {
    initDragOfBar: i,
    initDragOfBundle: l
  };
}
function Ye() {
  const { pushOnOverlap: t } = A(), s = Ft(), n = (f) => {
    const g = [];
    return f != null && s().forEach((c) => {
      c.forEach((a) => {
        a.ganttBarConfig.bundle === f && g.push(a);
      });
    }), g;
  }, o = (f) => {
    if (!t.value || f.ganttBarConfig.pushOnOverlap === !1)
      return;
    for (const c of ["left", "right"]) {
      const a = c, { gapDistanceSoFar: e, bundleBarsAndGapDist: i } = y(
        f,
        0,
        a
      );
      let l = e;
      const w = i;
      if (!w)
        continue;
      for (let v = 0; v < w.length; v++) {
        const d = w[v].bar, x = w[v].gapDistance;
        n(d.ganttBarConfig.bundle).filter(
          (h) => h !== d
        ).forEach((h) => {
          const B = y(h, x, a), r = B.gapDistanceSoFar, b = B.bundleBarsAndGapDist;
          r != null && (!l || r < l) && (l = r), b.forEach((p) => {
            w.find((_) => _.bar === p.bar) || w.push(p);
          });
        });
      }
      const O = document.getElementById(f.ganttBarConfig.id);
      l != null && a === "left" ? f.ganttBarConfig.dragLimitLeft = O.offsetLeft - l : l != null && a === "right" && (f.ganttBarConfig.dragLimitRight = O.offsetLeft + O.offsetWidth + l);
    }
    n(f.ganttBarConfig.bundle).forEach((c) => {
      c.ganttBarConfig.dragLimitLeft = f.ganttBarConfig.dragLimitLeft, c.ganttBarConfig.dragLimitRight = f.ganttBarConfig.dragLimitRight;
    });
  }, y = (f, g = 0, c) => {
    const a = f.ganttBarConfig.bundle ? [{ bar: f, gapDistance: g }] : [];
    let e = f, i = u(e, c);
    if (c === "left")
      for (; i; ) {
        const l = document.getElementById(e.ganttBarConfig.id), w = document.getElementById(i.ganttBarConfig.id), O = w.offsetLeft + w.offsetWidth;
        if (g += l.offsetLeft - O, i.ganttBarConfig.immobile)
          return { gapDistanceSoFar: g, bundleBarsAndGapDist: a };
        i.ganttBarConfig.bundle && a.push({
          bar: i,
          gapDistance: g
        }), e = i, i = u(i, "left");
      }
    if (c === "right")
      for (; i; ) {
        const l = document.getElementById(e.ganttBarConfig.id), w = document.getElementById(i.ganttBarConfig.id), O = l.offsetLeft + l.offsetWidth;
        if (g += w.offsetLeft - O, i.ganttBarConfig.immobile)
          return { gapDistanceSoFar: g, bundleBarsAndGapDist: a };
        i.ganttBarConfig.bundle && a.push({
          bar: i,
          gapDistance: g
        }), e = i, i = u(i, "right");
      }
    return { gapDistanceSoFar: null, bundleBarsAndGapDist: a };
  }, u = (f, g) => {
    const c = document.getElementById(f.ganttBarConfig.id), a = s().find((i) => i.includes(f)) || [];
    let e = [];
    return g === "left" ? e = a.filter((i) => {
      const l = document.getElementById(i.ganttBarConfig.id);
      return l && l.offsetLeft < c.offsetLeft && i.ganttBarConfig.pushOnOverlap !== !1;
    }) : e = a.filter((i) => {
      const l = document.getElementById(i.ganttBarConfig.id);
      return l && l.offsetLeft > c.offsetLeft && i.ganttBarConfig.pushOnOverlap !== !1;
    }), e.length > 0 ? e.reduce((i, l) => {
      const w = document.getElementById(i.ganttBarConfig.id), O = document.getElementById(l.ganttBarConfig.id), v = Math.abs(w.offsetLeft - c.offsetLeft), d = Math.abs(O.offsetLeft - c.offsetLeft);
      return v < d ? i : l;
    }, e[0]) : null;
  };
  return {
    setDragLimitsOfGanttBar: o
  };
}
const Ae = ["id"], He = { class: "g-gantt-bar-label" }, Pe = /* @__PURE__ */ U("div", { class: "g-gantt-bar-handle-left" }, null, -1), Ue = /* @__PURE__ */ U("div", { class: "g-gantt-bar-handle-right" }, null, -1), je = /* @__PURE__ */ W({
  __name: "GGanttBar",
  props: {
    bar: {}
  },
  setup(t) {
    const s = t, n = Nt(), o = A(), { rowHeight: y } = o, { bar: u } = J(s), { mapTimeToPosition: f, mapPositionToTime: g } = Bt(), { initDragOfBar: c, initDragOfBundle: a } = Re(), { setDragLimitsOfGanttBar: e } = Ye(), i = $(!1), l = I(() => u.value.ganttBarConfig);
    function w(E) {
      l.value.bundle != null ? a(u.value, E) : c(u.value, E), i.value = !0;
    }
    const O = () => {
      e(u.value), !l.value.immobile && (window.addEventListener("mousemove", w, {
        once: !0
      }), window.addEventListener(
        "mouseup",
        () => {
          window.removeEventListener("mousemove", w), i.value = !1;
        },
        { once: !0 }
      ));
    }, v = lt(Ht), d = (E) => {
      var k;
      E.preventDefault(), E.type === "mousedown" && O();
      const D = (k = v == null ? void 0 : v.value) == null ? void 0 : k.getBoundingClientRect();
      if (!D)
        return;
      const S = g(E.clientX - D.left);
      n(E, u.value, S);
    }, { barStart: x, barEnd: m, width: h, chartStart: B, chartEnd: r, chartSize: b } = o, p = $(0), _ = $(0);
    return Tt(() => {
      ut(
        [u, h, B, r, b.width],
        () => {
          p.value = f(u.value[x.value]), _.value = f(u.value[m.value]);
        },
        { deep: !0, immediate: !0 }
      );
    }), (E, D) => (M(), L("div", {
      id: l.value.id,
      class: ne(["g-gantt-bar", l.value.class || ""]),
      style: P({
        ...l.value.style,
        position: "absolute",
        top: `${C(y) * 0.1}px`,
        left: `${p.value}px`,
        width: `${_.value - p.value}px`,
        height: `${C(y) * 0.8}px`,
        zIndex: i.value ? 3 : 2
      }),
      onMousedown: d,
      onClick: d,
      onDblclick: d,
      onMouseenter: d,
      onMouseleave: d,
      onContextmenu: d
    }, [
      U("div", He, [
        H(E.$slots, "default", { bar: C(u) }, () => [
          U("div", null, X(l.value.label || ""), 1)
        ])
      ]),
      l.value.hasHandles ? (M(), L(Q, { key: 0 }, [
        Pe,
        Ue
      ], 64)) : Z("", !0)
    ], 46, Ae));
  }
});
const Fe = /* @__PURE__ */ W({
  __name: "GGanttRow",
  props: {
    label: {},
    bars: {},
    highlightOnHover: { type: Boolean }
  },
  emits: ["drop"],
  setup(t, { emit: s }) {
    const n = t, { rowHeight: o, colors: y } = A(), { highlightOnHover: u } = J(n), f = $(!1), g = I(() => ({
      height: `${o.value}px`,
      background: (u == null ? void 0 : u.value) && f.value ? y.value.hoverHighlight : null
    })), { mapPositionToTime: c } = Bt(), a = $(null);
    rt(Ht, a);
    const e = (i) => {
      var v;
      const l = (v = a.value) == null ? void 0 : v.getBoundingClientRect();
      if (!l) {
        console.error("Vue-Ganttastic: failed to find bar container element for row.");
        return;
      }
      const w = i.clientX - l.left, O = c(w);
      s("drop", { e: i, datetime: O });
    };
    return (i, l) => (M(), L("div", {
      class: "g-gantt-row",
      style: P(g.value),
      onDragover: l[0] || (l[0] = ae((w) => f.value = !0, ["prevent"])),
      onDragleave: l[1] || (l[1] = (w) => f.value = !1),
      onDrop: l[2] || (l[2] = (w) => e(w)),
      onMouseover: l[3] || (l[3] = (w) => f.value = !0),
      onMouseleave: l[4] || (l[4] = (w) => f.value = !1)
    }, [
      U("div", {
        class: "g-gantt-row-label",
        style: P({ background: C(y).primary, color: C(y).text })
      }, [
        H(i.$slots, "label", {}, () => [
          it(X(i.label), 1)
        ])
      ], 4),
      U("div", re({
        ref_key: "barContainer",
        ref: a,
        class: "g-gantt-row-bars-container"
      }, i.$attrs), [
        wt(oe, {
          name: "bar-transition",
          tag: "div"
        }, {
          default: q(() => [
            (M(!0), L(Q, null, ot(i.bars, (w) => (M(), st(je, {
              key: w.ganttBarConfig.id,
              bar: w
            }, {
              default: q(() => [
                H(i.$slots, "bar-label", { bar: w })
              ]),
              _: 2
            }, 1032, ["bar"]))), 128))
          ]),
          _: 3
        })
      ], 16)
    ], 36));
  }
});
function Ne() {
  N.extend(ie), N.extend(se), N.extend(le), N.extend(ue);
}
const We = {
  install(t, s) {
    Ne(), t.component("GGanttChart", Ie), t.component("GGanttRow", Fe);
  }
};
function K(t, s = "top") {
  if (!t || typeof document > "u")
    return;
  const n = document.head, o = document.createElement("style");
  s === "top" && n.firstChild ? n.insertBefore(o, n.firstChild) : n.appendChild(o), o.appendChild(document.createTextNode(t));
}
K(`
.g-gantt-chart {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  border-radius: 5px;
  font-feature-settings: "tnum";
  font-variant-numeric: tabular-nums;
}
.g-gantt-rows-container {
  position: relative;
}
`, "top");
K(`
.g-gantt-row {
  width: 100%;
  transition: background 0.4s;
  position: relative;
}
.g-gantt-row > .g-gantt-row-bars-container {
  position: relative;
  border-top: 1px solid #eaeaea;
  width: 100%;
  border-bottom: 1px solid #eaeaea;
}
.g-gantt-row-label {
  position: absolute;
  top: 0;
  left: 0px;
  padding: 0px 8px;
  display: flex;
  align-items: center;
  height: 60%;
  min-height: 20px;
  font-size: 0.8em;
  font-weight: bold;
  border-bottom-right-radius: 6px;
  background: #f2f2f2;
  z-index: 3;
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.6);
}
.bar-transition-leave-active,
.bar-transition-enter-active {
  transition: all 0.2s;
}
.bar-transition-enter-from,
.bar-transition-leave-to {
  transform: scale(0.8);
  opacity: 0;
}
`, "top");
K(`
.g-timeaxis {
  position: sticky;
  top: 0;
  width: 100%;
  height: 8vh;
  min-height: 75px;
  background: white;
  z-index: 4;
  box-shadow: 0px 1px 3px 2px rgba(50, 50, 50, 0.5);
  display: flex;
  flex-direction: column;
}
.g-timeunits-container {
  display: flex;
  width: 100%;
  height: 50%;
}
.g-timeunit {
  height: 100%;
  font-size: 65%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.g-upper-timeunit {
  display: flex;
  height: 100%;
  justify-content: center;
  align-items: center;
}
.g-timeaxis-hour-pin {
  width: 1px;
  height: 10px;
}
`, "top");
K(`
.g-gantt-tooltip {
  position: fixed;
  background: black;
  color: white;
  z-index: 4;
  font-size: 0.85em;
  padding: 5px;
  border-radius: 3px;
  transition: opacity 0.2s;
  display: flex;
  align-items: center;
  font-feature-settings: "tnum";
  font-variant-numeric: tabular-nums;
}
.g-gantt-tooltip:before {
  content: "";
  position: absolute;
  top: 0;
  left: 10%;
  width: 0;
  height: 0;
  border: 10px solid transparent;
  border-bottom-color: black;
  border-top: 0;
  margin-left: -5px;
  margin-top: -5px;
}
.g-gantt-tooltip-color-dot {
  width: 8px;
  height: 8px;
  border-radius: 100%;
  margin-right: 4px;
}
.g-fade-enter-active,
.g-fade-leave-active {
  transition: opacity 0.3s ease;
}
.g-fade-enter-from,
.g-fade-leave-to {
  opacity: 0;
}
`, "top");
K(`
.g-grid-container {
  position: absolute;
  top: 0;
  left: 0%;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
}
.g-grid-line {
  width: 1px;
  height: 100%;
  border-left: 1px solid #eaeaea;
}
`, "top");
K(`
.g-gantt-bar {
  display: flex;
  justify-content: center;
  align-items: center;
  background: cadetblue;
  overflow: hidden;
}
.g-gantt-bar-label {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  padding: 0 14px 0 14px; /* 14px is the width of the handle */
  display: flex;
  justify-content: center;
  align-items: center;
}
.g-gantt-bar-label > * {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.g-gantt-bar-handle-left,
.g-gantt-bar-handle-right {
  position: absolute;
  width: 10px;
  height: 100%;
  background: white;
  opacity: 0.7;
  border-radius: 0px;
  cursor: ew-resize;
  top: 0;
}
.g-gantt-bar-handle-left {
  left: 0;
}
.g-gantt-bar-handle-right {
  right: 0;
}
.g-gantt-bar-label img {
  pointer-events: none;
}
`, "top");
export {
  Ie as GGanttChart,
  Fe as GGanttRow,
  We as default,
  Ne as extendDayjs,
  We as ganttastic
};
